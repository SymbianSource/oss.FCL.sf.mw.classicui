#include <eikon.hrh>

#include <uikon.rh>

#if !defined(__BADEF_RH__)
#include <BADEF.RH>
#endif

#if !defined(__UIKON_HRH__)
#include <uikon.hrh>
#endif


STRUCT BTG_RESOURCE_COLLECTION
    {
    STRUCT btg_sets[];
    STRUCT btg_buttons[];
    }/*
* Copyright (c) 1997-1999 Nokia Corporation and/or its subsidiary(-ies).
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description:
*
*/


#define AKN_EDITOR_EXTENSIONS\
	WORD default_case=EAknEditorTextCase;\
	WORD allowed_case_modes=EAknEditorAllCaseModes;\
	WORD numeric_keymap=EAknEditorAlphanumericNumberModeKeymap;\
	WORD allowed_input_modes=EAknEditorAllInputModes;\
	WORD default_input_mode=EAknEditorTextInputMode;\
	LLINK special_character_table=-1;\
	WORD avkon_flags=EAknEditorFlagDefault;\
	WORD max_view_height_in_lines=0;\
	WORD base_line_delta=0;\
	WORD spare=0;

STRUCT EDWIN
    {
    LONG flags=0;
    WORD width=0;
    WORD lines=1;
    WORD maxlength=0;
	AKN_EDITOR_EXTENSIONS
    }

// EIKIMAGE.RH
//
// Copyright (c) 1997-1999 Symbian Ltd.  All rights reserved.
//


STRUCT IMAGE
	{
	WORD horiz_align=EEikLabelAlignHCenter;
	WORD vert_align=EEikLabelAlignVTop;
	LTEXT bmpfile="";
    WORD bmpid;
    WORD bmpmask=0xffff;
	LLINK extension=0;
	}

// EIKLABEL.RH
//
// Copyright (c) 1997-1999 Symbian Ltd.  All rights reserved.
//

STRUCT LABEL
    {
	WORD flags = 0;
	WORD horiz_align=EEikLabelAlignHCenter;
	WORD vert_align=EEikLabelAlignVTop;
	WORD standard_font=EEikLabelFontNormal;
	WORD reserve_length=0;
    LTEXT txt;
    }

// EIKLBX.RH
//
// Copyright (c) 1997-1999 Symbian Ltd.  All rights reserved.
//

STRUCT LISTBOX
	{
	BYTE version=0;
	LONG flags = 0;
	WORD height = 5;		// in items
	WORD width = 10;		// in chars
    LLINK array_id = 0;
	}


// EIKMENU.RH
//
// Copyright (c) 1997-1999 Symbian Ltd.  All rights reserved.
//

STRUCT MENU_PANE
    {
    STRUCT items[]; // MENU_ITEMs
	LLINK extension=0;
    }

STRUCT MENU_ITEM
    {
    LONG command=0;
    LLINK cascade=0;
    LONG flags=0;
    LTEXT txt;
	LTEXT extratxt="";
	LTEXT bmpfile="";
    WORD bmpid=0xffff;
    WORD bmpmask=0xffff;
	LLINK extension=0;
    }

STRUCT MENU_BAR
    {
    STRUCT titles[]; // MENU_BAR_ITEMs
	LLINK extension=0;
    }

STRUCT MENU_TITLE
    {
    LLINK menu_pane;
    LTEXT txt;
    LONG flags=0;
	LTEXT bmpfile="";
    WORD bmpid=0xffff;
    WORD bmpmask=0xffff;
	LLINK extension=0;
    }


// EIKMNBUT.RH
//
// Copyright (c) 1997-1999 Symbian Ltd.  All rights reserved.
//

//#include <eikcmbut.hrh>

STRUCT MNBUT
    {
	LLINK popout=0;
	BYTE version=0;
	WORD behavior=0;
	WORD layout=0; // ETextRightPictureLeft
	LTEXT helptxt="";
	LLINK extension=0;
    LTEXT txt="";
	LTEXT bmpfile="";
    WORD bmpid=0xffff;
    WORD bmpmask=0xffff;
    }

// EIKTBAR.RH
//
// Copyright (c) 1997-1999 Symbian Ltd.  All rights reserved.
//


STRUCT TOOLBAR
    {
	WORD length=0;
	WORD breadth=KEikStdToolBarWidth;
	BYTE lines=1;
    LONG flags=0;
    STRUCT controls[];
	LLINK extension=0;
    }

STRUCT TOOLBAND
    {
	WORD length=0;
	WORD breadth=KEikStdToolBandHeight;
	BYTE lines=1;
    LONG flags=EEikToolBarHorizontal;
    STRUCT controls[];
	LLINK extension=0;
    }

STRUCT TBAR_CTRL
	{
	WORD type;
	WORD id=0;
	WORD flags=0;
	WORD length=0;
	STRUCT control;
	}

STRUCT TBAR_BUTTON
	{
	WORD type=0; // EEikCtCommandButton;
	WORD id=0;
	WORD flags=0;
	WORD length=0;
	BYTE version=0;
	WORD behavior=0;
	WORD layout=0; // ETextRightPictureLeft|EEikCmdButShareExcess
	LTEXT helptxt="";
	LLINK extension=0;
    LTEXT txt="";
	LTEXT bmpfile="";
    WORD bmpid=0xffff;
    WORD bmpmask=0xffff;
	}

STRUCT TBAR_PICBUT
	{			
	WORD type=EEikCtTwoPictureCommandButton;
	WORD id=0;
	WORD flags=0;
	WORD length=0;
	BYTE version=0;
	WORD behavior=0;
	WORD layout=0; // ETextRightPictureLeft|EEikCmdButShareExcess
	LTEXT helptxt="";
	LLINK extension=0;
    LTEXT txt="";
	LTEXT bmpfile="";
    WORD bmpid=0xffff;
    WORD bmpmask=0xffff;
    WORD bmpsecondid=0xffff;
    WORD bmpsecondmask=0xffff;
	}

// EIKCMBUT.RH
//
// Copyright (c) 1997-1999 Symbian Ltd.  All rights reserved.
//


STRUCT CMBUT
    {
	BYTE version=0;
	WORD behavior=0;
	WORD layout=0; // ETextRightPictureLeft|EEikCmdButShareExcess
	LTEXT helptxt="";
	LLINK extension=0;
	LTEXT txt="";
	LTEXT bmpfile="";
    WORD bmpid=0xffff;
    WORD bmpmask=0xffff;
    }

STRUCT PICMBUT
    {
	BYTE version=0;
	WORD behavior=0;
	WORD layout=0;	// ETextRightPictureLeft|EEikCmdButShareExcess
	LTEXT helptxt="";
	LLINK extension=0;
	LTEXT txt="";
	LTEXT bmpfile="";
    WORD bmpid=0xffff;
    WORD bmpmask=0xffff;
    WORD bmpsecondid=0xffff;
    WORD bmpsecondmask=0xffff;
    }

STRUCT TXTBUT
    {
	BYTE version=0;
	WORD behavior=0;
	WORD layout=0; // EFirstRightSecondLeft|EEikCmdButShareExcess
	LTEXT helptxt="";
	LLINK extension=0;
    LTEXT txt1="";
    LTEXT txt2="";
    }

STRUCT BMPBUT
    {
	BYTE version=0;
	WORD behavior=0;
	WORD layout=0; // ETextRightPictureLeft|EEikCmdButShareExcess
	LTEXT helptxt="";
	LLINK extension=0;
	LTEXT bmp1file="";
    WORD bmp1id=0xffff;
    WORD bmp1mask;
	LTEXT bmp2file="";
    WORD bmp2id=0xffff;
    WORD bmp2mask;
    }


// EIKLBBUT.RH
//
// Copyright (c) 1997-1999 Symbian Ltd.  All rights reserved.
//


STRUCT LBBUT
    {
	WORD buttontype=0; // EEikCtCommandButton
	STRUCT button;
	LONG hotkey;
	BYTE flags=1; // EEikLabeledButtonShowHotKey
    }

STRUCT CONTROLS
	{
	LEN BYTE STRUCT controls[];
	}

// EIKDIALG.RH
//
// Copyright (c) 1997-1999 Symbian Ltd.  All rights reserved.
//

// only buttons defined in Uikon

STRUCT DLG_BUTTONS
    {
	LONG flags=EEikButtonGroupAddToStack;
    STRUCT buttons[];
    }

STRUCT DLG_BUTTON
    {
	WORD id=0;
	WORD buttontype=0; // EEikCtCommandButton
	STRUCT button;
	LONG hotkey;
	BYTE flags=1;
	BYTE line=1;
    }


// EIKCBA.RH
//
// Copyright (c) 1998 Symbian Ltd.  All rights reserved.
//

STRUCT CBA
	{
	LONG flags=EEikButtonGroupAddToStack;
	WORD breadth=80; // !!! make this accessible from LAF
	LLINK related_buttons=0;
   	STRUCT buttons[];
	}

STRUCT CBA_BUTTON
	{
	BYTE version=0;
	WORD id=0;
   	LTEXT txt="";
	LTEXT bmpfile="";
  	WORD bmpid=0xffff;		// -1
    WORD bmpmask=0xffff;	// -1
	}


// EIKDIALG.RH
//
// Copyright (c) 1997-1999 Symbian Ltd.  All rights reserved.
//

// buttons are defined in Uikon

STRUCT DIALOG
    {
    LONG flags=0;
    LTEXT title="";
	LLINK pages=0;
    LLINK buttons=0;
    STRUCT items[];
	LLINK form=0;
    }

STRUCT DLG_LINE
    {
    WORD type;
    LTEXT prompt;
    WORD id=0;
	LONG itemflags=0;
    STRUCT control;
	LTEXT trailer="";
	LTEXT bmpfile = "" ;   // NEW AVKON bitmap filename 
	WORD bmpid = 0xffff ; // NEW AVKON icon image ID
	WORD bmpmask ;		// NEW AVKON icon mask ID
	LTEXT tooltip = "" ;	// NEW AVKON hint text for form line
    }

STRUCT DLG_LINE_INDIRECT
    {
    WORD type=EEikDlgItemIndirect;
	LLINK line;
    }

STRUCT PAGE
	{
	WORD id=0;
	LTEXT text;
	LTEXT bmpfile = "" ;   // NEW AVKON bitmap filename 
	WORD bmpid = 0xffff ; // NEW AVKON icon image ID
	WORD bmpmask ;		// NEW AVKON icon mask ID
	LLINK lines=0;
	LLINK form=0 ;	
	WORD flags=0 ;	
	}

STRUCT DIALOG_INDIRECT
    {
    LONG flags=0;
    LTEXT title;
	LLINK pages=0;
    LLINK buttons=0;
    WORD count=EEikDlgMainPageIndirect;
	LLINK main=0;
    }

STRUCT FORM
	{
	WORD flags=0 ;
	STRUCT items[] ;
	}

// EIKDTLBX.RH
//
// Copyright (c) 1998 Symbian Ltd.  All rights reserved.
//

STRUCT DTLBOX
	{
	WORD flags=0;
	WORD modelflags=0;
	WORD height=5;	// in items
	WORD width=0;	// in pixels
	}

// EIKIMGAR.RH
//
// Copyright (c) 1997-1999 Symbian Ltd.  All rights reserved.
//

STRUCT IMAGE_ARRAY
	{
	WORD width=0;
	LLINK array_id=0;
	}

// EIKCAL.RH
//
// Copyright (c) 1997-1999 Symbian Ltd.  All rights reserved.
//

//
// calendar STRUCT
//

STRUCT CALENDAR
	{
	WORD flags=0; // a combination of EEikCalendarFlagXxxxxs
	BYTE nummonths;
	BYTE nummonthsperrowofmonths;
	WORD verticalspaceaboveyear;
	WORD verticalspacebetweenyearandtoprowofmonths;
	WORD verticalspacebetweeneachrowofmonths;
	WORD verticalspacebeneathbottomrowofmonths;
	WORD horizontalspaceoneachsideofmonthmatrix;
	WORD horizontalspacebetweeneachcolumnofmonths;
	WORD verticalspacebetweenmonthnameanddaynameinitials;
	WORD verticalspacebetweendaynameinitialsandtoprowofdays;
	WORD verticalspacebetweeneachrowofdays;
	WORD horizontalspacebetweeneachcolumnofdays;
	STRUCT yearfont; // FONT
	STRUCT monthfont;
	STRUCT weekdayinitialfont;
	STRUCT numeralfont;
	LTEXT textseparatingyearrange;
	}


// EIKCLOCK.RH
//
// Copyright (c) 1997-1999 Symbian Ltd.  All rights reserved.
//

//
// primitive STRUCTs
//

STRUCT POINT
	{
	WORD x;
	WORD y;
	}
/* by H.Domon,K3 19 Apr 2001
STRUCT CLOCK_SHADOW
	{
	BYTE donotchange=1;
	STRUCT color; // COLOR
	BYTE offsetX;
	BYTE offsetY;
	}

STRUCT NO_CLOCK_SHADOW
	{
	BYTE donotchange=0;
	}
by H.Domon,K3 19 Apr 2001
*/
STRUCT CLOCK_PEN_SOLID
	{
	BYTE donotchange=1;
	BYTE color; // COLOR	// By H.Domon,K3. 23 Aug 2001
	BYTE size;
	}
/* by H.Domon,K3 19 Apr 2001
STRUCT CLOCK_PEN_NULL
	{
	BYTE donotchange=0;
	}

STRUCT CLOCK_BRUSH_SOLID
	{
	BYTE donotchange=1;
	STRUCT color; // COLOR
	}

STRUCT CLOCK_BRUSH_NULL
	{
	BYTE donotchange=0;
	}

//
// general clock STRUCT
//

STRUCT CLOCK
	{
	BYTE type=EEikLocaleConformantClockTypeChangesFormatAccordingToLocale; // one of the EEikLocaleConformantClockTypeXxxxxs
	BYTE typeneverchanges=0;
	LLINK digitalresourceid; // DIGITAL_CLOCK
	LLINK analogresourceid; // ANALOG_CLOCK_WITH_MASKED_FACE or ANALOG_CLOCK_WITH_UNMASKED_FACE
	}

//
// digital clock STRUCTs
//

STRUCT DIGITAL_CLOCK_TEXT_SECTION_TEXT_BLOCK
	{
	LTEXT text;
	}

STRUCT DIGITAL_CLOCK_TEXT_SECTION
	{
	STRUCT font; // FONT
	STRUCT textcolor; // COLOR
	BYTE horizontalalignment; // one of the EEikResourceConstructedClockDigitalDisplayHorizontalTextAlignmentXxxxxs
	BYTE verticalalignment; // one of the EEikResourceConstructedClockDigitalDisplayVerticalTextAlignmentXxxxxs
	WORD horizontalmargin=0;
	WORD verticalmargin=0;
	LEN BYTE STRUCT textblocks[]; // DIGITAL_CLOCK_TEXT_SECTION_TEXT_BLOCKs - will each be interspersed with a flashing-block delimiter
	}

STRUCT DIGITAL_CLOCK
	{
	BYTE withsingleblackborder=1;
	WORD offsetfromuniversaltime=0;
	STRUCT shadow; // CLOCK_SHADOW or NO_CLOCK_SHADOW
	STRUCT backgroundcolor; // COLOR
	LEN BYTE STRUCT textsections[]; // DIGITAL_CLOCK_TEXT_SECTIONs
	}

//
// analog clock STRUCTs
//
by H.Domon,K3 19 Apr 2001
*/
STRUCT ANALOG_CLOCK_HAND_FEATURE_LINE
	{
	STRUCT pen; // CLOCK_PEN_SOLID or CLOCK_PEN_NULL
	STRUCT startpoint; // POINT
	STRUCT endpoint; // POINT
	}
/* by H.Domon,K3 19 Apr 2001
STRUCT ANALOG_CLOCK_HAND_FEATURE_POLY_LINE
	{
	STRUCT pen; // CLOCK_PEN_SOLID or CLOCK_PEN_NULL
	STRUCT brush; // CLOCK_BRUSH_SOLID or CLOCK_BRUSH_NULL
	BYTE closed;
	LEN BYTE STRUCT points[]; // POINTs
	}

STRUCT ANALOG_CLOCK_HAND_FEATURE_CIRCLE
	{
	STRUCT pen; // CLOCK_PEN_SOLID or CLOCK_PEN_NULL
	STRUCT brush; // CLOCK_BRUSH_SOLID or CLOCK_BRUSH_NULL
	STRUCT circlecenter; // POINT
	WORD radius;
	}

STRUCT ANALOG_CLOCK_HAND_FEATURE
	{
	BYTE type; // one of the EEikResourceConstructedClockAnalogDisplayHandFeatureXxxxxs
	STRUCT feature; // ANALOG_CLOCK_HAND_FEATURE_LINE, ANALOG_CLOCK_HAND_FEATURE_POLY_LINE, or ANALOG_CLOCK_HAND_FEATURE_CIRCLE depending on "type"
	}

STRUCT ANALOG_CLOCK_HAND
	{
	BYTE type; // one of the EEikResourceConstructedClockAnalogDisplayHandOneRevPerXxxxxs
	LEN BYTE STRUCT features[]; // ANALOG_CLOCK_HAND_FEATUREs
	}

STRUCT ANALOG_CLOCK_WITH_MASKED_FACE
	{
	BYTE withsingleblackborder=0;
	WORD offsetfromuniversaltime=0;
	STRUCT shadow; // CLOCK_SHADOW or NO_CLOCK_SHADOW
	LTEXT filecontainingface=""; // defaults to the system multi-bitmap file
	LONG faceid; // a value defined in a *.MBG file
	BYTE donotchange=1;
	LTEXT filecontainingfacemask=""; // defaults to the system multi-bitmap file
	LONG facemaskid; // a value defined in a *.MBG file
	LEN BYTE STRUCT hands[]; // ANALOG_CLOCK_HANDs
	}

STRUCT ANALOG_CLOCK_WITH_UNMASKED_FACE
	{
	BYTE withsingleblackborder=0;
	WORD offsetfromuniversaltime=0;
	STRUCT shadow; // CLOCK_SHADOW or NO_CLOCK_SHADOW
	LTEXT filecontainingface=""; // defaults to the system multi-bitmap file
	LONG faceid; // a value defined in a *.MBG file
	BYTE donotchange=0;
	LEN BYTE STRUCT hands[]; // ANALOG_CLOCK_HANDs
	}
by H.Domon,K3 19 Apr 2001
*/
// EIKCMBOX.RH
//
// Copyright (c) 1997-1999 Symbian Ltd.  All rights reserved.
//

STRUCT COMBOBOX
	{
    WORD width; // in characters
	WORD maxlength;
	WORD maxarraysize;
	}

// EIKFPNE.RH
//
// Copyright (c) 1997-1999 Symbian Ltd.  All rights reserved.
//

STRUCT FLPTED
	{
	WORD maxlength=18;
	DOUBLE min=-9.9e99;
	DOUBLE max=9.9e99;
	DOUBLE default=0; // if !(min<=default<=max), default = min.
	}

STRUCT FIXPTED
	{
	WORD decimalplaces=2;// arbitrary, = number of pence in the pound
	LONG min;
	LONG max;
	LONG default=0; // if !(min<=default<=max), default = min.
	}

STRUCT TWIPSED
	{
	LONG min=0;// but can be set negative
	LONG max;
	}

// EIKGYSEL.RH
//
// Copyright (c) 1997-1999 Symbian Ltd.  All rights reserved.
//

STRUCT GRAYSEL
	{
    WORD flags=0;
	}

//#include <eikgysel.hrh>

// EIKHOPBT.RH
//
// Copyright (c) 1997-1999 Symbian Ltd.  All rights reserved.
//

STRUCT HOROPBUT
	{
	WORD buttonSpacing=12;
	WORD textOnRight=0;
	LLINK array_id=0;
	}

STRUCT OPBUT
	{
    WORD id=0;
    LTEXT text;
	}

// EIKMFNE.RH
//
// Copyright (c) 1997-1999 Symbian Ltd.  All rights reserved.
//

//#include <eikmfne.hrh>

//
// primitive STRUCTs
//

STRUCT TIME
	{
	BYTE second=0;
	BYTE minute=0;
	BYTE hour=0;
	}

STRUCT DATE
	{
	BYTE day=0; // from 0 to 27/28/29/30 inclusive
	BYTE month=0; // from 0 to 11 inclusive
	WORD year;
	}

STRUCT TIME_AND_DATE
	{
	BYTE second=0;
	BYTE minute=0;
	BYTE hour=0;
	BYTE day=0; // from 0 to 27/28/29/30 inclusive
	BYTE month=0; // from 0 to 11 inclusive
	WORD year;
	}

STRUCT DURATION
	{
	LONG seconds=0; // must be greater than or equal to zero
	}

STRUCT TIME_OFFSET
	{
	LONG seconds=0;
	}

STRUCT LATITUDE_AND_LONGITUDE
	{
	LTEXT degreesign;
	LTEXT minutesign;
	LTEXT secondsign;
	LTEXT north;
	WORD keytomatchfornorth;
	LTEXT south;
	WORD keytomatchforsouth;
	LTEXT east;
	WORD keytomatchforeast;
	LTEXT west;
	WORD keytomatchforwest;
	}

STRUCT MFNE_SYMBOLIC_ITEM
	{
	LONG id;
	WORD keytomatch;
	LTEXT text;
	}

STRUCT CELL
	{
	WORD row=0;
	WORD col=0;
	}

//
// STRUCTs for the different types of field
//

STRUCT MFNE_SEPARATOR
	{
	LTEXT text;
	}

STRUCT MFNE_NUMBER
	{
	LONG min;
	LONG max;
	BYTE flags=0;
	}

STRUCT MFNE_SYMBOL
	{
	LEN BYTE STRUCT symbolicitems[]; // MFNE_SYMBOLIC_ITEMs
	}

//
// STRUCTs for the different types of mfne
//

STRUCT NUMBER_EDITOR
	{
	LONG min;
	LONG max;
	}

STRUCT RANGE_EDITOR
	{
	LONG min;
	LONG max;
	LTEXT separatortext="-";
	}

STRUCT CELL_RANGE_EDITOR
	{
	STRUCT minCell; // CELL
	STRUCT maxCell; // CELL
	LTEXT separatortext=":";
	}

STRUCT TIME_EDITOR
	{
	STRUCT minTime; // TIME
	STRUCT maxTime; // TIME
	BYTE flags=0; // permitted flags: EEikTimeWithout[Seconds][Hours]Field
	}

STRUCT DATE_EDITOR
	{
	STRUCT minDate; // DATE
	STRUCT maxDate; // DATE
	BYTE flags=0; // permitted flags: EEikDateWithoutPopoutCalendar
	}

STRUCT TIME_AND_DATE_EDITOR
	{
	STRUCT minTimeAndDate; // TIME_AND_DATE
	STRUCT maxTimeAndDate; // TIME_AND_DATE
	BYTE flags=0; // permitted flags: EEikTimeWithout[Seconds][Hours]Field|EEikDateWithoutPopoutCalendar
	LTEXT interveningtext=" ";
	}

STRUCT DURATION_EDITOR
	{
	STRUCT minDuration; // DURATION
	STRUCT maxDuration; // DURATION
	BYTE flags=0; // permitted flags: EEikTimeWithout[Seconds][Hours]Field
	}

STRUCT TIME_OFFSET_EDITOR
	{
	STRUCT minTimeOffset; // TIME_OFFSET
	STRUCT maxTimeOffset; // TIME_OFFSET
	BYTE flags=0; // permitted flags: EEikTimeWithout[Seconds][Hours]Field
	}

STRUCT LATITUDE_EDITOR
	{
	LONG flags=0;
	LLINK latlongresourceid; // LATITUDE_AND_LONGITUDE
	}

STRUCT LONGITUDE_EDITOR
	{
	LONG flags=0;
	LLINK latlongresourceid; // LATITUDE_AND_LONGITUDE
	}

// EIKPROGI.RH
//
// Copyright (c) 1997-1999 Symbian Ltd.  All rights reserved.
//

STRUCT PROGRESSINFO
 	{
    WORD text_type=0;
	WORD splits_in_block=0;
	LONG finalval;
	LONG width=120;
	LONG height=10;
	}

//#include <eikprogi.hrh>

// EIKRTED.RH
//
// Copyright (c) 1997-1999 Symbian Ltd.  All rights reserved.
//

//#include <eikrted.hrh>
//#include <eikgted.hrh>
#include <gulftflg.hrh>

STRUCT RTXTED
    {
	WORD width=0;
	WORD height=0;
	WORD numlines=1;
	WORD textlimit=0;
	LONG flags=0;
	WORD fontcontrolflags=1;
	WORD fontnameflags=EGulNoSymbolFonts;
	AKN_EDITOR_EXTENSIONS
    }

// EIKSECED.RH
//
// Copyright (c) 1997-1999 Symbian Ltd.  All rights reserved.
//

STRUCT SECRETED
	{
 	WORD num_letters=8;
	}

// EIKSPACE.RH
//
// Copyright (c) 1997-1999 Symbian Ltd.  All rights reserved.
//

//#include <eikspace.hrh>

STRUCT SPACER
    {
	WORD width=0;
	WORD height=0;
	LONG color=0; // clear
    }

// EIKWSEL.RH
//
// Copyright (c) 1997-1999 Symbian Ltd.  All rights reserved.
//

STRUCT WORLD_SELECTOR
	{
	WORD flags=0;
	WORD chars_wide=0;
	LTEXT countrysearch="";
	LTEXT worldsearch="";
	}

//#include <eikwsel.hrh>
// EIKDLGTB.RH
//
// Copyright (c) 1997-1999 Symbian Ltd.  All rights reserved.
//

//#include <eikctrls.hrh>

STRUCT DLG_TOOLBAR
    {
	WORD width=0;
    STRUCT controls[];
    }

STRUCT DLG_TBAR_BUTTON
	{
	WORD type=1; // EEikCtLabeledButton
	WORD id=0;
	WORD flags=0;
	WORD length=0;
	WORD buttontype=0; // EEikCtCommandButton
	STRUCT button;
	LONG hotkey;
	BYTE hotkeyflags=1; // EEikLabeledButtonShowHotKey
	}

STRUCT DLG_TBAR_SPACER
	{
	WORD type=EEikCtSpacer;
	WORD id=0;
	WORD flags=0;
	WORD length=0;
	WORD width=0;
	WORD height=0;
	LONG color=0; // clear
	}

STRUCT DLG_TBAR_CTRL
	{
	WORD type;
	WORD id=0;
	WORD flags=0;
	WORD length=0;
	STRUCT control;
	}
// EIKPRTPV.RH
//
// Copyright (c) 1997-1999 Symbian Ltd.  All rights reserved.
//

STRUCT PRTPREV
    {
    WORD width;
    WORD height;
    }

// EIKFSEL.RH
//
// Copyright (c) 1997-1999 Symbian Ltd.  All rights reserved.
//

STRUCT FILENAMESELECTOR
	{
	WORD maxdisplaychar=15;
	}

STRUCT FILENAMEEDITOR
	{
    WORD width = 15;
	}

STRUCT FOLDERNAMESELECTOR
	{
	WORD maxdisplaychar=15;
	}

STRUCT FOLDERNAMEEDITOR
	{
    WORD width = 15;
	}

STRUCT DRIVENAMESELECTOR
	{
	}

// EIKGTED.RH
//
// Copyright (c) 1997-1999 Symbian Ltd.  All rights reserved.
//

STRUCT GTXTED
    {
	WORD width=0;
	WORD height=0;
	WORD numlines=1;
	WORD textlimit=0;
	LONG flags=0;
	WORD fontcontrolflags=1;
	WORD fontnameflags=EGulNoSymbolFonts;
	AKN_EDITOR_EXTENSIONS
    }

// EIKUFSEL.RH
//
// Copyright (c) 1997-1999 Symbian Ltd.  All rights reserved.
//


STRUCT UNIFIEDNAMESELECTOR
	{
	WORD maxdisplaychar=15;
	}

//
// Resource structure for CAknIpFieldEditor
// 

STRUCT IP_FIELD_EDITOR
	{
	STRUCT min_field_values;
	STRUCT max_field_values;
	BYTE flags;		
	}

STRUCT IP_FIELD
	{
	BYTE first_field;
	BYTE second_field;
	BYTE third_field;
	BYTE fourth_field;
	}

// ---------------------------------------------------------------------------
// Resource structure for CAknUnitEditor.
// For unit and flags, see enums TAknUnitEditorUnits and
// TAknUnitEditorFlags in eikon.hrh.
// @see CAknUnitEditor
// ---------------------------------------------------------------------------
//
STRUCT AVKON_UNIT_EDITOR
    {
    DOUBLE min = 0;   // Minimum value of the editor
    DOUBLE max = 0;   // Maximum value of the editor
    DOUBLE value = 0; // Initial value of the editor
    BYTE maxfractionaldigits = 2; // The maximum number of fractional digits
    LONG unit = EAknUnitEditorCustomUnit; // The initial unit type
    LONG flags = 0; // Editor flags
    }
  
// For Enhanced CBA

STRUCT CBA_BUTTON_LINK
	{
	BYTE version=EEikCbaButtonLink;
	LLINK button=0;
	}


STRUCT ENHANCED_CBA_BUTTON
	{
	BYTE version=EEikEnhancedCbaButton;
	BYTE operationType=EEikCommandTypeAnyCommand;
	WORD id=0;
   	LTEXT txt="";
	LTEXT bmpfile="";
  	WORD bmpid=0xffff;		// -1
	WORD bmpmask=0xffff;	// -1
	}

STRUCT EIK_APP_INFO_EXT
	{
	LLINK touch_pane=0; // AVKON_TOUCHPANE
	LLINK popup_toolbar=0;
	LONG supported_resolutions=0;
	LLINK spare=0; // Reserved for another eik_app_info extension
	}

// for defining priority order for each button (enhanced cba)
STRUCT CBA_PRIORITIES
	{
	STRUCT buttons[]; // array of buttons in number order ( 1. SK1, 2. SK2 etc )
	}

STRUCT BUTTON_PRIORITY
	{
	BYTE priority_order[]; // e.g. EEikCommandTypeOpenItem, EEikCommandTypeAnyCommand 
	}

/**
* Series 60 Button
*
* @since Series 60 3.1
*/
STRUCT AVKON_BUTTON_STATE
    {
    WORD flags=0;
    LTEXT txt="";
    LTEXT helptxt="";
    LTEXT bmpfile="";
    WORD bmpid=0xffff;
    WORD bmpmask=0xffff;
    WORD dim_bmpid=0xffff;
    WORD dim_bmpmask=0xffff;
    WORD press_bmpid=0xffff;
    WORD press_bmpmask=0xffff;
    WORD hover_bmpid=0xffff;
    WORD hover_bmpmask=0xffff;
    LLINK extension=0;
    }

STRUCT AVKON_BUTTON
    {
    WORD flags=0;
    WORD state=0;
    STRUCT states[];
    LLINK extension=0;
    }

STRUCT AVKON_TOOLBAR
    {
    BYTE version=1; 
    BYTE lines=1;
    LONG flags=0;
    LLINK softkeys = 0; // CBA
    STRUCT items[];
    LLINK extension=0;
    }

// Resource structure for CAknStylusPopupMenu
STRUCT STYLUS_POPUP_MENU_ITEM
    {
    LTEXT txt="";
    LONG command;
    LLINK extension=0;
    }
    
STRUCT STYLUS_POPUP_MENU
    {
    STRUCT items[];
    LLINK extension=0;
    }

// ---------------------------------------------------------------------------
// Resource structure for defining touch pane content.
// ---------------------------------------------------------------------------
//
STRUCT AVKON_TOUCHPANE
    {
    BYTE version = 1; // Do not change!
    LONG flags = 0; // Flags defined in akntouchpane.hrh
    STRUCT items[]; // AVKON_TOUCHPANE_ITEM
    }

// ---------------------------------------------------------------------------
// Resource structure for defining custom touch pane items.
// ---------------------------------------------------------------------------
//
STRUCT AVKON_TOUCHPANE_ITEM
    {
    BYTE version = 1; // Do not change!
    BYTE id; // One of the pre-defined element identifiers in akntouchpane.hrh
    LONG plugin = 0; // Implementation UID for touch pane ECom interface.
    }

// ---------------------------------------------------------------------------
// Resource structure for defining toolbar extension
// ---------------------------------------------------------------------------
//
STRUCT AVKON_TOOLBAR_EXTENSION
    {
    BYTE version=2; 
    LONG flags=0;
    LTEXT helptxt="";
    LTEXT bmpFile="";
    WORD bmpId=0xffff;
    WORD bmpMask=0xffff;
    LLINK bmpSkinIdMajor=0;
    LLINK bmpSkinIdMinor=0;
    WORD dimBmpid=0xffff;
    WORD dimBmpmask=0xffff;
    LLINK dimSkinIdMajor=0;
    LLINK dimSkinIdMinor=0;
    WORD pressBmpid=0xffff;
    WORD pressBmpmask=0xffff;
    LLINK pressSkinIdMajor=0;
    LLINK pressSkinIdMinor=0;
    WORD hoverBmpid=0xffff;
    WORD hoverBmpmask=0xffff;
    LLINK hoverSkinIdMajor=0;
    LLINK hoverSkinIdMinor=0;
    STRUCT items[];
    LLINK extension=0;
    }




// ---------------------------------------------------------------------------
// Resource structure for defining button state extension
// ---------------------------------------------------------------------------
//
STRUCT AVKON_BUTTON_STATE_EXTENSION
    {
    BYTE version=0;
    LLINK bmbSkinIdMajor=0;
    LLINK bmbSkinIdMinor=0;
    LLINK dimSkinIdMajor=0;
    LLINK dimSkinIdMinor=0;
    LLINK pressSkinIdMajor=0;
    LLINK pressSkinIdMinor=0;
    LLINK hoverSkinIdMajor=0;
    LLINK hoverSkinIdMinor=0;
    }

