[Test]
title PressKey 
pause 10000
presskey global EKeyDevice1
[Endtest]

//----------------------------------------------------------------------------------//
//-------------------------------------EikMFNE.h------------------------------------//
//----------------------------------------------------------------------------------//

// For test function:
// IMPORT_C CEikMfneField();
[Test]
title TestMFNECEikMfneFieldL
create testsdkeditors test
bringtoforeground
test TestMFNECEikMfneFieldL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual TBool IsEditable() const;
[Test]
title TestMFNEIsEditableL
create testsdkeditors test
bringtoforeground
test TestMFNEIsEditableL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual TBool IsValid() const;
[Test]
title TestMFNEIsValidL
create testsdkeditors test
bringtoforeground
test TestMFNEIsValidL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual THighlightType HighlightType() const;
[Test]
title TestMFNEHighlightTypeL
create testsdkeditors test
bringtoforeground
test TestMFNEHighlightTypeL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual void HandleKey(const CFont& aFont, 
//     const TKeyEvent& aKeyEvent, 
//     TBool aInterpretLeftAndRightAsEarEvents, 
//     TBool& aDataAltered, 
//     TInt& aHighlightIncrement);
[Test]
title TestMFNEHandleKeyL
create testsdkeditors test
bringtoforeground
test TestMFNEHandleKeyL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual void HandleDeHighlight(const CFont& aFont, 
//     CEikonEnv& aEikonEnv, 
//     TBool& aDataAltered, 
//     TBool& aError);
[Test]
title TestMFNEHandleDeHighlightL
create testsdkeditors test
bringtoforeground
test TestMFNEHandleDeHighlightL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void HandleLeftOrRightArrow(TChar aKey, TBool& aDataAltered, 
//     TInt& aHighlightIncrement);
[Test]
title TestMFNEHandleLeftOrRightArrowL
create testsdkeditors test
bringtoforeground
test TestMFNEHandleLeftOrRightArrowL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual ~CEikMfneSeparator();
[Test]
title TestMFNEDeconstructorL
create testsdkeditors test
bringtoforeground
test TestMFNEDeconstructorL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C static CEikMfneSeparator* NewL(TResourceReader& aResourceReader);
[Test]
title TestMFNERNewL
create testsdkeditors test
bringtoforeground
test TestMFNERNewL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C static CEikMfneSeparator* NewL(HBufC* aText);
[Test]
title TestMFNEHNewL
create testsdkeditors test
bringtoforeground
test TestMFNEHNewL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void SetText(HBufC* aText);
[Test]
title TestMFNESetTextL
create testsdkeditors test
bringtoforeground
test TestMFNESetTextL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual ~CEikMfneNumber();
[Test]
title TestMFNENDeconstructorL
create testsdkeditors test
bringtoforeground
test TestMFNENDeconstructorL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C static CEikMfneNumber* NewL(const CFont& aFont, TResourceReader& aResourceReader);
[Test]
title TestMFNENRNewL
create testsdkeditors test
bringtoforeground
test TestMFNENRNewL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C static CEikMfneNumber* NewL(const CFont& aFont, TInt aMinimumValue, TInt aMaximumValue, TInt aInitialValue, TUint32 aFlags);
    
[Test]
title TestMFNENVNewL
create testsdkeditors test
bringtoforeground
test TestMFNENVNewL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void SetMinimumAndMaximum(TInt aMinimumValue, TInt aMaximumValue, const CFont& aFont);
[Test]
title TestMFNENSetMinimumAndMaximumL
create testsdkeditors test
bringtoforeground
test TestMFNENSetMinimumAndMaximumL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void GetMinimumAndMaximum(TInt& aMinimumValue, TInt& aMaximumValue) const;
[Test]
title TestMFNENGetMinimumAndMaximumL
create testsdkeditors test
bringtoforeground
test TestMFNENGetMinimumAndMaximumL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void SetValue(TInt aValue, const CFont& aFont);
[Test]
title TestMFNENSetValueL
create testsdkeditors test
bringtoforeground
test TestMFNENSetValueL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C TInt Value() const;
[Test]
title TestMFNENValueL
create testsdkeditors test
bringtoforeground
test TestMFNENValueL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual TBool IsValid() const;
[Test]
title TestMFNENIsValidL
create testsdkeditors test
bringtoforeground
test TestMFNENIsValidL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void SetUninitialised(TBool aUninitialised);
[Test]
title TestMFNENSetUninitialisedL
create testsdkeditors test
bringtoforeground
test TestMFNENSetUninitialisedL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C TBool IsUninitialised() const;
[Test]
title TestMFNENIsUninitialisedL
create testsdkeditors test
bringtoforeground
test TestMFNENIsUninitialisedL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void SetDigitType(TDigitType aDigitType, const CFont& aFont);
[Test]
title TestMFNENSetDigitTypeL
create testsdkeditors test
bringtoforeground
test TestMFNENSetDigitTypeL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C TDigitType DigitType() const;
[Test]
title TestMFNENDigitTypeL
create testsdkeditors test
bringtoforeground
test TestMFNENDigitTypeL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void RefreshDigitType(const CFont& aFont);
[Test]
title TestMFNENRefreshDigitTypeL
create testsdkeditors test
bringtoforeground
test TestMFNENRefreshDigitTypeL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual ~CItem();
[Test]
title TestMFNESCDeconstructorL
create testsdkeditors test
bringtoforeground
test TestMFNESCDeconstructorL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C static CItem* NewL(TResourceReader& aResourceReader);
[Test]
title TestMFNESCRNewL
create testsdkeditors test
bringtoforeground
test TestMFNESCRNewL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C static CItem* NewL(TInt aId, TChar aKeyToMatch, HBufC* aText);
[Test]
title TestMFNESCNewL
create testsdkeditors test
bringtoforeground
test TestMFNESCNewL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void SetText(HBufC* aText);
[Test]
title TestMFNESCSetTextL
create testsdkeditors test
bringtoforeground
test TestMFNESCSetTextL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual ~CEikMfneSymbol();
[Test]
title TestMFNESDeconstructorL
create testsdkeditors test
bringtoforeground
test TestMFNESDeconstructorL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C static CEikMfneSymbol* NewL(TResourceReader& aResourceReader);
[Test]
title TestMFNESRNewL
create testsdkeditors test
bringtoforeground
test TestMFNESRNewL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C static CEikMfneSymbol* NewL(TInt aNumSymbolicItems);
[Test]
title TestMFNESNewL
create testsdkeditors test
bringtoforeground
test TestMFNESNewL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void AddSymbolicItem(CItem* aSymbolicItem, TBool aMakeCurrent);
[Test]
title TestMFNESAddSymbolicItemL
create testsdkeditors test
bringtoforeground
test TestMFNESAddSymbolicItemL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void SetCurrentSymbolicItemToId(TInt aId);
[Test]
title TestMFNESSetCurrentSymbolicItemToIdL
create testsdkeditors test
bringtoforeground
test TestMFNESSetCurrentSymbolicItemToIdL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C TInt IdOfCurrentSymbolicItem() const;
[Test]
title TestMFNESIdOfCurrentSymbolicItemL
create testsdkeditors test
bringtoforeground
test TestMFNESIdOfCurrentSymbolicItemL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void SetUninitialised(TBool aUninitialised);
[Test]
title TestMFNESSetUninitialisedL
create testsdkeditors test
bringtoforeground
test TestMFNESSetUninitialisedL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C TBool IsUninitialised() const;
[Test]
title TestMFNESIsUninitialisedL
create testsdkeditors test
bringtoforeground
test TestMFNESIsUninitialisedL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C CEikMfne();
[Test]
title TestMFNEMCEikMfneL
create testsdkeditors test
bringtoforeground
test TestMFNEMCEikMfneL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual ~CEikMfne();
[Test]
title TestMFNEMDeconstructorL
create testsdkeditors test
bringtoforeground
test TestMFNEMDeconstructorL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void CreateFieldArrayL(TInt aNumFields);
[Test]
title TestMFNEMCreateFieldArrayL
create testsdkeditors test
bringtoforeground
test TestMFNEMCreateFieldArrayL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void AddField(CEikMfneField* aField);
[Test]
title TestMFNEMAddFieldL
create testsdkeditors test
bringtoforeground
test TestMFNEMAddFieldL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void ResetFieldArray();
[Test]
title TestMFNEMResetFieldArrayL
create testsdkeditors test
bringtoforeground
test TestMFNEMResetFieldArrayL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C TMargins BorderMargins() const;
[Test]
title TestMFNEMBorderMarginsL
create testsdkeditors test
bringtoforeground
test TestMFNEMBorderMarginsL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void DrawNowAndLeaveWithTimeDateFormatInfoMsgL(TInt aResourceId, const TTime& aTimeDate) const;
[Test]
title TestMFNEMDrawNowAndLeaveWithTimeDateFormatInfoMsgL
create testsdkeditors test
bringtoforeground
test TestMFNEMDrawNowAndLeaveWithTimeDateFormatInfoMsgL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C CEikMfneField* Field(TInt aField) const;
[Test]
title TestMFNEMFieldL
create testsdkeditors test
bringtoforeground
test TestMFNEMFieldL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C static TTime ReadTime(TResourceReader& aResourceReader);
[Test]
title TestMFNEMReadTimeL
create testsdkeditors test
bringtoforeground
test TestMFNEMReadTimeL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C static TTime ReadDate(TResourceReader& aResourceReader);
[Test]
title TestMFNEMReadDateL
create testsdkeditors test
bringtoforeground
test TestMFNEMReadDateL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C static TTime ReadTimeAndDate(TResourceReader& aResourceReader);
[Test]
title TestMFNEMReadTimeAndDateL
create testsdkeditors test
bringtoforeground
test TestMFNEMReadTimeAndDateL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C static TTimeIntervalSeconds ReadDuration(TResourceReader& aResourceReader);
[Test]
title TestMFNEMReadDurationL
create testsdkeditors test
bringtoforeground
test TestMFNEMReadDurationL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C static TTimeIntervalSeconds ReadTimeOffset(TResourceReader& aResourceReader);
[Test]
title TestMFNEMReadTimeOffsetL
create testsdkeditors test
bringtoforeground
test TestMFNEMReadTimeOffsetL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C static TTimeIntervalSeconds Convert(const TTime& aTime);
[Test]
title TestMFNEMConvertL
create testsdkeditors test
bringtoforeground
test TestMFNEMConvertL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C static TTime Convert(const TTimeIntervalSeconds& aTimeIntervalSeconds);
[Test]
title TestMFNEMTConvertL
create testsdkeditors test
bringtoforeground
test TestMFNEMTConvertL
delete test
sendtobackground
[Endtest]

// For test function:
// inline TInt CurrentField() const;
[Test]
title TestMFNEMCurrentFieldL
create testsdkeditors test
bringtoforeground
test TestMFNEMCurrentFieldL
delete test
sendtobackground
[Endtest]

// For test function:
// inline TInt NumFields() const;
[Test]
title TestMFNEMNumFieldsL
create testsdkeditors test
bringtoforeground
test TestMFNEMNumFieldsL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void SetMfneAlignment(TInt aAlignment);
[Test]
title TestMFNEMSetMfneAlignmentL
create testsdkeditors test
bringtoforeground
test TestMFNEMSetMfneAlignmentL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void SetUpAndDownKeysConsumed(TBool aConsume);
[Test]
title TestMFNEMSetUpAndDownKeysConsumedL
create testsdkeditors test
bringtoforeground
test TestMFNEMSetUpAndDownKeysConsumedL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void SetSuppressBackgroundDrawing( TBool aSuppress );
[Test]
title TestMFNEMSetSuppressBackgroundDrawingL
create testsdkeditors test
bringtoforeground
test TestMFNEMSetSuppressBackgroundDrawingL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C TInt SetFeature( TInt aFeatureId, TInt aFeatureParam );
[Test]
title TestMFNEMSetFeatureL
create testsdkeditors test
bringtoforeground
test TestMFNEMSetFeatureL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C TInt GetFeature( TInt aFeatureId, TInt& aFeatureParam ) const;
[Test]
title TestMFNEMGetFeatureL
create testsdkeditors test
bringtoforeground
test TestMFNEMGetFeatureL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C TBool SupportsFeature( TInt aFeatureId ) const;
[Test]
title TestMFNEMSupportsFeatureL
create testsdkeditors test
bringtoforeground
test TestMFNEMSupportsFeatureL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C const CFont* Font() const;
[Test]
title TestMFNEMFontL
create testsdkeditors test
bringtoforeground
test TestMFNEMFontL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void SetFont(const CFont* aFont);
[Test]
title TestMFNEMSetFontL
create testsdkeditors test
bringtoforeground
test TestMFNEMSetFontL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void SetSkinBackgroundControlContextL( MAknsControlContext* aControlContext );
[Test]
title TestMFNEMSetSkinBackgroundControlContextL
create testsdkeditors test
bringtoforeground
test TestMFNEMSetSkinBackgroundControlContextL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void HandleMfneCommandL(TInt aCommand);
[Test]
title TestMFNEMHandleMfneCommandL
create testsdkeditors test
bringtoforeground
test TestMFNEMHandleMfneCommandL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void SetUseOverrideColors( TBool aUseOverrideColors );
[Test]
title TestMFNEMSetUseOverrideColorsL
create testsdkeditors test
bringtoforeground
test TestMFNEMSetUseOverrideColorsL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual TKeyResponse OfferKeyEventL(const TKeyEvent& aKeyEvent, 
//     TEventCode aType);
[Test]
title TestMFNEMOfferKeyEventL
create testsdkeditors test
bringtoforeground
test TestMFNEMOfferKeyEventL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual void PrepareForFocusLossL();
[Test]
title TestMFNEMPrepareForFocusLossL
create testsdkeditors test
bringtoforeground
test TestMFNEMPrepareForFocusLossL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual TSize MinimumSize();
[Test]
title TestMFNEMMinimumSizeL
create testsdkeditors test
bringtoforeground
test TestMFNEMMinimumSizeL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual void GetColorUseListL(CArrayFix<TCoeColorUse>& aColorUseList) const;
[Test]
title TestMFNEMGetColorUseListL
create testsdkeditors test
bringtoforeground
test TestMFNEMGetColorUseListL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual void HandleResourceChange(TInt aType);
[Test]
title TestMFNEMHandleResourceChangeL
create testsdkeditors test
bringtoforeground
test TestMFNEMHandleResourceChangeL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual TCoeInputCapabilities InputCapabilities() const;
[Test]
title TestMFNEMInputCapabilitiesL
create testsdkeditors test
bringtoforeground
test TestMFNEMInputCapabilitiesL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual void HandlePointerEventL(const TPointerEvent& aPointerEvent);
[Test]
title TestMFNEMHandlePointerEventL
create testsdkeditors test
bringtoforeground
test TestMFNEMHandlePointerEventL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual TTypeUid::Ptr MopSupplyObject( TTypeUid aId );
[Test]
title TestMFNEMMopSupplyObjectL
create testsdkeditors test
bringtoforeground
test TestMFNEMMopSupplyObjectL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void SetSkinTextColorL(TInt aAknSkinIDForTextColor, 
//     TInt aAknSkinIDForBgColor=KErrNotFound);
[Test]
title TestMFNEMSetSkinTextColorL
create testsdkeditors test
bringtoforeground
test TestMFNEMSetSkinTextColorL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual void FocusChanged(TDrawNow aDrawNow);
[Test]
title TestMFNEMFocusChangedL
create testsdkeditors test
bringtoforeground
test TestMFNEMFocusChangedL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void WriteInternalStateL(RWriteStream& aWriteStream) const;
[Test]
title TestMFNEMWriteInternalStateL
create testsdkeditors test
bringtoforeground
test TestMFNEMWriteInternalStateL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void HandleInteraction(TBool aHandleDeHighlight, 
//     TInt aNewCurrentField, 
//     TInt aOldWidthInPixelsOfOldCurrentField,
//     CEikMfneField::THighlightType aOldHighlightTypeOfOldCurrentField, 
//     TBool& aDataAltered, 
//     TBool& aError);
[Test]
title TestMFNEMHandleInteractionL
create testsdkeditors test
bringtoforeground
test TestMFNEMHandleInteractionL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual void FieldIsAboutToBeDeHighlighted(CEikMfneField* aField, 
//     TBool& aDrawAllFields);
[Test]
title TestMFNEMFieldIsAboutToBeDeHighlightedL
create testsdkeditors test
bringtoforeground
test TestMFNEMFieldIsAboutToBeDeHighlightedL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C TSize MfneSize() const;
[Test]
title TestMFNEMMfneSizeL
create testsdkeditors test
bringtoforeground
test TestMFNEMMfneSizeL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C TSize MfneSize(TBool aShrinkToMinimumSize);
[Test]
title TestMFNEMPMfneSizeL
create testsdkeditors test
bringtoforeground
test TestMFNEMPMfneSizeL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual void SizeChanged();
[Test]
title TestMFNEMSizeChangedL
create testsdkeditors test
bringtoforeground
test TestMFNEMSizeChangedL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual void MakeVisible(TBool aVisible);
[Test]
title TestMFNEMMakeVisibleL
create testsdkeditors test
bringtoforeground
test TestMFNEMMakeVisibleL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C CEikNumberEditor();
[Test]
title TestMFNENECEikNumberEditorL
create testsdkeditors test
bringtoforeground
test TestMFNENECEikNumberEditorL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void ConstructL(TInt aMinimumValue, TInt aMaximumValue, TInt aInitialValue); 
[Test]
title TestMFNENEConstructL
create testsdkeditors test
bringtoforeground
test TestMFNENEConstructL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void SetMinimumAndMaximum(TInt aMinimumValue, TInt aMaximumValue);
[Test]
title TestMFNENESetMinimumAndMaximumL
create testsdkeditors test
bringtoforeground
test TestMFNENESetMinimumAndMaximumL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void GetMinimumAndMaximum(TInt& aMinimumValue, TInt& aMaximumValue) const;
[Test]
title TestMFNENEGetMinimumAndMaximumL
create testsdkeditors test
bringtoforeground
test TestMFNENEGetMinimumAndMaximumL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void SetNumber(TInt aNumber);
[Test]
title TestMFNENESetNumberL
create testsdkeditors test
bringtoforeground
test TestMFNENESetNumberL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C TInt Number() const;
[Test]
title TestMFNENENumberL
create testsdkeditors test
bringtoforeground
test TestMFNENENumberL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual void ConstructFromResourceL(TResourceReader& aResourceReader);
[Test]
title TestMFNENEConstructFromResourceL
create testsdkeditors test
bringtoforeground
test TestMFNENEConstructFromResourceL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void HandlePointerEventL(const TPointerEvent& aPointerEvent);
[Test]
title TestMFNENEHandlePointerEventL
create testsdkeditors test
bringtoforeground
test TestMFNENEHandlePointerEventL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C CEikRangeEditor();
[Test]
title TestMFNERECEikRangeEditorL
create testsdkeditors test
bringtoforeground
test TestMFNERECEikRangeEditorL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void ConstructL(TInt aMinimumValue, TInt aMaximumValue, 
//     const SEikRange& aInitialRange, HBufC* aSeparatorText);

[Test]
title TestMFNEREConstructL
create testsdkeditors test
bringtoforeground
test TestMFNEREConstructL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void SetMinimumAndMaximum(TInt aMinimumValue, TInt aMaximumValue);
[Test]
title TestMFNERESetMinimumAndMaximumL
create testsdkeditors test
bringtoforeground
test TestMFNERESetMinimumAndMaximumL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void GetMinimumAndMaximum(TInt& aMinimumValue, TInt& aMaximumValue) const;
[Test]
title TestMFNEREGetMinimumAndMaximumL
create testsdkeditors test
bringtoforeground
test TestMFNEREGetMinimumAndMaximumL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void SetRange(const SEikRange& aRange);
[Test]
title TestMFNERESetRangeL
create testsdkeditors test
bringtoforeground
test TestMFNERESetRangeL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C SEikRange Range() const;
[Test]
title TestMFNERERangeL
create testsdkeditors test
bringtoforeground
test TestMFNERERangeL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual void ConstructFromResourceL(TResourceReader& aResourceReader);
[Test]
title TestMFNEREConstructFromResourceL
create testsdkeditors test
bringtoforeground
test TestMFNEREConstructFromResourceL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void HandlePointerEventL(const TPointerEvent& aPointerEvent);
[Test]
title TestMFNEREHandlePointerEventL
create testsdkeditors test
bringtoforeground
test TestMFNEREHandlePointerEventL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C CEikTimeEditor();
[Test]
title TestMFNETECEikTimeEditorL
create testsdkeditors test
bringtoforeground
test TestMFNETECEikTimeEditorL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual ~CEikTimeEditor();
[Test]
title TestMFNETEDeconstructorL
create testsdkeditors test
bringtoforeground
test TestMFNETEDeconstructorL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void ConstructL(const TTime& aMinimumTime, 
//     const TTime& aMaximumTime, 
//     const TTime& aInitialTime, 
//     TUint32 aFlags); 
[Test]
title TestMFNETEConstructL
create testsdkeditors test
bringtoforeground
test TestMFNETEConstructL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void SetTime(const TTime& aTime);
[Test]
title TestMFNETESetTimeL
create testsdkeditors test
bringtoforeground
test TestMFNETESetTimeL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C TTime Time() const;
[Test]
title TestMFNETETimeL
create testsdkeditors test
bringtoforeground
test TestMFNETETimeL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void SetUninitialised(TBool aUninitialised);
[Test]
title TestMFNETESetUninitialisedL
create testsdkeditors test
bringtoforeground
test TestMFNETESetUninitialisedL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C TBool IsUninitialised() const;
[Test]
title TestMFNETEIsUninitialisedL
create testsdkeditors test
bringtoforeground
test TestMFNETEIsUninitialisedL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual void SetMinimumAndMaximum(const TTime& aMinimumTime, const TTime& aMaximumTime);
[Test]
title TestMFNETESetMinimumAndMaximumL
create testsdkeditors test
bringtoforeground
test TestMFNETESetMinimumAndMaximumL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual void GetMinimumAndMaximum(TTime& aMinimumTime, TTime& aMaximumTime) const;
[Test]
title TestMFNETEGetMinimumAndMaximumL
create testsdkeditors test
bringtoforeground
test TestMFNETEGetMinimumAndMaximumL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual void ConstructFromResourceL(TResourceReader& aResourceReader);
[Test]
title TestMFNETEConstructFromResourceL
create testsdkeditors test
bringtoforeground
test TestMFNETEConstructFromResourceL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual void PrepareForFocusLossL();
[Test]
title TestMFNETEPrepareForFocusLossL
create testsdkeditors test
bringtoforeground
test TestMFNETEPrepareForFocusLossL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void HandlePointerEventL(const TPointerEvent& aPointerEvent);
[Test]
title TestMFNETEHandlePointerEventL
create testsdkeditors test
bringtoforeground
test TestMFNETEHandlePointerEventL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C CEikDateEditor();
[Test]
title TestMFNEDECEikDateEditorL
create testsdkeditors test
bringtoforeground
test TestMFNEDECEikDateEditorL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual ~CEikDateEditor();
[Test]
title TestMFNEDEDeconstructorL
create testsdkeditors test
bringtoforeground
test TestMFNEDEDeconstructorL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void ConstructL(const TTime& aMinimumDate, 
//     const TTime& aMaximumDate, 
//     const TTime& aInitialDate, 
//     TBool aWithoutPopoutCalendar);
[Test]
title TestMFNEDEConstructL
create testsdkeditors test
bringtoforeground
test TestMFNEDEConstructL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void SetDate(const TTime& aDate);
[Test]
title TestMFNEDESetDateL
create testsdkeditors test
bringtoforeground
test TestMFNEDESetDateL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C TTime Date() const;
[Test]
title TestMFNEDEDateL
create testsdkeditors test
bringtoforeground
test TestMFNEDEDateL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void SetUninitialised(TBool aUninitialised);
[Test]
title TestMFNEDESetUninitialisedL
create testsdkeditors test
bringtoforeground
test TestMFNEDESetUninitialisedL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C TBool IsUninitialised() const;
[Test]
title TestMFNEDEIsUninitialisedL
create testsdkeditors test
bringtoforeground
test TestMFNEDEIsUninitialisedL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual void SetMinimumAndMaximum(const TTime& aMinimumDate, 
//     const TTime& aMaximumDate); 
[Test]
title TestMFNEDESetMinimumAndMaximumL
create testsdkeditors test
bringtoforeground
test TestMFNEDESetMinimumAndMaximumL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual void GetMinimumAndMaximum(TTime& aMinimumDate, 
//     TTime& aMaximumDate) const;
[Test]
title TestMFNEDEGetMinimumAndMaximumL
create testsdkeditors test
bringtoforeground
test TestMFNEDEGetMinimumAndMaximumL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual TKeyResponse OfferKeyEventL(const TKeyEvent& aKeyEvent, 
//     TEventCode aType);
[Test]
title TestMFNEDEOfferKeyEventL
create testsdkeditors test
bringtoforeground
test TestMFNEDEOfferKeyEventL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual void ConstructFromResourceL(TResourceReader& aResourceReader);
[Test]
title TestMFNEDEConstructFromResourceL
create testsdkeditors test
bringtoforeground
test TestMFNEDEConstructFromResourceL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual void PrepareForFocusLossL();
[Test]
title TestMFNEDEPrepareForFocusLossL
create testsdkeditors test
bringtoforeground
test TestMFNEDEPrepareForFocusLossL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void HandlePointerEventL(const TPointerEvent& aPointerEvent);
[Test]
title TestMFNEDEHandlePointerEventL
create testsdkeditors test
bringtoforeground
test TestMFNEDEHandlePointerEventL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C CEikTimeAndDateEditor();
[Test]
title TestMFNETDECEikTimeAndDateEditorL
create testsdkeditors test
bringtoforeground
test TestMFNETDECEikTimeAndDateEditorL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual ~CEikTimeAndDateEditor();
[Test]
title TestMFNETDEDeconstructorL
create testsdkeditors test
bringtoforeground
test TestMFNETDEDeconstructorL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void ConstructL(const TTime& aMinimumTimeAndDate, 
//     const TTime& aMaximumTimeAndDate, 
//     const TTime& aInitialTimeAndDate, 
//     TUint32 aFlags, 
//     HBufC* aInterveningText=NULL);
    
[Test]
title TestMFNETDEConstructL
create testsdkeditors test
bringtoforeground
test TestMFNETDEConstructL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void SetTimeAndDate(const TTime& aTimeAndDate);
[Test]
title TestMFNETDESetTimeAndDateL
create testsdkeditors test
bringtoforeground
test TestMFNETDESetTimeAndDateL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C TTime TimeAndDate() const;
[Test]
title TestMFNETDETimeAndDateL
create testsdkeditors test
bringtoforeground
test TestMFNETDETimeAndDateL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void SetUninitialised(TBool aUninitialised);
[Test]
title TestMFNETDESetUninitialisedL
create testsdkeditors test
bringtoforeground
test TestMFNETDESetUninitialisedL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C TBool IsUninitialised() const;
[Test]
title TestMFNETDEIsUninitialisedL
create testsdkeditors test
bringtoforeground
test TestMFNETDEIsUninitialisedL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual void SetMinimumAndMaximum(const TTime& aMinimumTimeAndDate, 
//     const TTime& aMaximumTimeAndDate);
[Test]
title TestMFNETDESetMinimumAndMaximumL
create testsdkeditors test
bringtoforeground
test TestMFNETDESetMinimumAndMaximumL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual void GetMinimumAndMaximum(TTime& aMinimumTimeAndDate, 
//     TTime& aMaximumTimeAndDate) const;
[Test]
title TestMFNETDEGetMinimumAndMaximumL
create testsdkeditors test
bringtoforeground
test TestMFNETDEGetMinimumAndMaximumL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual TKeyResponse OfferKeyEventL(const TKeyEvent& aKeyEvent, TEventCode aType);
[Test]
title TestMFNETDEOfferKeyEventL
create testsdkeditors test
bringtoforeground
test TestMFNETDEOfferKeyEventL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual void ConstructFromResourceL(TResourceReader& aResourceReader);
[Test]
title TestMFNETDEConstructFromResourceL
create testsdkeditors test
bringtoforeground
test TestMFNETDEConstructFromResourceL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual void PrepareForFocusLossL();
[Test]
title TestMFNETDEPrepareForFocusLossL
create testsdkeditors test
bringtoforeground
test TestMFNETDEPrepareForFocusLossL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void HandlePointerEventL(const TPointerEvent& aPointerEvent);
[Test]
title TestMFNETDEHandlePointerEventL
create testsdkeditors test
bringtoforeground
test TestMFNETDEHandlePointerEventL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C CEikDurationEditor();
[Test]
title TestMFNETDUECEikDurationEditorL
create testsdkeditors test
bringtoforeground
test TestMFNETDUECEikDurationEditorL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual ~CEikDurationEditor();
[Test]
title TestMFNETDUEDeconstructorL
create testsdkeditors test
bringtoforeground
test TestMFNETDUEDeconstructorL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void ConstructL(const TTimeIntervalSeconds& aMinimumDuration, 
//     const TTimeIntervalSeconds& aMaximumDuration, 
//     const TTimeIntervalSeconds& aInitialDuration, 
//     TUint32 aFlags);

[Test]
title TestMFNETDUEConstructL
create testsdkeditors test
bringtoforeground
test TestMFNETDUEConstructL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void SetMinimumAndMaximum(const TTimeIntervalSeconds& aMinimumDuration, 
//     const TTimeIntervalSeconds& aMaximumDuration); 
[Test]
title TestMFNETDUESetMinimumAndMaximumL
create testsdkeditors test
bringtoforeground
test TestMFNETDUESetMinimumAndMaximumL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void GetMinimumAndMaximum(TTimeIntervalSeconds& aMinimumDuration, 
//     TTimeIntervalSeconds& aMaximumDuration) const;
[Test]
title TestMFNETDUEGetMinimumAndMaximumL
create testsdkeditors test
bringtoforeground
test TestMFNETDUEGetMinimumAndMaximumL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void SetDuration(const TTimeIntervalSeconds& aDuration);
[Test]
title TestMFNETDUESetDurationL
create testsdkeditors test
bringtoforeground
test TestMFNETDUESetDurationL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C TTimeIntervalSeconds Duration() const;
[Test]
title TestMFNETDUEDurationL
create testsdkeditors test
bringtoforeground
test TestMFNETDUEDurationL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void ConstructFromResourceL(TResourceReader& aResourceReader);
[Test]
title TestMFNETDUEConstructFromResourceL
create testsdkeditors test
bringtoforeground
test TestMFNETDUEConstructFromResourceL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void PrepareForFocusLossL();
[Test]
title TestMFNETDUEPrepareForFocusLossL
create testsdkeditors test
bringtoforeground
test TestMFNETDUEPrepareForFocusLossL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void HandlePointerEventL(const TPointerEvent& aPointerEvent);
[Test]
title TestMFNETDUEHandlePointerEventL
create testsdkeditors test
bringtoforeground
test TestMFNETDUEHandlePointerEventL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C CEikTimeOffsetEditor();
[Test]
title TestMFNETOECEikTimeOffsetEditorL
create testsdkeditors test
bringtoforeground
test TestMFNETOECEikTimeOffsetEditorL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C virtual ~CEikTimeOffsetEditor();
[Test]
title TestMFNETOEDeconstructorL
create testsdkeditors test
bringtoforeground
test TestMFNETOEDeconstructorL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void ConstructL(const TTimeIntervalSeconds& aMinimumTimeOffset, 
//     const TTimeIntervalSeconds& aMaximumTimeOffset, 
//     const TTimeIntervalSeconds& aInitialTimeOffset, 
//     TUint32 aFlags);

[Test]
title TestMFNETOEConstructL
create testsdkeditors test
bringtoforeground
test TestMFNETOEConstructL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void SetMinimumAndMaximum(const TTimeIntervalSeconds& aMinimumTimeOffset, 
//     const TTimeIntervalSeconds& aMaximumTimeOffset); 
[Test]
title TestMFNETOESetMinimumAndMaximumL
create testsdkeditors test
bringtoforeground
test TestMFNETOESetMinimumAndMaximumL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void GetMinimumAndMaximum(TTimeIntervalSeconds& aMinimumTimeOffset, 
//     TTimeIntervalSeconds& aMaximumTimeOffset) const;

[Test]
title TestMFNETOEGetMinimumAndMaximumL
create testsdkeditors test
bringtoforeground
test TestMFNETOEGetMinimumAndMaximumL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void SetTimeOffset(const TTimeIntervalSeconds& aTimeOffset);
[Test]
title TestMFNETOESetTimeOffsetL
create testsdkeditors test
bringtoforeground
test TestMFNETOESetTimeOffsetL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C TTimeIntervalSeconds TimeOffset() const;
[Test]
title TestMFNETOETimeOffsetL
create testsdkeditors test
bringtoforeground
test TestMFNETOETimeOffsetL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void ConstructFromResourceL(TResourceReader& aResourceReader);
[Test]
title TestMFNETOEConstructFromResourceL
create testsdkeditors test
bringtoforeground
test TestMFNETOEConstructFromResourceL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void PrepareForFocusLossL();
[Test]
title TestMFNETOEPrepareForFocusLossL
create testsdkeditors test
bringtoforeground
test TestMFNETOEPrepareForFocusLossL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void HandlePointerEventL(const TPointerEvent& aPointerEvent);
[Test]
title TestMFNETOEHandlePointerEventL
create testsdkeditors test
bringtoforeground
test TestMFNETOEHandlePointerEventL
delete test
sendtobackground
[Endtest]

