
[Test]
title PressKey 
pause 10000
presskey global EKeyDevice1
[Endtest]

//----------------------------------------------------------------------------------//
//---------------------------------------akntreelist.h------------------------------//
//----------------------------------------------------------------------------------//
// Test aknsinglestyletreelist.h
// For test function:
// IMPORT_C virtual void SetFlags( TUint32 aFlags );
[Test]
title TestHLTLSetFlagsL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLSetFlagsL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C TUint32 Flags() const;
[Test]
title TestHLTLFlagsL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLFlagsL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void MoveItemL( TAknTreeItemID aItem, TAknTreeItemID aTargetNode,
//     TBool aDrawNow );
[Test]
title TestHLTLMoveItemL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLMoveItemL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void RemoveItem( TAknTreeItemID aItem, TBool aDrawNow );
[Test]
title TestHLTLRemoveItemL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLRemoveItemL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void ExpandNode( TAknTreeItemID aNode, TBool aDrawNow );
[Test]
title TestHLTLExpandNodeL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLExpandNodeL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void CollapseNode( TAknTreeItemID aNode, TBool aDrawNow );
[Test]
title TestHLTLCollapseNodeL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLCollapseNodeL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C TBool IsExpanded( TAknTreeItemID aNode ) const;
[Test]
title TestHLTLIsExpandedL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLIsExpandedL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C TAknTreeItemID FocusedItem() const;
[Test]
title TestHLTLFocusedItemL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLFocusedItemL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void SetFocusedItem( TAknTreeItemID aItem, TInt aIndex,
//     TBool aDrawNow );
[Test]
title TestHLTLSetFocusedItemL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLSetFocusedItemL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C TRect HighlightRect() const;
[Test]
title TestHLTLHighlightRectL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLHighlightRectL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C TInt AddIconL( const TAknsItemID& aId, const TDesC& aFilename,
//     TInt aBitmapId, TInt aMaskId, TScaleMode aScaleMode );
[Test]
title TestHLTLAddIconL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLAddIconL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C TInt AddIconL( CFbsBitmap* aIcon, CFbsBitmap* aMask,
//     TBool aTransferOwnership, TScaleMode aScaleMode );
[Test]
title TestHLTLAddIIconL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLAddIIconL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C TInt AddColorIconL( const TAknsItemID& aId,
//     const TAknsItemID& aColorId, TInt aColorIndex, const TDesC& aFilename,
//     TInt aBitmapId, TInt aMaskId, TRgb aDefaultColor,
//     TScaleMode aScaleMode );
[Test]
title TestHLTLAddColorIconL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLAddColorIconL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void AssignIconL( TInt aIconId, const TAknsItemID& aId,
//     const TDesC& aFilename, TInt aBitmapId, TInt aMaskId,
//     TScaleMode aScaleMode );
[Test]
title TestHLTLAssignIconL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLAssignIconL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void AssignIconL( TInt aIconId, CFbsBitmap* aIcon,
//     CFbsBitmap* aMask, TBool aTransferOwnership, TScaleMode aScaleMode );
[Test]
title TestHLTLAssignIIconL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLAssignIIconL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void AssignColorIconL( TInt aIconId, const TAknsItemID& aId,
//     const TAknsItemID& aColorId, TInt aColorIndex, const TDesC& aFilename,
//     TInt aBitmapId, TInt aMaskId, TRgb aDefaultColor,
//     TScaleMode aScaleMode );
[Test]
title TestHLTLAssignColorIconL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLAssignColorIconL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void RemoveIconL( TInt aIconId );
[Test]
title TestHLTLRemoveIconL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLRemoveIconL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C TInt ChildCount( TAknTreeItemID aNode ) const;
[Test]
title TestHLTLChildCountL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLChildCountL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C TAknTreeItemID Child( TAknTreeItemID aNode, TInt aIndex ) const;
[Test]
title TestHLTLChildL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLChildL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C TAknTreeItemID Parent( TAknTreeItemID aItem ) const;
[Test]
title TestHLTLParentL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLParentL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C TBool Contains( TAknTreeItemID aItem ) const;
[Test]
title TestHLTLContainsL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLContainsL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C TBool IsNode( TAknTreeItemID aItem ) const;
[Test]
title TestHLTLIsNodeL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLIsNodeL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C TBool IsLeaf( TAknTreeItemID aItem ) const;
[Test]
title TestHLTLIsLeafL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLIsLeafL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C TBool IsMarked( TAknTreeItemID aItem ) const;
[Test]
title TestHLTLIsMarkedL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLIsMarkedL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void SetMarked( TAknTreeItemID aItem, TBool aMarked,
//     TBool aDrawNow );
[Test]
title TestHLTLSetMarkedL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLSetMarkedL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void EnableMarking( TAknTreeItemID aItem, TBool aEnable );
[Test]
title TestHLTLEnableMarkingL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLEnableMarkingL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void GetMarkedItemsL( RArray<TAknTreeItemID>& aMarkedItems ) const;
[Test]
title TestHLTLGetMarkedRItemsL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLGetMarkedRItemsL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void GetMarkedItemsL( TAknTreeItemID aNode,
//     RArray<TAknTreeItemID>& aMarkedItems ) const;
[Test]
title TestHLTLGetMarkedItemsL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLGetMarkedItemsL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C TBool IsEmpty( TAknTreeItemID aNode ) const;
[Test]
title TestHLTLIsEmptyL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLIsEmptyL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void SetNonEmpty( TAknTreeItemID aNode, TBool aNonEmpty,
//     TBool aDrawNow );
[Test]
title TestHLTLSetNonEmptyL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLSetNonEmptyL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C TBool IsPersistent( TAknTreeItemID aItem ) const;
[Test]
title TestHLTLIsPersistentL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLIsPersistentL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void SetPersistent( TAknTreeItemID aItem,
//     TBool aPersistent );
[Test]
title TestHLTLSetPersistentL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLSetPersistentL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void Sort( MAknCustomTreeOrdering* aOrdering, TBool aDrawNow );
[Test]
title TestHLTLSortL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLSortL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void Sort( TAknTreeItemID aNode, TBool aSortDescendants,
//     TBool aDrawNow );
[Test]
title TestHLTLNSortL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLNSortL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void AddObserverL( MAknTreeListObserver* aObserver );
[Test]
title TestHLTLAddObserverL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLAddObserverL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void RemoveObserver( MAknTreeListObserver* aObserver );
[Test]
title TestHLTLRemoveObserverL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLRemoveObserverL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C TBool TabModeFunctionIndicators() const;
[Test]
title TestHLTLTabModeFunctionIndicatorsL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLTabModeFunctionIndicatorsL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void EnableTabModeFunctionIndicatorsL( TBool aEnable );
[Test]
title TestHLTLEnableTabModeFunctionIndicatorsL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLEnableTabModeFunctionIndicatorsL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void SetFocusedItem( TAknTreeItemID aItem );
[Test]
title TestHLTLSetFocusedItemIDL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLSetFocusedItemIDL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C TInt FocusedItemIndex() const;
[Test]
title TestHLTLFocusedItemIndexL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLFocusedItemIndexL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C TInt VisibleItemIndex( TAknTreeItemID aItem ) const;
[Test]
title TestHLTLVisibleItemIndexL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLVisibleItemIndexL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void Sort( MAknCustomTreeOrdering* aOrdering, TFocusBehaviour aFocusBehaviour, 
//     TBool aDrawNow );
[Test]
title TestHLTLOSortL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLOSortL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void Sort( TAknTreeItemID aNode, TFocusBehaviour aFocusBehaviour, 
//     TBool aSortDescendants, TBool aDrawNow );
[Test]
title TestHLTLFBSortL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLFBSortL
delete test
sendtobackground
[Endtest]

// For test function:
// IMPORT_C void SetEmptyTextL(const TDesC& aText);
[Test]
title TestHLTLSetEmptyTextL
create testsdkhierarchicallists test
bringtoforeground
test TestHLTLSetEmptyTextL
delete test
sendtobackground
[Endtest]

