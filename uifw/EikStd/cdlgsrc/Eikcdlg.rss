/*
* Copyright (c) 1997-1999 Nokia Corporation and/or its subsidiary(-ies).
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description:
*
*/


NAME ECDG


#include <eikon.rh>

#include <avkon.rsg>
#include <avkon.hrh>
#include <avkon.rh>

RESOURCE RSS_SIGNATURE { }


RESOURCE DIALOG r_eik_dialog_alert
    {
	flags=EEikDialogFlagNoDrag | EEikDialogFlagNoTitleBar |
	      EEikDialogFlagCbaButtons | EEikDialogFlagNoShadow |
	      EEikDialogFlagWait;
    title="Information";
	buttons=R_AVKON_SOFTKEYS_OK_EMPTY;
    items=
        {
		DLG_LINE
			{
			type=EAknCtNote;
			id=EEikCidAlertText1;
			control= AVKON_NOTE 
				{ 
					layout = ETextualNotificationLayout;
					singular_label = "";
					plural_label = "";
				};
			}
        };
    }


//
// Resource for the mover dialog
//

RESOURCE DIALOG r_eik_dialog_moveme
    {
    flags=EEikDialogFlagCbaButtons|EEikDialogFlagNoBackup;
    title="Move me!";
	buttons=R_AVKON_SOFTKEYS_CANCEL; //Was R_EIK_BUTTONS_CONTINUE in EPOC 6.1
    items=
        {
        DLG_LINE
            {
            type=EEikCtLabel;
            id=EEikCidInfoText;
            control=LABEL { txt="Move me!"; };
            }
        };
    }


RESOURCE DIALOG r_eik_heap_fail_dialog
	{
	flags=EEikDialogFlagNoDrag | EEikDialogFlagFillAppClientRect | EEikDialogFlagNoTitleBar |EEikDialogFlagButtonsRight |
	      EEikDialogFlagCbaButtons |/* EEikDialogFlagModeless |*/ EEikDialogFlagNoBorder ;
	title =  "Debug fail settings" ;
	buttons = R_AVKON_SOFTKEYS_OK_CANCEL ;
	items = 
		{
		DLG_LINE
			{
			type=10000;
			itemflags=EEikDlgItemTakesEnterKey | EEikDlgItemOfferAllHotKeys;
			id=EEikHeapFailSettingListId;
			control = AVKON_SETTING_ITEM_LIST
				{
				title = "Heap fail tool";
				initial_number = 1;
				items =
					{
					AVKON_SETTING_ITEM
						{
						identifier = 1;
						name = "Heap failure type";
						setting_page_resource = r_eik_heap_fail_page;			
						associated_resource = r_eik_heap_fail_list;			
						},
					AVKON_SETTING_ITEM
						{
						identifier = 2;
						name = "Heap failure rate";			
						setting_page_resource = r_eik_heap_fail_rate;			
						},
					AVKON_SETTING_ITEM
						{
						identifier = 3;
						name = "WServ failure type";
						setting_page_resource = r_eik_wserv_fail_page;			
						associated_resource = r_eik_wserv_fail_list;			
						},
					AVKON_SETTING_ITEM
						{
						identifier = 4;
						name = "WServ failure rate";			
						setting_page_resource = r_eik_wserv_fail_rate;			
						},
					AVKON_SETTING_ITEM
						{
						identifier = 5;
						name = "File failure type";
						setting_page_resource = r_eik_file_fail_page;			
						associated_resource = r_eik_file_fail_list;			
						},
					AVKON_SETTING_ITEM
						{
						identifier = 6;
						name = "File failure rate";			
						setting_page_resource = r_eik_file_fail_rate;			
						}
					};
				};
			}
		};
	}

RESOURCE AVKON_SETTING_PAGE r_eik_heap_fail_page
	{	
	label= "App heap fail mode";
	type = EAknCtPopupSettingList;
	editor_resource_id = r_blank_popup_setting_list;
	}

RESOURCE POPUP_SETTING_LIST r_blank_popup_setting_list
	{
	}

RESOURCE AVKON_POPUP_SETTING_TEXTS r_eik_heap_fail_list
	{
	flags = 0;
	setting_texts_resource = r_eik_heap_texts;
	}

RESOURCE ARRAY r_eik_heap_texts
	{
	items =
		{
		AVKON_ENUMERATED_TEXT { value=EEikCidHeapFailOff; text = "Off"; },
		AVKON_ENUMERATED_TEXT { value=EEikCidHeapFailTypeBackRandom; text = "Random"; },
		AVKON_ENUMERATED_TEXT { value=EEikCidHeapFailTypeBackDeterministic; text = "Deterministic"; }
		};
	}


RESOURCE AVKON_SETTING_PAGE r_eik_heap_fail_rate
	{ 
	softkey_resource = R_AVKON_SOFTKEYS_OK_CANCEL;
	type = EAknCtIntegerEdwin;
	editor_resource_id= r_eik_heap_fail_rate_editor;
	}

RESOURCE AVKON_INTEGER_EDWIN r_eik_heap_fail_rate_editor 
	{
	maxlength=4;
	min = 0;
	max = 9999;
	}



RESOURCE AVKON_SETTING_PAGE r_eik_wserv_fail_page
	{	
	number= 0;
	label= "WServ fail mode";
	type = EAknCtPopupSettingList;
	editor_resource_id = r_blank_popup_setting_list;
	}

RESOURCE AVKON_POPUP_SETTING_TEXTS r_eik_wserv_fail_list
	{
	flags = 0;
	setting_texts_resource = r_eik_wserv_texts;
	}

RESOURCE ARRAY r_eik_wserv_texts
	{
	items =
		{
		AVKON_ENUMERATED_TEXT { value=EEikCidWservHeapFailOff; text = "Off"; },
		AVKON_ENUMERATED_TEXT { value=EEikCidWservHeapFailTypeBackRandom; text = "Random"; },
		AVKON_ENUMERATED_TEXT { value=EEikCidWservHeapFailTypeBackDeterministic; text = "Deterministic"; }
		};
	}


RESOURCE AVKON_SETTING_PAGE r_eik_wserv_fail_rate
	{ 
	softkey_resource = R_AVKON_SOFTKEYS_OK_CANCEL;
	type = EAknCtIntegerEdwin;
	editor_resource_id= r_eik_wserv_fail_rate_editor;
	}

RESOURCE AVKON_INTEGER_EDWIN r_eik_wserv_fail_rate_editor 
	{
	maxlength=4;
	min = 0;
	max = 9999;
	}




RESOURCE AVKON_SETTING_PAGE r_eik_file_fail_page
	{	
	number= 0;
	label= "File fail mode";
	type = EAknCtPopupSettingList;
	editor_resource_id = r_blank_popup_setting_list;
	}

RESOURCE AVKON_POPUP_SETTING_TEXTS r_eik_file_fail_list
	{
	flags = 0;
	setting_texts_resource = r_eik_file_texts;
	}

RESOURCE ARRAY r_eik_file_texts
	{
	items =
		{
		AVKON_ENUMERATED_TEXT { value=0; text = "Off"; },
		AVKON_ENUMERATED_TEXT { value=1; text = "On"; }
		};
	}


RESOURCE AVKON_SETTING_PAGE r_eik_file_fail_rate
	{ 
	softkey_resource = R_AVKON_SOFTKEYS_OK_CANCEL;
	type = EAknCtIntegerEdwin;
	editor_resource_id= r_eik_file_fail_rate_editor;
	}

RESOURCE AVKON_INTEGER_EDWIN r_eik_file_fail_rate_editor 
	{
	maxlength=4;
	min = 0;
	max = 9999;
	}


RESOURCE DIALOG r_eik_dialog_query
	{
	flags = EEikDialogFlagWait | EAknConfirmationNoteFlags;
	buttons=R_AVKON_SOFTKEYS_YES_NO;
    items=
		{
		DLG_LINE
			{
			type=EAknCtNote;
			id = EGeneralNote;
			control= AVKON_NOTE 
				{ 
					layout = EGeneralLayout;
					singular_label = "";
				};
			}
		};
	}

RESOURCE DIALOG r_eik_dialog_info
	{
	flags = EEikDialogFlagWait | EAknDialogGenericNoteFlags;
	buttons=R_AVKON_SOFTKEYS_BACK;
    items=
		{
		DLG_LINE
			{
			type=EAknCtNote;
			id = EGeneralNote;
			control= AVKON_NOTE 
				{ 
					layout = EGeneralLayout;
					singular_label = "";
				};
			}
		};
	}
