/*
* Copyright (c) 2002-2008 Nokia Corporation and/or its subsidiary(-ies).
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description:  Resource definitions for AVKON UI libray
*
*/


NAME AVKN

#include <eikon.rh>
#include "EikClock.rh"
#include <eikctl.rsg>
#include <avkon.mbg>
#include <callstatus.mbg>
#include <e32keys.h>
#include <uikon.hrh>

#include <avkon.loc>
#include <avkonsct.loc>
#include <avkon.rh>
#include "avkon.hrh"
#include <gulfont.hrh>
#include <PUAcodes.hrh>
#include <aknsconstants.hrh>

#include <smiley.mbg>
//#include <trui_icons.mbg>
//#include <peninputcommonctrls.loc>

RESOURCE RSS_SIGNATURE { }

//
// General menu resources
//

RESOURCE MENU_PANE r_avkon_menupane_empty
    {
    items =
        {
        };
    }

RESOURCE MENU_PANE r_avkon_menupane_exit
    {
    items =
        {
        MENU_ITEM { command=EAknCmdExit; txt=qtn_options_exit; }
        };
    }


RESOURCE MENU_PANE r_avkon_menupane_app_default
    {
    items =
        {
        };
    }

RESOURCE MENU_PANE r_avkon_menupane_view_default
    {
    items =
        {
        };
    }


RESOURCE MENU_PANE r_avkon_menupane_fep_default
    {
    items =
        {
        };
    }


RESOURCE MENU_PANE r_avkon_menupane_edittext_default
    {
    items=
        {
        MENU_ITEM {cascade=r_avkon_edit_text_menu; command=EAknCmdEditTextMenu; flags=EEikMenuItemDimmed; txt=text_pup_option_edit_text;}
        };
    }

RESOURCE MENU_PANE r_avkon_menupane_language_default
    {
    items=
        {
        };
    }


//
// EDIT TEXT SUBMENU
//

RESOURCE MENU_PANE r_avkon_edit_text_menu
    {
    items=
        {
        MENU_ITEM { command=EEikCmdEditCut; flags=EEikMenuItemDimmed; txt=qtn_options_edit_cut; },
        MENU_ITEM { command=EEikCmdEditCopy; flags=EEikMenuItemDimmed; txt=qtn_options_edit_copy; },
        MENU_ITEM { command=EEikCmdEditPaste; flags=EEikMenuItemDimmed; txt=qtn_options_edit_paste; },
        MENU_ITEM { command=EAknCmdEditInsertNumber; txt=qtn_options_edit_insert_number; },
        MENU_ITEM { command=EAknCmdEditInsertSymbol; txt=qtn_options_edit_insert_symbol; }
        };
    }


//
// PREDICTIVE TEXT SUBMENUS
//

RESOURCE MENU_PANE r_avkon_predictive_text_menu_t9
    {
    items=
        {
        MENU_ITEM {command=EAknCmdT9PredictiveMatches; txt=text_pup_option_matches;},
        MENU_ITEM {command=EAknCmdT9PredictiveInsertWord; txt=text_pup_option_insert_word;},
        MENU_ITEM {command=EAknCmdT9PredictiveEditWord; txt=text_pup_option_edit_word;},
        MENU_ITEM {command=EAknCmdT9PredictiveT9Off; txt=qtn_options_t9_off;}
        };
    }

//
// EDIT MODE MENU
//
RESOURCE MENU_PANE r_avkon_edit_mode_menu
    {
    items=
        {
        MENU_ITEM { command=EAknCmdEditInsertSymbol; flags=EEikMenuItemDimmed; txt=text_edit_menu_more_symbols; },
        MENU_ITEM { command=EAknCmdEditInsertSmiley; flags=EEikMenuItemDimmed; txt=qtn_edit_menu_more_smileys; },
        MENU_ITEM { command=EJapanFepCmdModeHiragana; flags=EEikMenuItemDimmed;txt=qtn_japin_edit_hiragana; },
        MENU_ITEM { command=EJapanFepCmdModeKatakana; flags=EEikMenuItemDimmed;txt=qtn_japin_edit_katakana; },
        MENU_ITEM { command=EJapanFepCmdEditModeAlpha; flags=EEikMenuItemDimmed; txt=qtn_japin_edit_latin; },
        MENU_ITEM { command=EJapanFepCmdEditModeNumber; flags=EEikMenuItemDimmed; txt=qtn_japin_edit_number; },
        MENU_ITEM { command=EJapanFepCmdModeFullWidth; flags=EEikMenuItemDimmed; txt=qtn_japin_edit_full_width; },
        MENU_ITEM { command=EJapanFepCmdModeHalfWidth; flags=EEikMenuItemDimmed; txt=qtn_japin_edit_half_width; },
        MENU_ITEM { command=EChinFepCmdModePinyin; txt=text_chi_input_pinyin; },
        MENU_ITEM { command=EChinFepCmdModeZhuyin; txt=text_chi_input_zhuyin; },
        MENU_ITEM { command=EChinFepCmdModeStroke; txt=text_chi_input_stroke; },
        MENU_ITEM { cascade=r_avkon_fep_cmd_mode_japin_edit_predict_on_submenu; command=EJapanFepCmdModePredictiveOn; flags=EEikMenuItemDimmed; txt=qtn_japin_edit_predict; },
        MENU_ITEM { cascade=r_avkon_fep_cmd_mode_japin_edit_predict_off_submenu; command=EJapanFepCmdModePredictiveOff; flags=EEikMenuItemDimmed; txt=qtn_japin_edit_predict; },
        MENU_ITEM { command=EAknCmdT9PredictiveT9Off; flags=EEikMenuItemDimmed; txt=qtn_editing_state_indicator_list_prediction_off; },
        MENU_ITEM { command=EAknCmdPredictiveTextCascade; cascade=r_avkon_predictive_text_menu_t9; flags=EEikMenuItemDimmed; txt=qtn_options_t9; },
#ifndef RD_INTELLIGENT_TEXT_INPUT
        MENU_ITEM { command=EAknCmdPredictiveModeCascade; cascade=r_avkon_predictive_mode_menu; flags=EEikMenuItemDimmed; txt=qtn_options_t9_autocompletion; },
#endif //RD_INTELLIGENT_TEXT_INPUT
        MENU_ITEM { command=EJapanFepCmdPredictiveTextCascade; cascade=r_avkon_predictive_text_menu_t9; flags=EEikMenuItemDimmed; txt=qtn_japin_edit_eng_predictive; },
        MENU_ITEM { command=EAknCmdMultitapPredictiveT9On; flags=EEikMenuItemDimmed; txt=qtn_options_t9_on; },
        MENU_ITEM { command=EJapanFepCmdMultitapPredictiveT9On; flags=EEikMenuItemDimmed; txt=qtn_japin_edit_eng_predict_on; },
        MENU_ITEM { command=EChinFepCmdModeZhuyinFind; txt=qtn_chi_find_zhuyin; },
        MENU_ITEM { command=EChinFepCmdModeStrokeFind; txt=qtn_chi_find_stroke; },
        MENU_ITEM { command=EAknCmdEditModeAlpha; flags=EEikMenuItemDimmed; txt=qtn_editing_shift_menu_alpha; },
        MENU_ITEM { command=EAknCmdEditModeKorean; flags=EEikMenuItemDimmed; txt=qtn_activate_korean_mode; },
        MENU_ITEM { command=EAknCmdEditModeLatinText; txt=qtn_chi_input_latin_text; },
        MENU_ITEM { command=EChinFepCmdModeLatinUpper; txt=qtn_chi_input_latin_upper; },
        MENU_ITEM { command=EChinFepCmdModeLatinLower; txt=qtn_chi_input_latin_lower; },
        MENU_ITEM { command=EAknCmdEditModeNumber; flags=EEikMenuItemDimmed; txt=qtn_editing_shift_menu_numbers; },
        MENU_ITEM { command=EChinFepCmdModeNumber; flags=EEikMenuItemDimmed; txt=text_chi_input_number_entry; },
        MENU_ITEM { command=EAknCmdEditModeArabicIndicNumber; flags=EEikMenuItemDimmed; txt=qtn_ah_edit_menu_arabic_nbrs; },
        MENU_ITEM { command=EAknCmdEditModeEasternArabicIndicNumber; flags=EEikMenuItemDimmed; txt=qtn_ah_edit_menu_arabic_nbrs; },
        MENU_ITEM { command=EAknCmdEditModeIndicNumber; flags=EEikMenuItemDimmed; txt=qtn_hi_edit_menu_devanagari_nbrs; },
        MENU_ITEM { command=EEikCmdEditCopy; flags=EEikMenuItemDimmed; txt=qtn_editing_shift_menu_copy; },
        MENU_ITEM { command=EEikCmdEditCut; flags=EEikMenuItemDimmed; txt=qtn_editing_shift_menu_cut; },
        MENU_ITEM { command=EEikCmdEditPaste; flags=EEikMenuItemDimmed; txt=qtn_editing_shift_menu_paste; },
        MENU_ITEM { command=EAknCmdEditInsertNumber; flags=EEikMenuItemDimmed; txt=qtn_options_edit_insert_number; },
        MENU_ITEM { command=EJapanFepCmdModeUserDic; txt=qtn_japin_edit_register_word; },
        MENU_ITEM { command=EAknCmdEditClearDirectionRight; flags=EEikMenuItemDimmed; txt=qtn_japin_edit_delete_right; },
        MENU_ITEM { command=EAknCmdEditClearDirectionLeft; flags=EEikMenuItemDimmed; txt=qtn_japin_edit_delete_left; },
        MENU_ITEM { command=EJapanFepCmdModeKutenCodeInput; flags=EEikMenuItemDimmed; txt=qtn_japin_edit_kuten_code; },
        MENU_ITEM { command=EChinFepCmdInstructions; flags=EEikMenuItemDimmed; txt=qtn_chi_input_instructions; },
        MENU_ITEM { command=EAknCmdEditInsertSymbolJp; flags=EEikMenuItemDimmed; txt=qtn_options_edit_insert_symbol; },
        MENU_ITEM { command=EAknCmdEditInsertPictograph; flags=EEikMenuItemDimmed; txt=qtn_japin_edit_pictographs; },
        MENU_ITEM { command=EAknCmdInputLanguage; flags=EEikMenuItemDimmed; txt=text_pup_option_input_language; },
        MENU_ITEM { command=EAknCmdInputMethod; flags=EEikMenuItemDimmed; txt=text_pup_option_input_language; cascade=r_avkon_input_mode_sub_menu; },
        MENU_ITEM { command=EChinFepCmdModeCangJieOption; flags=EEikMenuItemDimmed; txt=qtn_chi_pup_option_cangjie_mode; }

        };
    }

//
// Markable list resource entries
//
RESOURCE MENU_PANE r_avkon_menupane_markable_list_edit_list_implementation
    {
    items =
        {
        MENU_ITEM { cascade=r_avkon_menupane_markable_list_implementation; command=EAknCmdEditListMenu; txt=qtn_options_list; }
        };

    }

RESOURCE MENU_PANE r_avkon_menupane_markable_list_implementation
    {
    items =
        {
        MENU_ITEM{ command=EAknCmdMark; txt=qtn_options_list_mark_one; flags=EEikMenuItemSpecific; },
        MENU_ITEM{ command=EAknCmdUnmark; txt=qtn_options_list_unmark_one; flags=EEikMenuItemSpecific; },
        MENU_ITEM{ command=EAknMarkAll; txt=qtn_options_list_mark_all;},
        MENU_ITEM{ command=EAknUnmarkAll; txt=qtn_options_list_unmark_all;}
        };
    }

//
// Find popup's activation
//

RESOURCE MENU_PANE r_avkon_menupane_find_popup_implementation
    {
    items =
        {
        MENU_ITEM{ command=EAknCmdFindPopupActivated; txt=qtn_find_pop_up_window;}
        };
    }


RESOURCE MENU_PANE r_avkon_menupane_find_popup_implementation_markable
    {
    items =
        {
        MENU_ITEM{ command=EAknCmdFindPopupActivated; txt=qtn_find_pop_up_window;},
        MENU_ITEM { cascade=r_avkon_menupane_markable_list_implementation; command=EAknCmdEditListMenu; txt=qtn_options_list; }
        };
    }


//
// CBA KEYS
//
// DO NOT USE THESE IN APPLICATIONS!!!
// INSTEAD USE #defines provided by avkon.hrh for selection service etc..
//

RESOURCE CBA r_avkon_softkeys_empty
    {
    buttons =
        {
        // Changed to use id's as well, but left for BC
        CBA_BUTTON {id=EAknSoftkeyEmpty; txt=text_softkey_empty;},
        CBA_BUTTON {id=EAknSoftkeyEmpty; txt=text_softkey_empty;},
        CBA_BUTTON {id=EAknSoftkeyEmpty; txt=text_softkey_empty;}
        };
    }

RESOURCE CBA r_avkon_softkeys_empty_with_ids
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyEmpty; txt=text_softkey_empty;},
        CBA_BUTTON {id=EAknSoftkeyEmpty; txt=text_softkey_empty;},
        CBA_BUTTON {id=EAknSoftkeyEmpty; txt=text_softkey_empty;}
        };
    }

RESOURCE CBA r_avkon_softkeys_ok_empty
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyOk; txt=text_softkey_ok; },
        CBA_BUTTON {txt=text_softkey_empty;},
        CBA_BUTTON {id=EAknSoftkeyOk; txt=text_softkey_ok; }
        };
    }

RESOURCE CBA r_avkon_softkeys_select_cancel
    {
    buttons =
        {
        // This prevents EAknSoftkeySelect operating on a long keypress
        AVKON_CBA_BUTTON{id=EAknSoftkeySelect; longpressid=0; txt= text_softkey_select; },
        CBA_BUTTON{id=EAknSoftkeyCancel; txt= text_softkey_cancel; }
        };
    }

RESOURCE CBA r_avkon_softkeys_ok_cancel
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyOk; txt=text_softkey_ok;},
        CBA_BUTTON {id=EAknSoftkeyCancel; txt= text_softkey_cancel;},
        CBA_BUTTON {id=EAknSoftkeyOk; txt=text_softkey_ok;}
        };
    }

RESOURCE CBA r_avkon_softkeys_ok_details
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyOk; txt=text_softkey_ok;},
        CBA_BUTTON {id=EAknSoftkeyDetails; txt=text_softkey_details;},
        CBA_BUTTON {id=EAknSoftkeyOk; txt=text_softkey_ok;}
        };
    }

RESOURCE CBA r_avkon_softkeys_call_cancel
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyCall; txt=text_softkey_call;},
        CBA_BUTTON {id=EAknSoftkeyCancel; txt=text_softkey_cancel;}
        };
    }

RESOURCE CBA r_avkon_softkeys_options_back
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyOptions; txt = text_softkey_option;},
        CBA_BUTTON {id=EAknSoftkeyBack; txt = text_softkey_back; }
        };
    }

RESOURCE CBA r_avkon_softkeys_options_done
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyOptions; txt = text_softkey_option;},
        CBA_BUTTON {id=EAknSoftkeyDone; txt=text_softkey_done; }
        };
    }

RESOURCE CBA r_avkon_softkeys_options_cancel
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyOptions; txt = text_softkey_option;},
        CBA_BUTTON {id=EAknSoftkeyCancel; txt = text_softkey_cancel; }
        };
    }

RESOURCE CBA r_avkon_softkeys_options_exit
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyOptions; txt = text_softkey_option;},
        CBA_BUTTON {id=EAknSoftkeyExit; txt = text_softkey_exit; }
        };
    }

RESOURCE CBA r_avkon_softkeys_ok_back
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyOk; txt=text_softkey_ok;},
        CBA_BUTTON {id=EAknSoftkeyBack; txt=text_softkey_back;}
        };
    }

RESOURCE CBA r_avkon_softkeys_cancel
    {
    buttons =
        {
        CBA_BUTTON { txt=text_softkey_empty;},
        CBA_BUTTON { id=EAknSoftkeyCancel; txt=text_softkey_cancel;},
        CBA_BUTTON { txt=text_softkey_empty;}
        };
    }

RESOURCE CBA r_avkon_softkeys_back
    {
    buttons =
        {
        CBA_BUTTON { txt=text_softkey_empty;},
        CBA_BUTTON { id=EAknSoftkeyBack; txt=text_softkey_back; },
        CBA_BUTTON { txt=text_softkey_empty;}
        };
    }

RESOURCE CBA r_avkon_softkeys_close
    {
    buttons =
        {
        CBA_BUTTON { txt=text_softkey_empty; },
        CBA_BUTTON { id=EAknSoftkeyClose; txt=text_softkey_close; },
        CBA_BUTTON { txt=text_softkey_empty; }
        };
    }

RESOURCE CBA r_avkon_softkeys_done_back
    {
    buttons =
        {
        CBA_BUTTON { id=EAknSoftkeyDone; txt=text_softkey_done; },
        CBA_BUTTON { id=EAknSoftkeyBack; txt=text_softkey_back; }
        };
    }

RESOURCE CBA r_avkon_softkeys_done_cancel
    {
    buttons =
        {
        CBA_BUTTON { id=EAknSoftkeyDone; txt=text_softkey_done; },
        CBA_BUTTON { id=EAknSoftkeyCancel; txt=text_softkey_cancel; }
        };
    }

RESOURCE CBA r_avkon_softkeys_select_back
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeySelect; txt= text_softkey_select;},
        CBA_BUTTON {id=EEikBidCancel; txt=text_softkey_back;}
        };
    }

RESOURCE CBA r_avkon_softkeys_mark_back
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyMark; txt=text_softkey_mark;},
        CBA_BUTTON {id=EAknSoftkeyOk; txt=text_softkey_back;}
        };
    }

RESOURCE CBA r_avkon_softkeys_unmark_back
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyUnmark; txt=text_softkey_unmark;},
        CBA_BUTTON {id=EAknSoftkeyOk; txt=text_softkey_back;}
        };
    }

RESOURCE CBA r_avkon_softkeys_yes_no
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyYes; txt=text_softkey_yes;},
        CBA_BUTTON {id=EAknSoftkeyNo; txt=text_softkey_no;},
        CBA_BUTTON {id=EAknSoftkeyYes; txt=text_softkey_yes;}
        } ;
    }


RESOURCE CBA r_avkon_softkeys_unlock_empty
    {
    buttons =
        {
        CBA_BUTTON{id=EAknSoftkeyUnlock; txt= text_softkey_unlock; },
        CBA_BUTTON{txt=text_softkey_empty; },
        CBA_BUTTON{txt=text_softkey_empty; }
        };
    }

RESOURCE CBA r_avkon_softkeys_save_back
    {
    buttons =
        {
        CBA_BUTTON{id=EAknSoftkeySave; txt=text_softkey_save; },
        CBA_BUTTON{id=EAknSoftkeyBack; txt=text_softkey_back; }
        };
    }

RESOURCE CBA r_avkon_softkeys_show_cancel
    {
    buttons =
        {
        CBA_BUTTON{id=EAknSoftkeyShow  ;txt=text_softkey_show; },
        CBA_BUTTON{id=EAknSoftkeyCancel;txt=text_softkey_cancel; },
        CBA_BUTTON{id=EAknSoftkeyShow  ;txt=text_softkey_show; }
        };
    }

RESOURCE CBA r_avkon_softkeys_show_exit
    {
    buttons =
        {
        CBA_BUTTON{id=EAknSoftkeyShow  ;txt=text_softkey_show; },
        CBA_BUTTON{id=EAknSoftkeyExit;txt=text_softkey_exit; },
        CBA_BUTTON{id=EAknSoftkeyShow  ;txt=text_softkey_show; }
        };
    }

RESOURCE CBA r_avkon_softkeys_answer_exit
    {
    buttons =
        {
        CBA_BUTTON{id=EAknSoftkeyShow  ;txt=text_softkey_answer; },
        CBA_BUTTON{id=EAknSoftkeyExit;txt=text_softkey_exit; },
        CBA_BUTTON{id=EAknSoftkeyShow  ;txt=text_softkey_answer; }
        };
    }

RESOURCE CBA r_avkon_softkeys_exit
    {
    buttons =
        {
        CBA_BUTTON { txt=text_softkey_empty;},
        CBA_BUTTON { id=EAknSoftkeyBack; txt=text_softkey_exit; },
        CBA_BUTTON { txt=text_softkey_empty;}
        };
    }

RESOURCE CBA r_avkon_softkeys_read_exit
    {
    buttons =
        {
        CBA_BUTTON{id=EAknSoftkeyRead;txt=text_softkey_read; },
        CBA_BUTTON{id=EAknSoftkeyExit;txt=text_softkey_exit; },
        CBA_BUTTON{id=EAknSoftkeyRead;txt=text_softkey_read; }
        };
    }

RESOURCE CBA r_avkon_softkeys_listen_exit
    {
    buttons=
        {
        CBA_BUTTON{id=EAknSoftkeyListen;txt=text_softkey_listen; },
        CBA_BUTTON{id=EAknSoftkeyExit  ;txt=text_softkey_exit; },
        CBA_BUTTON{id=EAknSoftkeyListen;txt=text_softkey_listen; }
        };
    }

RESOURCE CBA r_avkon_softkeys_search_back
    {
    buttons =
        {
        CBA_BUTTON{id=EAknSoftkeySearch; txt=text_softkey_search; },
        CBA_BUTTON{id=EAknSoftkeyBack; txt=text_softkey_back; }
        };
    }

RESOURCE CBA r_avkon_softkeys_again_quit
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyAgain; txt = text_softkey_again;},
        CBA_BUTTON {id=EAknSoftkeyQuit; txt = text_softkey_quit; }
        };
    }


RESOURCE CBA r_avkon_softkeys_quit
    {
    buttons =
        {
        CBA_BUTTON { txt=text_softkey_empty;},
        CBA_BUTTON { id=EAknSoftkeyQuit; txt=text_softkey_quit; },
        CBA_BUTTON { txt=text_softkey_empty;}
        };
    }

RESOURCE CBA r_avkon_softkeys_insert_back
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyInsert; txt=text_softkey_insert_char;},
        CBA_BUTTON {id=EAknSoftkeyBack; txt=text_softkey_back;},
        CBA_BUTTON {id=EAknSoftkeyInsert; txt=text_softkey_insert_char;}
        };
    }

//
// Status Pane - related resources
//
RESOURCE STATUS_PANE_SYSTEM_MODEL r_avkon_status_pane
    {
    panes =
        {
        SPANE_PANE
            {
            id = EEikStatusPaneUidSignal;
            flags = EEikStatusPaneAppOwned;
            type = EAknCtSignalIndicatorContainerPane;
            resource = r_avkon_status_pane_signal_default;
            },
        SPANE_PANE
            {
            id = EEikStatusPaneUidBattery;
            flags = EEikStatusPaneAppOwned;
            type = EAknCtBatteryIndicatorContainerPane;
            resource = r_avkon_status_pane_battery_default;
            },
        SPANE_PANE
            {
            id = EEikStatusPaneUidContext;
            flags = EEikStatusPaneAppOwned;
            type = EAknCtContextPane;
            resource = r_avkon_status_pane_context_default;
            },
        SPANE_PANE
            {
            id = EEikStatusPaneUidTitle;
            flags = EEikStatusPaneAppOwned;
            type = EAknCtTitlePane;
            resource = r_avkon_status_pane_title_default;
            },
        SPANE_PANE
            {
            id = EEikStatusPaneUidNavi;
            flags = EEikStatusPaneAppOwned;
            type = EAknCtNaviPane;
            resource = r_avkon_status_pane_navi_default;
            },
        SPANE_PANE
            {
            id = EEikStatusPaneUidIndic;
            flags = EEikStatusPaneAppOwned;
            type = EAknCtUniversalIndicatorPane;
            resource = r_avkon_status_pane_indicator_default;
            },
        SPANE_PANE
            {
            id = EEikStatusPaneUidClock;
            flags = EEikStatusPaneAppOwned;
            type = EAknCtIdleContextPane;
            resource = r_avkon_status_pane_clock;
            },
        SPANE_PANE
            {
            id = EEikStatusPaneUidDigitalClock;
            flags = EEikStatusPaneAppOwned;
            type = EAknCtDigitalClockPane;
            resource = r_avkon_status_pane_digital_clock;
            },
        SPANE_PANE
            {
            id = EEikStatusPaneUidEmpty;
            flags = EEikStatusPaneAppOwned;
            type = EAknCtStatuspaneEmpty;
            resource = r_avkon_status_pane_empty;
            }

        };

    default_layout = r_avkon_status_pane_layout_usual;
    layouts =
        {
        r_avkon_status_pane_layout_idle,
        r_avkon_status_pane_layout_usual,
        r_avkon_status_pane_layout_power_off_recharge,
        r_avkon_status_pane_layout_empty,
        r_avkon_status_pane_layout_small,
        r_avkon_status_pane_layout_small_with_signal_pane,
        r_avkon_status_pane_layout_vt,
        r_avkon_status_pane_layout_usual_mirrored,
        r_avkon_status_pane_layout_idle_mirrored,
        r_avkon_status_pane_layout_power_off_recharge_mirrored,
        r_avkon_status_pane_layout_small_with_signal_pane_mirrored,
        r_avkon_status_pane_layout_vt_mirrored,
        r_avkon_stacon_pane_layout_usual_softkeys_right,
        r_avkon_stacon_pane_layout_usual_softkeys_left,
        r_avkon_stacon_pane_layout_idle_softkeys_right,
        r_avkon_stacon_pane_layout_idle_softkeys_left,
        r_avkon_stacon_pane_layout_empty_softkeys_right,
        r_avkon_stacon_pane_layout_empty_softkeys_left,
        r_avkon_status_pane_layout_idle_flat,
        r_avkon_status_pane_layout_usual_flat,
#ifndef __SERIES60_31__
        r_avkon_status_pane_layout_usual_ext,
        r_avkon_status_pane_layout_idle_ext,
#endif
        r_avkon_widescreen_pane_layout_usual,
        r_avkon_widescreen_pane_layout_idle,
        r_avkon_widescreen_pane_layout_usual_flat,
        r_avkon_widescreen_pane_layout_idle_flat,
        r_avkon_widescreen_pane_layout_usual_flat_no_softkeys,
        r_avkon_widescreen_pane_layout_idle_flat_no_softkeys
        };
    }


RESOURCE STATUS_PANE_LAYOUT r_avkon_status_pane_layout_idle
    {
    position = EEikStatusPaneLayoutAknLafDefined;
    pane_tree = SPANE_LAYOUT_TREE_NODE
        {
        // No pane id, this is the root of the pane tree
        // Flags are ignored at the top level - size is always fixed
        size = 56;      // This is the total width of this layout
        sub_panes =
            {
            SPANE_LAYOUT_TREE_NODE
                {
                // No pane id set, because this is a set of sub panes
                // no flags needed - fixed size.
                size = 12;
                sub_panes =
                    {
                    SPANE_LAYOUT_TREE_NODE
                        {
                        id = EEikStatusPaneUidSignal;
                        // no flags needed - fixed size.
                        size = 44;
                        sub_panes = {};
                        },
                    SPANE_LAYOUT_TREE_NODE
                        {
                        // no id - empty pane
                        flags = EEikStatusPaneIsStretchable;  // will be stretched to use available space
                        size = 1;   // will be stretched to use available space
                        sub_panes = {};
                        }
                    };
                },
            SPANE_LAYOUT_TREE_NODE
                {
                // No pane id set, because this is a set of sub panes
                // no flags needed - fixed size.
                size = 51;
                sub_panes =
                    {
                    SPANE_LAYOUT_TREE_NODE
                        {
                        id = EEikStatusPaneUidClock;
                        flags = EEikStatusPaneIsStretchable;  // will be stretched to use available space.
                        size = 1;   // will be stretched to use available space (=56 pixels)
                        sub_panes = {};
                        }
                    };
                },
            SPANE_LAYOUT_TREE_NODE
                {
                // No pane id set, because this is a set of sub panes
                flags = EEikStatusPaneIsStretchable;  // will be stretched to use available space
                size = 1;   // will be stretched to use available space
                sub_panes =
                    {
                    SPANE_LAYOUT_TREE_NODE
                        {
                        // No pane id set, because this is a set of sub panes
                        // no flags needed - fixed size.
                        size = 44;
                        sub_panes =
                            {
                            SPANE_LAYOUT_TREE_NODE
                                {
                                // No pane id set, because this is a set of sub panes
                                // no flags needed - fixed size.
                                size = 101;
                                sub_panes =
                                    {
                                    SPANE_LAYOUT_TREE_NODE
                                        {
                                        id = EEikStatusPaneUidTitle;
                                        // no flags needed - fixed size.
                                        size = 28;
                                        sub_panes = {};
                                        },
                                    SPANE_LAYOUT_TREE_NODE
                                        {
                                        id = EEikStatusPaneUidNavi;
                                        // no flags needed - fixed size.
                                        size = 16;
                                        sub_panes = {};
                                        }
                                    };
                                },
                            SPANE_LAYOUT_TREE_NODE
                                {
                                id = EEikStatusPaneUidBattery;
                                // no flags needed - fixed size.
                                size = 12;
                                sub_panes = {};
                                }
                            };
                        },
                    SPANE_LAYOUT_TREE_NODE
                        {
                        id = EEikStatusPaneUidIndic;
                        // no flags needed - fixed size.
                        size = 12;
                        sub_panes = {};
                        }
                    };
                }
            };
        };
    }

RESOURCE STATUS_PANE_LAYOUT r_avkon_status_pane_layout_usual
    {
    position = EEikStatusPaneLayoutAknLafDefined;
    pane_tree = SPANE_LAYOUT_TREE_NODE
        {
        // No pane id, this is the root of the pane tree
        // Flags are ignored at the top level - size is always fixed
        size = 44;      // This is the total height of this layout
        sub_panes =
            {
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidSignal;
                // no flags needed - fixed size.
                size = 12;
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidContext;
                // no flags needed - fixed size.
                size = 44;
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                // No pane id set, because this is a set of sub panes
                flags = EEikStatusPaneIsStretchable;  // will be stretched to use available space
                size = 1;   // will be stretched to use available space
                sub_panes =
                    {
                    SPANE_LAYOUT_TREE_NODE
                        {
                        // No pane id set, because this is a set of sub panes
                        // no flags needed - fixed size.
                        size = 28;
                        sub_panes =
                            {
                            SPANE_LAYOUT_TREE_NODE
                                {
                                id = EEikStatusPaneUidTitle;
                                flags = EEikStatusPaneIsStretchable;
                                size = 1;
                                sub_panes = {};
                                },
                            SPANE_LAYOUT_TREE_NODE
                                {
                                id = EEikStatusPaneUidIndic;
                                // no flags needed - fixed size.
                                size = 12;
                                sub_panes = {};
                                }
                            };
                        },
                    SPANE_LAYOUT_TREE_NODE
                        {
                        id = EEikStatusPaneUidNavi;
                        // no flags needed - fixed size.
                        size = 16;
                        sub_panes = {};
                        }
                    };
                },
                SPANE_LAYOUT_TREE_NODE
                    {
                    id = EEikStatusPaneUidBattery;
                    size = 0; // dummy value, real value comes from AknLayout system
                    sub_panes = {};
                    }
            };
        };
    }


RESOURCE STATUS_PANE_LAYOUT r_avkon_status_pane_layout_power_off_recharge
    {
    position = EEikStatusPaneLayoutAknLafDefined;
    pane_tree = SPANE_LAYOUT_TREE_NODE
        {
        // No pane id, this is the root of the pane tree
        // Flags are ignored at the top level - size is always fixed
        size = 44;      // This is the total height of this layout
        sub_panes =
            {
            SPANE_LAYOUT_TREE_NODE
                {
                flags = EEikStatusPaneIsStretchable;  // will be stretched to use available space
                size = 1;
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidBattery;
                // no flags needed - fixed size.
                size = 12;
                sub_panes = {};
                }
            };
        };
    }

RESOURCE STATUS_PANE_LAYOUT r_avkon_status_pane_layout_empty
    {
	position = EEikStatusPaneLayoutAknLafDefined;
    pane_tree = SPANE_LAYOUT_TREE_NODE
        {
        // No pane id, this is the root of the pane tree
        // Flags are ignored at the top level - size is always fixed
        size = 0;       // This is the total height of this layout
        sub_panes = {};  // No any sub-panes
        };
    }


RESOURCE TITLE_PANE r_avkon_status_pane_title_default {}
RESOURCE CONTEXT_PANE r_avkon_status_pane_context_default {}
RESOURCE NAVI_DECORATOR r_avkon_status_pane_navi_default {type = 0;}
RESOURCE SIGNAL_PANE r_avkon_status_pane_signal_default {level = 0;}
RESOURCE BATTERY_PANE r_avkon_status_pane_battery_default {level = 0;}
RESOURCE INDICATOR_PANE r_avkon_status_pane_indicator_default
    {
    indicators =
        {
        INDICATOR
            {
            uid = EAknIndicatorIrActive;
            npriority = 20;
            wpriority = 20;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateAnimate;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_ir_uni_blank;
                    widebmpmask = EMbmAvkonQgn_stat_ir_uni_blank_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_ir_uni_blank;
                    narrowbmpmask = EMbmAvkonQgn_stat_ir_uni_blank_mask;
                    };
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_ir_uni;
                    widebmpmask = EMbmAvkonQgn_stat_ir_uni_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_ir_uni;
                    narrowbmpmask = EMbmAvkonQgn_stat_ir_uni_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorEnvelope;
            npriority = 30;
            wpriority = 30;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateAnimate;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_message_uni_blank;
                    widebmpmask = EMbmAvkonQgn_stat_message_uni_blank_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_message_uni_blank;
                    narrowbmpmask = EMbmAvkonQgn_stat_message_uni_blank_mask;
                    };
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_message_uni;
                    widebmpmask = EMbmAvkonQgn_stat_message_uni_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_message_uni;
                    narrowbmpmask = EMbmAvkonQgn_stat_message_uni_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorMissedCalls;
            npriority = 25;
            wpriority = 25;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_missed_calls_uni;
                    widebmpmask = EMbmAvkonQgn_stat_missed_calls_uni_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_missed_calls_uni;
                    narrowbmpmask = EMbmAvkonQgn_stat_missed_calls_uni_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorEmailMessage;
            npriority = 50;
            wpriority = 50;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_message_mail_uni;
                    widebmpmask = EMbmAvkonQgn_stat_message_mail_uni_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_message_mail_uni;
                    narrowbmpmask = EMbmAvkonQgn_stat_message_mail_uni_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorRemoteMailboxEmailMessage;
            npriority = 45;
            wpriority = 45;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_message_remote_uni;
                    widebmpmask = EMbmAvkonQgn_stat_message_remote_uni_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_message_remote_uni;
                    narrowbmpmask = EMbmAvkonQgn_stat_message_remote_uni_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorDataMessage;
            npriority = 60;
            wpriority = 60;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_message_data_uni;
                    widebmpmask = EMbmAvkonQgn_stat_message_data_uni_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_message_data_uni;
                    narrowbmpmask = EMbmAvkonQgn_stat_message_data_uni_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorFaxMessage;
            npriority = 70;
            wpriority = 70;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_message_fax_uni;
                    widebmpmask = EMbmAvkonQgn_stat_message_fax_uni_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_message_fax_uni;
                    narrowbmpmask = EMbmAvkonQgn_stat_message_fax_uni_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorOtherMessage;
            npriority = 30;
            wpriority = 30;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_message_other_uni;
                    widebmpmask = EMbmAvkonQgn_stat_message_other_uni_mask;
                    narrowbmpid =EMbmAvkonQgn_stat_message_other_uni;
                    narrowbmpmask = EMbmAvkonQgn_stat_message_other_uni_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorSecuredConnection;
            npriority = 80;
            wpriority = 80;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_cyphering_on_uni;
                    widebmpmask = EMbmAvkonQgn_stat_cyphering_on_uni_mask;
                    narrowbmpid =EMbmAvkonQgn_stat_cyphering_on_uni;
                    narrowbmpmask = EMbmAvkonQgn_stat_cyphering_on_uni_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorVoiceMailWaiting;
            npriority = 90;
            wpriority = 90;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_vm0_uni;
                    widebmpmask = EMbmAvkonQgn_stat_vm0_uni_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_vm0_uni;
                    narrowbmpmask = EMbmAvkonQgn_stat_vm0_uni_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorVoiceMailWaitingOnLine1;
            npriority = 90;
            wpriority = 90;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_vm1_uni;
                    widebmpmask = EMbmAvkonQgn_stat_vm1_uni_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_vm1_uni;
                    narrowbmpmask = EMbmAvkonQgn_stat_vm1_uni_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorVoiceMailWaitingOnLine2;
            npriority = 90;
            wpriority = 90;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_vm2_uni;
                    widebmpmask = EMbmAvkonQgn_stat_vm2_uni_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_vm2_uni;
                    narrowbmpmask = EMbmAvkonQgn_stat_vm2_uni_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorVoiceMailWaitingOnBothLines;
            npriority = 90;
            wpriority = 90;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_vm12_uni;
                    widebmpmask = EMbmAvkonQgn_stat_vm12_uni_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_vm12_uni;
                    narrowbmpmask = EMbmAvkonQgn_stat_vm12_uni_mask;
                    };
                };
            },
        INDICATOR
            {
            // HomeZone indicator is shown only in idle.
            uid = EAknIndicatorHomeZone;
            // npriority = 100;
            wpriority = 100;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_zone_home;
                    widebmpmask = EMbmAvkonQgn_stat_zone_home_mask;
                    // narrowbmpid = EMbmAvkonQgn_stat_zone_home;
                    // narrowbmpmask = EMbmAvkonQgn_stat_zone_home_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorBluetooth;
            npriority = 110;
            wpriority = 110;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateAnimate;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_bt_uni_blank;
                    widebmpmask = EMbmAvkonQgn_stat_bt_uni_blank_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_bt_uni_blank;
                    narrowbmpmask = EMbmAvkonQgn_stat_bt_uni_blank_mask;
                    };
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_bt_invisible_uni;
                    widebmpmask = EMbmAvkonQgn_stat_bt_invisible_uni_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_bt_invisible_uni;
                    narrowbmpmask = EMbmAvkonQgn_stat_bt_invisible_uni_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorOutbox;
            npriority = 140;
            wpriority = 140;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_outbox_uni;
                    widebmpmask = EMbmAvkonQgn_stat_outbox_uni_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_outbox_uni;
                    narrowbmpmask = EMbmAvkonQgn_stat_outbox_uni_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorKeyguard;
            npriority = 10;
            wpriority = 10;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_keyguard;
                    widebmpmask = EMbmAvkonQgn_stat_keyguard_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_keyguard;
                    narrowbmpmask = EMbmAvkonQgn_stat_keyguard_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorAllCallsForwarded;
            npriority = 120;
            wpriority = 120;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_divert0;
                    widebmpmask = EMbmAvkonQgn_stat_divert0_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_divert0;
                    narrowbmpmask = EMbmAvkonQgn_stat_divert0_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorCallsForwardedOnLine1;
            npriority = 120;
            wpriority = 120;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_divert1;
                    widebmpmask = EMbmAvkonQgn_stat_divert1_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_divert1;
                    narrowbmpmask = EMbmAvkonQgn_stat_divert1_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorCallsForwardedOnLine2;
            npriority = 120;
            wpriority = 120;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_divert2;
                    widebmpmask = EMbmAvkonQgn_stat_divert2_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_divert2;
                    narrowbmpmask = EMbmAvkonQgn_stat_divert2_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorCallsForwardedOnBothLines;
            npriority = 120;
            wpriority = 120;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_divert12;
                    widebmpmask = EMbmAvkonQgn_stat_divert12_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_divert12;
                    narrowbmpmask = EMbmAvkonQgn_stat_divert12_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorCallsForwardedToVoiceMailbox;
            npriority = 120;
            wpriority = 120;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_divert_vm;
                    widebmpmask = EMbmAvkonQgn_stat_divert_vm_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_divert_vm;
                    narrowbmpmask = EMbmAvkonQgn_stat_divert_vm_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorSelectedLine;
            npriority = 130;
            wpriority = 130;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_line2;
                    widebmpmask = EMbmAvkonQgn_stat_line2_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_line2;
                    narrowbmpmask = EMbmAvkonQgn_stat_line2_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorAlarmClock;
            npriority = 150;
            wpriority = 150;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_alarm;
                    widebmpmask = EMbmAvkonQgn_stat_alarm_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_alarm;
                    narrowbmpmask = EMbmAvkonQgn_stat_alarm_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorStopWatch;
            npriority = 163;
            wpriority = 163;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_clk_stp_watch_uni;
                    widebmpmask = EMbmAvkonQgn_stat_clk_stp_watch_uni_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_clk_stp_watch_uni;
                    narrowbmpmask = EMbmAvkonQgn_stat_clk_stp_watch_uni_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorHeadset;
            npriority = 160;
            wpriority = 160;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_headset;
                    widebmpmask = EMbmAvkonQgn_stat_headset_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_headset;
                    narrowbmpmask = EMbmAvkonQgn_stat_headset_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorHeadsetUnavailable;
            npriority = 165;
            wpriority = 165;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_headset_unavailable;
                    widebmpmask = EMbmAvkonQgn_stat_headset_unavailable_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_headset_unavailable;
                    narrowbmpmask = EMbmAvkonQgn_stat_headset_unavailable_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorLoopset;
            npriority = 170;
            wpriority = 170;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_loopset;
                    widebmpmask = EMbmAvkonQgn_stat_loopset_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_loopset;
                    narrowbmpmask = EMbmAvkonQgn_stat_loopset_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorIHFActive;
            npriority = 190;
            wpriority = 190;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_ihf;
                    widebmpmask = EMbmAvkonQgn_stat_ihf_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_ihf;
                    narrowbmpmask = EMbmAvkonQgn_stat_ihf_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorBluetoothModuleOn;
            npriority = 110;
            wpriority = 110;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_mod_bt_invisible_uni;
                    widebmpmask = EMbmAvkonQgn_stat_mod_bt_invisible_uni_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_mod_bt_invisible_uni;
                    narrowbmpmask = EMbmAvkonQgn_stat_mod_bt_invisible_uni_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorInstantMessage;
            npriority = 40;
            wpriority = 40;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_im_uni;
                    widebmpmask = EMbmAvkonQgn_stat_im_uni_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_im_uni;
                    narrowbmpmask = EMbmAvkonQgn_stat_im_uni_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorTTY;
            npriority = 180;
            wpriority = 180;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_tty;
                    widebmpmask = EMbmAvkonQgn_stat_tty_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_tty;
                    narrowbmpmask = EMbmAvkonQgn_stat_tty_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorUSBConnection;
            npriority = 155;
            wpriority = 155;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_usb_uni;
                    widebmpmask = EMbmAvkonQgn_stat_usb_uni_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_usb_uni;
                    narrowbmpmask = EMbmAvkonQgn_stat_usb_uni_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorLocation;
            npriority = 115;
            wpriority = 115;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_loc;
                    widebmpmask = EMbmAvkonQgn_stat_loc_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_loc;
                    narrowbmpmask = EMbmAvkonQgn_stat_loc_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorLocationOn;
            npriority = 117;
            wpriority = 117;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_loc_on;
                    widebmpmask = EMbmAvkonQgn_stat_loc_on;
                    narrowbmpid = EMbmAvkonQgn_stat_loc_on;
                    narrowbmpmask = EMbmAvkonQgn_stat_loc_on;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorLocationOff;
            npriority = 117;
            wpriority = 117;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_loc_off;
                    widebmpmask = EMbmAvkonQgn_stat_loc_off;
                    narrowbmpid = EMbmAvkonQgn_stat_loc_off;
                    narrowbmpmask = EMbmAvkonQgn_stat_loc_off;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorRoaming;
            npriority = 25;
            wpriority = 25;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_cdma_roaming_uni;
                    widebmpmask = EMbmAvkonQgn_stat_cdma_roaming_uni;
                    narrowbmpid = EMbmAvkonQgn_stat_cdma_roaming_uni;
                    narrowbmpmask = EMbmAvkonQgn_stat_cdma_roaming_uni;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorVoIP;
            npriority = 95;
            wpriority = 95;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_voip_readiness;
                    widebmpmask = EMbmAvkonQgn_stat_voip_readiness_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_voip_readiness;
                    narrowbmpmask = EMbmAvkonQgn_stat_voip_readiness_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorPoC;
            npriority = 97;
            wpriority = 97;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_poc_on;
                    widebmpmask = EMbmAvkonQgn_stat_poc_on_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_poc_on;
                    narrowbmpmask = EMbmAvkonQgn_stat_poc_on_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorPoCDnD;
            npriority = 97;
            wpriority = 97;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_poc_dnd;
                    widebmpmask = EMbmAvkonQgn_stat_poc_dnd_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_poc_dnd;
                    narrowbmpmask = EMbmAvkonQgn_stat_poc_dnd_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorPoCMissed;
            npriority = 97; // TBD
            wpriority = 97;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_poc_missed_uni;
                    widebmpmask = EMbmAvkonQgn_stat_poc_missed_uni_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_poc_missed_uni;
                    narrowbmpmask = EMbmAvkonQgn_stat_poc_missed_uni_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorWlanAvailable;
            npriority = 187;
            wpriority = 187;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_wlan_avail_uni;
                    widebmpmask = EMbmAvkonQgn_stat_wlan_avail_uni_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_wlan_avail_uni;
                    narrowbmpmask = EMbmAvkonQgn_stat_wlan_avail_uni_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorWlanActive;
            npriority = 187;
            wpriority = 187;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_wlan_active_uni;
                    widebmpmask = EMbmAvkonQgn_stat_wlan_active_uni_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_wlan_active_uni;
                    narrowbmpmask = EMbmAvkonQgn_stat_wlan_active_uni_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorWlanActiveSecure;
            npriority = 187;
            wpriority = 187;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_wlan_active_secure_uni;
                    widebmpmask = EMbmAvkonQgn_stat_wlan_active_secure_uni_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_wlan_active_secure_uni;
                    narrowbmpmask = EMbmAvkonQgn_stat_wlan_active_secure_uni_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorTvOut;
            npriority = 186;
            wpriority = 186;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_tvout;
                    widebmpmask = EMbmAvkonQgn_stat_tvout_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_tvout;
                    narrowbmpmask = EMbmAvkonQgn_stat_tvout_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorMobileTV;
            npriority = 112;
            wpriority = 112;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_indi_mtv_on;
                    widebmpmask = EMbmAvkonQgn_stat_indi_mtv_on_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_indi_mtv_on;
                    narrowbmpmask = EMbmAvkonQgn_stat_indi_mtv_on_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorMobileTVRec;
            npriority = 112;
            wpriority = 112;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_indi_mtv_rec;
                    widebmpmask = EMbmAvkonQgn_stat_indi_mtv_rec_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_indi_mtv_rec;
                    narrowbmpmask = EMbmAvkonQgn_stat_indi_mtv_rec_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorHAC;
            npriority = 175;
            wpriority = 175;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_hac;
                    widebmpmask = EMbmAvkonQgn_stat_hac_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_hac;
                    narrowbmpmask = EMbmAvkonQgn_stat_hac_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorMemoryCard;
            npriority = 85;
            wpriority = 85;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_memc_uni;
                    widebmpmask = EMbmAvkonQgn_stat_memc_uni_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_memc_uni;
                    narrowbmpmask = EMbmAvkonQgn_stat_memc_uni_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorTARM;
            npriority = 152;
            wpriority = 152;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_tarm;
                    widebmpmask = EMbmAvkonQgn_stat_tarm_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_tarm;
                    narrowbmpmask = EMbmAvkonQgn_stat_tarm_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorTARMModuleOn;
            npriority = 152;
            wpriority = 152;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_mod_tarm;
                    widebmpmask = EMbmAvkonQgn_stat_mod_tarm_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_mod_tarm;
                    narrowbmpmask = EMbmAvkonQgn_stat_mod_tarm_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorCarkit;
            npriority = 185;
            wpriority = 185;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_carkit;
                    widebmpmask = EMbmAvkonQgn_stat_carkit_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_carkit;
                    narrowbmpmask = EMbmAvkonQgn_stat_carkit_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorVideoSharing;
            npriority = 158;
            wpriority = 158;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_video_sharing;
                    widebmpmask = EMbmAvkonQgn_stat_video_sharing_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_video_sharing;
                    narrowbmpmask = EMbmAvkonQgn_stat_video_sharing_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorSynchronization;
            npriority = 72;
            wpriority = 72;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_sync_uni;
                    widebmpmask = EMbmAvkonQgn_stat_sync_uni_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_sync_uni;
                    narrowbmpmask = EMbmAvkonQgn_stat_sync_uni_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorGPS;
            npriority = 115;
            wpriority = 115;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_loc_gps_uni;
                    widebmpmask = EMbmAvkonQgn_stat_loc_gps_uni_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_loc_gps_uni;
                    narrowbmpmask = EMbmAvkonQgn_stat_loc_gps_uni_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorBluetoothVisible;
            npriority = 110;
            wpriority = 110;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateAnimate;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_bt_uni_blank;
                    widebmpmask = EMbmAvkonQgn_stat_bt_uni_blank_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_bt_uni_blank;
                    narrowbmpmask = EMbmAvkonQgn_stat_bt_uni_blank_mask;
                    };
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_bt_uni;
                    widebmpmask = EMbmAvkonQgn_stat_bt_uni_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_bt_uni;
                    narrowbmpmask = EMbmAvkonQgn_stat_bt_uni_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorBluetoothModuleOnVisible;
            npriority = 110;
            wpriority = 110;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_mod_bt;
                    widebmpmask = EMbmAvkonQgn_stat_mod_bt_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_mod_bt;
                    narrowbmpmask = EMbmAvkonQgn_stat_mod_bt_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorFMTxSending;
            npriority = 193;
            wpriority = 193;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid     = EMbmAvkonQgn_stat_fmtx_on_uni;
                    widebmpmask   = EMbmAvkonQgn_stat_fmtx_on_uni_mask;
                    narrowbmpid   = EMbmAvkonQgn_stat_fmtx_on_uni;
                    narrowbmpmask = EMbmAvkonQgn_stat_fmtx_on_uni_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknIndicatorFMTxEnabled;
            npriority = 193;
            wpriority = 193;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid     = EMbmAvkonQgn_stat_fmtx_off_uni;
                    widebmpmask   = EMbmAvkonQgn_stat_fmtx_off_uni_mask;
                    narrowbmpid   = EMbmAvkonQgn_stat_fmtx_off_uni;
                    narrowbmpmask = EMbmAvkonQgn_stat_fmtx_off_uni_mask;
                    };
                };
            },

        INDICATOR
            {
            uid = EAknIndicatorUSBMemConnected;
            npriority = 155;
            wpriority = 155;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_usb_memc_connect_uni;
                    widebmpmask = EMbmAvkonQgn_stat_usb_memc_connect_uni_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_usb_memc_connect_uni;
                    narrowbmpmask = EMbmAvkonQgn_stat_usb_memc_connect_uni_mask;
                    };
                };
            },

        INDICATOR
            {
            uid = EAknIndicatorUSBMemActive;
            npriority = 155;
            wpriority = 155;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_usb_memc_transfer_uni;
                    widebmpmask = EMbmAvkonQgn_stat_usb_memc_transfer_uni_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_usb_memc_transfer_uni;
                    narrowbmpmask = EMbmAvkonQgn_stat_usb_memc_transfer_uni_mask;
                    };
                };
            },

        INDICATOR
            {
            uid = EAknIndicatorMissedCalendarAlarm;
            npriority = 151;
            wpriority = 151;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid     = EMbmAvkonQgn_stat_cale_uni;
                    widebmpmask   = EMbmAvkonQgn_stat_cale_uni_mask;
                    narrowbmpid   = EMbmAvkonQgn_stat_cale_uni;
                    narrowbmpmask = EMbmAvkonQgn_stat_cale_uni_mask;
                    };
                };
            },
            
         INDICATOR
            {
            uid = EAknIndicatorMecoServiceTab;
            npriority = 41;
            wpriority = 41;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_servtab_uni;
                    widebmpmask = EMbmAvkonQgn_stat_servtab_uni_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_servtab_uni;
                    narrowbmpmask = EMbmAvkonQgn_stat_servtab_uni_mask;
                    };
                };
            },
            
         INDICATOR
            {
            uid = EAknIndicatorHDMI;
            npriority = 184;
            wpriority = 184;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_hdmi_connect;
                    widebmpmask = EMbmAvkonQgn_stat_hdmi_connect_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_hdmi_connect;
                    narrowbmpmask = EMbmAvkonQgn_stat_hdmi_connect_mask;
                    };
                };
            }            
        };
    }



RESOURCE INDICATOR_PANE r_avkon_navi_pane_editor_indicators
    {
    indicators =
        {
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorLowerCase;
            wpriority = 10;
            npriority = 10;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons =
                    {
                    INDICATOR_ICON
                        {
                        widebmpid = EMbmAvkonQgn_stat_case_small;
                        widebmpmask = EMbmAvkonQgn_stat_case_small_mask;
                        narrowbmpid = EMbmAvkonQgn_stat_case_small;
                        narrowbmpmask = EMbmAvkonQgn_stat_case_small_mask;
                        }
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorUpperCase;
            wpriority = 10;
            npriority = 10;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_case_capital;
                    widebmpmask = EMbmAvkonQgn_stat_case_capital_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_case_capital;
                    narrowbmpmask = EMbmAvkonQgn_stat_case_capital_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorTextCase;
            wpriority = 10;
            npriority = 10;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons =
                    {
                    INDICATOR_ICON
                        {
                        widebmpid = EMbmAvkonQgn_stat_case_text;
                        widebmpmask = EMbmAvkonQgn_stat_case_text_mask;
                        narrowbmpid = EMbmAvkonQgn_stat_case_text;
                        narrowbmpmask = EMbmAvkonQgn_stat_case_text_mask;
                        }
                    };
                };
            },
// select indicators begin
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorLowerCaseSelect;
            wpriority = 10;
            npriority = 10;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons =
                    {
                    INDICATOR_ICON
                        {
                        widebmpid = EMbmAvkonQgn_stat_case_small_select;
                        widebmpmask = EMbmAvkonQgn_stat_case_small_select_mask;
                        narrowbmpid = EMbmAvkonQgn_stat_case_small_select;
                        narrowbmpmask = EMbmAvkonQgn_stat_case_small_select_mask;
                        }
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorUpperCaseSelect;
            wpriority = 10;
            npriority = 10;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_case_capital_select;
                    widebmpmask = EMbmAvkonQgn_stat_case_capital_select_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_case_capital_select;
                    narrowbmpmask = EMbmAvkonQgn_stat_case_capital_select_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorTextCaseSelect;
            wpriority = 10;
            npriority = 10;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons =
                    {
                    INDICATOR_ICON
                        {
                        widebmpid = EMbmAvkonQgn_stat_case_text_select;
                        widebmpmask = EMbmAvkonQgn_stat_case_text_select_mask;
                        narrowbmpid = EMbmAvkonQgn_stat_case_text_select;
                        narrowbmpmask = EMbmAvkonQgn_stat_case_text_select_mask;
                        }
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorNumberCaseSelect;
            wpriority = 10;
            npriority = 10;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons =
                    {
                    INDICATOR_ICON
                        {
                        widebmpid = EMbmAvkonQgn_stat_case_numeric_select;
                        widebmpmask = EMbmAvkonQgn_stat_case_numeric_select_mask;
                        narrowbmpid = EMbmAvkonQgn_stat_case_numeric_select;
                        narrowbmpmask = EMbmAvkonQgn_stat_case_numeric_select_mask;
                        }
                    };
                };
            },

// select indicators end


        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorArabicCase;
            wpriority = 10;
            npriority = 10;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons =
                    {
                    INDICATOR_ICON
                        {
                        widebmpid = EMbmAvkonQgn_stat_case_arabic;
                        widebmpmask = EMbmAvkonQgn_stat_case_arabic_mask;
                        narrowbmpid = EMbmAvkonQgn_stat_case_arabic;
                        narrowbmpmask = EMbmAvkonQgn_stat_case_arabic_mask;
                        }
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorHebrewCase;
            wpriority = 10;
            npriority = 10;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons =
                    {
                    INDICATOR_ICON
                        {
                        widebmpid = EMbmAvkonQgn_stat_case_hebrew;
                        widebmpmask = EMbmAvkonQgn_stat_case_hebrew_mask;
                        narrowbmpid = EMbmAvkonQgn_stat_case_hebrew;
                        narrowbmpmask = EMbmAvkonQgn_stat_case_hebrew_mask;
                        }
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorThai;
            wpriority = 10;
            npriority = 10;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons =
                    {
                    INDICATOR_ICON
                        {
                        widebmpid = EMbmAvkonQgn_stat_case_thai;
                        widebmpmask = EMbmAvkonQgn_stat_case_thai_mask;
                        narrowbmpid = EMbmAvkonQgn_stat_case_thai;
                        narrowbmpmask = EMbmAvkonQgn_stat_case_thai_mask;
                        }
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorFarsiAndUrduCase;
            wpriority = 10;
            npriority = 10;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons =
                    {
                    INDICATOR_ICON
                        {
                        widebmpid = EMbmAvkonQgn_stat_farsi_case;
                        widebmpmask = EMbmAvkonQgn_stat_farsi_case_mask;
                        narrowbmpid = EMbmAvkonQgn_stat_farsi_case;
                        narrowbmpmask = EMbmAvkonQgn_stat_farsi_case_mask;
                        }
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorDevanagariCase;
            wpriority = 10;
            npriority = 10;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons =
                    {
                    INDICATOR_ICON
                        {
//			#ifdef RD_HINDI
                        widebmpid = EMbmAvkonQgn_stat_case_devanagari;
//  			#endif //RD_HINDI
                        widebmpmask = EMbmAvkonQgn_stat_case_devanagari_mask;
                        narrowbmpid = EMbmAvkonQgn_stat_case_devanagari;
                        narrowbmpmask = EMbmAvkonQgn_stat_case_devanagari_mask;
                        }
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorNumberCase;
            wpriority = 10;
            npriority = 10;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons =
                    {
                    INDICATOR_ICON
                        {
                        widebmpid = EMbmAvkonQgn_stat_case_numeric;
                        widebmpmask = EMbmAvkonQgn_stat_case_numeric_mask;
                        narrowbmpid = EMbmAvkonQgn_stat_case_numeric;
                        narrowbmpmask = EMbmAvkonQgn_stat_case_numeric_mask;
                        }
                    };
                };
            },
#ifdef RD_INTELLIGENT_TEXT_INPUT
            INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorFnKeyPressed;
            wpriority = 10;
            npriority = 10;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons =
                    {
                    INDICATOR_ICON
                        {
                        widebmpid = EMbmAvkonQgn_stat_fn_mode;
                        widebmpmask = EMbmAvkonQgn_stat_fn_mode_mask;
                        narrowbmpid = EMbmAvkonQgn_stat_fn_mode;
                        narrowbmpmask = EMbmAvkonQgn_stat_fn_mode_mask;
                        }
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorFnKeyLocked;
            wpriority = 10;
            npriority = 10;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons =
                    {
                    INDICATOR_ICON
                        {
                        widebmpid = EMbmAvkonQgn_stat_fn_lock;
                        widebmpmask = EMbmAvkonQgn_stat_fn_lock_mask;
                        narrowbmpid = EMbmAvkonQgn_stat_fn_lock;
                        narrowbmpmask = EMbmAvkonQgn_stat_fn_lock_mask;
                        }
                    };
                };
            },
#endif
#ifdef RD_HINDI_PHONETIC_INPUT
         INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorDevanagariPhoneticUpperCase;
            wpriority = 10;
            npriority = 10;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons =
                    {
                    INDICATOR_ICON
                        {
                        widebmpid = EMbmAvkonQgn_stat_case_upper_hindi_phonetic;
                        widebmpmask = EMbmAvkonQgn_stat_case_upper_hindi_phonetic_mask;
                        narrowbmpid = EMbmAvkonQgn_stat_case_upper_hindi_phonetic;
                        narrowbmpmask = EMbmAvkonQgn_stat_case_upper_hindi_phonetic_mask;
                        }
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorDevanagariPhoneticLowerCase;
            wpriority = 10;
            npriority = 10;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons =
                    {
                    INDICATOR_ICON
                        {
                        widebmpid = EMbmAvkonQgn_stat_case_lower_hindi_phonetic;
                        widebmpmask = EMbmAvkonQgn_stat_case_lower_hindi_phonetic_mask;
                        narrowbmpid = EMbmAvkonQgn_stat_case_lower_hindi_phonetic;
                        narrowbmpmask = EMbmAvkonQgn_stat_case_lower_hindi_phonetic_mask;
                        }
                    };
                };
            },
#endif
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorArabicIndicNumberCase;
            wpriority = 10;
            npriority = 10;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons =
                    {
                    INDICATOR_ICON
                        {
                        widebmpid = EMbmAvkonQgn_stat_case_arabic_numeric;
                        widebmpmask = EMbmAvkonQgn_stat_case_arabic_numeric_mask;
                        narrowbmpid = EMbmAvkonQgn_stat_case_arabic_numeric;
                        narrowbmpmask = EMbmAvkonQgn_stat_case_arabic_numeric_mask;
                        }
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorDevanagariIndicNumberCase;
            wpriority = 10;
            npriority = 10;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons =
                    {
                    INDICATOR_ICON
                        {
                        widebmpid = EMbmAvkonQgn_stat_case_devanagari_numeric;
                        widebmpmask = EMbmAvkonQgn_stat_case_devanagari_numeric_mask;
                        narrowbmpid = EMbmAvkonQgn_stat_case_devanagari_numeric;
                        narrowbmpmask = EMbmAvkonQgn_stat_case_devanagari_numeric_mask;
                        }
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorQwertyShift;
            wpriority = 10;
            npriority = 10;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons =
                    {
                    INDICATOR_ICON
                        {
                        widebmpid = EMbmAvkonQgn_stat_case_shift;
                        widebmpmask = EMbmAvkonQgn_stat_case_shift;
                        narrowbmpid = EMbmAvkonQgn_stat_case_shift;
                        narrowbmpmask = EMbmAvkonQgn_stat_case_shift;
                        }
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorT9;
            wpriority = 20;
            npriority = 20;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
#ifdef RD_INTELLIGENT_TEXT_INPUT
                   widebmpid = EMbmAvkonQgn_stat_input_pred;
                   widebmpmask = EMbmAvkonQgn_stat_input_pred_mask;
                   narrowbmpid = EMbmAvkonQgn_stat_input_pred;
                   narrowbmpmask = EMbmAvkonQgn_stat_input_pred_mask;
#else
                    widebmpid = EMbmAvkonQgn_stat_t9;
                    widebmpmask = EMbmAvkonQgn_stat_t9_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_t9;
                    narrowbmpmask = EMbmAvkonQgn_stat_t9_mask;
#endif //RD_INTELLIGENT_TEXT_INPUT
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorQuery;
            wpriority = 20;
            npriority = 20;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_query;
                    widebmpmask = EMbmAvkonQgn_stat_query_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_query;
                    narrowbmpmask = EMbmAvkonQgn_stat_query_mask;
                    };
                };
            },

        // APAC editor indicators
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorPinyin;
            wpriority = 10;
            npriority = 10;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_chi_pinyin;
                    widebmpmask = EMbmAvkonQgn_stat_chi_pinyin_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_chi_pinyin;
                    narrowbmpmask = EMbmAvkonQgn_stat_chi_pinyin_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorZhuyin;
            wpriority = 10;
            npriority = 10;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_chi_zhuyin;
                    widebmpmask = EMbmAvkonQgn_stat_chi_zhuyin_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_chi_zhuyin;
                    narrowbmpmask = EMbmAvkonQgn_stat_chi_zhuyin_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorStroke;
            wpriority = 10;
            npriority = 10;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_chi_stroke;
                    widebmpmask = EMbmAvkonQgn_stat_chi_stroke_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_chi_stroke;
                    narrowbmpmask = EMbmAvkonQgn_stat_chi_stroke_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorStrokeTrad;
            wpriority = 10;
            npriority = 10;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_chi_stroke_trad;
                    widebmpmask = EMbmAvkonQgn_stat_chi_stroke_trad_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_chi_stroke_trad;
                    narrowbmpmask = EMbmAvkonQgn_stat_chi_stroke_trad_mask;
                    };
                };
            },

        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorZhuyinFind;
            wpriority = 10;
            npriority = 10;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_chi_zhuyin_find;
                    widebmpmask = EMbmAvkonQgn_stat_chi_zhuyin_find_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_chi_zhuyin_find;
                    narrowbmpmask = EMbmAvkonQgn_stat_chi_zhuyin_find_mask;
                    };
                };
            },

        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorStrokeFind;
            wpriority = 10;
            npriority = 10;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_chi_stroke_find;
                    widebmpmask = EMbmAvkonQgn_stat_chi_stroke_find_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_chi_stroke_find;
                    narrowbmpmask = EMbmAvkonQgn_stat_chi_stroke_find_mask;
                    };
                };
            },
        // Application editor indicators
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorAudioAttached;
            wpriority = 40;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_indi_attach_audio;
                    widebmpmask = EMbmAvkonQgn_indi_attach_audio_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorImageAttached;
            wpriority = 50;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_indi_attach_image;
                    widebmpmask = EMbmAvkonQgn_indi_attach_image_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorObjects;
            wpriority = 60;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_indi_object_gene;
                    widebmpmask = EMbmAvkonQgn_indi_object_gene_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorAttachment;
            wpriority = 70;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_indi_attach_gene;
                    widebmpmask = EMbmAvkonQgn_indi_attach_gene_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorMessageLength;
            wpriority = 29;
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorMessageInfo;
            wpriority = 30;
            },
        // Indicators available in small statuspane begin
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorFileSize;
            wpriority = 30;
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorGprs;
            wpriority = 7;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    // Dummy bitmap, this is not really used
                    widebmpid = EMbmAvkonQgn_indi_signal_gprs_context;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorSecuredConnection;
            wpriority = 20;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_cyphering_on;
                    widebmpmask = EMbmAvkonQgn_stat_cyphering_on_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorWmlWindows;
            wpriority = 22;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_indi_wml_windows;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorWmlWindowsText;
            wpriority = 23;
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorMcePriorityHigh;
            wpriority = 50; // TBD
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_indi_mce_priority_high;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorMcePriorityLow;
            wpriority = 50; // TBD
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_indi_mce_priority_low;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorWmlWaitGlobe;
            wpriority = 100;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateAnimate;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_graf_wml_wait_globe_01;
                    widebmpmask = EMbmAvkonQgn_graf_wml_wait_globe_01_mask;
                    };
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_graf_wml_wait_globe_02;
                    widebmpmask = EMbmAvkonQgn_graf_wml_wait_globe_02_mask;
                    };
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_graf_wml_wait_globe_03;
                    widebmpmask = EMbmAvkonQgn_graf_wml_wait_globe_03_mask;
                    };
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_graf_wml_wait_globe_04;
                    widebmpmask = EMbmAvkonQgn_graf_wml_wait_globe_04_mask;
                    };
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_graf_wml_wait_globe_05;
                    widebmpmask = EMbmAvkonQgn_graf_wml_wait_globe_05_mask;
                    };
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_graf_wml_wait_globe_06;
                    widebmpmask = EMbmAvkonQgn_graf_wml_wait_globe_06_mask;
                    };
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_graf_wml_wait_globe_07;
                    widebmpmask = EMbmAvkonQgn_graf_wml_wait_globe_07_mask;
                    };
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_graf_wml_wait_globe_08;
                    widebmpmask = EMbmAvkonQgn_graf_wml_wait_globe_08_mask;
                    };
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_graf_wml_wait_globe_09;
                    widebmpmask = EMbmAvkonQgn_graf_wml_wait_globe_09_mask;
                    };
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_graf_wml_wait_globe_10;
                    widebmpmask = EMbmAvkonQgn_graf_wml_wait_globe_10_mask;
                    };
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_graf_wml_wait_globe_11;
                    widebmpmask = EMbmAvkonQgn_graf_wml_wait_globe_11_mask;
                    };
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_graf_wml_wait_globe_12;
                    widebmpmask = EMbmAvkonQgn_graf_wml_wait_globe_12_mask;
                    };
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_graf_wml_wait_globe_13;
                    widebmpmask = EMbmAvkonQgn_graf_wml_wait_globe_13_mask;
                    };
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_graf_wml_wait_globe_14;
                    widebmpmask = EMbmAvkonQgn_graf_wml_wait_globe_14_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorProgressBar;
            wpriority = 25;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_graf_status_small_prog;
                    widebmpmask = EMbmAvkonQgn_graf_status_small_prog_mask;
                    };
                };
            },

        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorWaitBar;
            wpriority = 26;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateAnimate;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_graf_status_small_wait_01;
                    widebmpmask = EMbmAvkonQgn_graf_status_small_wait_01_mask;
                    };
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_graf_status_small_wait_02;
                    widebmpmask = EMbmAvkonQgn_graf_status_small_wait_02_mask;
                    };
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_graf_status_small_wait_03;
                    widebmpmask = EMbmAvkonQgn_graf_status_small_wait_03_mask;
                    };
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_graf_status_small_wait_04;
                    widebmpmask = EMbmAvkonQgn_graf_status_small_wait_04_mask;
                    };
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_graf_status_small_wait_05;
                    widebmpmask = EMbmAvkonQgn_graf_status_small_wait_05_mask;
                    };
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_graf_status_small_wait_06;
                    widebmpmask = EMbmAvkonQgn_graf_status_small_wait_06_mask;
                    };
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_graf_status_small_wait_07;
                    widebmpmask = EMbmAvkonQgn_graf_status_small_wait_07_mask;
                    };
                };
            },
        // Indicators available in navipane in small statuspane ends

        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorJapaneseHiraganaKanji;
            wpriority = 1;
            npriority = 1;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons =
                    {
                    INDICATOR_ICON
                        {
                        widebmpid = EMbmAvkonQgn_stat_japin_hiragana;
                        widebmpmask = EMbmAvkonQgn_stat_japin_hiragana;
                        narrowbmpid = EMbmAvkonQgn_stat_japin_hiragana;
                        narrowbmpmask = EMbmAvkonQgn_stat_japin_hiragana;
                        }
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorJapaneseHiragana;
            wpriority = 1;
            npriority = 1;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons =
                    {
                    INDICATOR_ICON
                        {
                        widebmpid = EMbmAvkonQgn_stat_japin_hiragana_only;
                        widebmpmask = EMbmAvkonQgn_stat_japin_hiragana_only;
                        narrowbmpid = EMbmAvkonQgn_stat_japin_hiragana_only;
                        narrowbmpmask = EMbmAvkonQgn_stat_japin_hiragana_only;
                        }
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorJapaneseFullKatakana;
            wpriority = 1;
            npriority = 1;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons =
                    {
                    INDICATOR_ICON
                        {
                        widebmpid = EMbmAvkonQgn_stat_japin_katakana_full;
                        widebmpmask = EMbmAvkonQgn_stat_japin_katakana_full;
                        narrowbmpid = EMbmAvkonQgn_stat_japin_katakana_full;
                        narrowbmpmask = EMbmAvkonQgn_stat_japin_katakana_full;
                        }
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorJapaneseHalfKatakana;
            wpriority = 1;
            npriority = 1;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons =
                    {
                    INDICATOR_ICON
                        {
                        widebmpid = EMbmAvkonQgn_stat_japin_katakana_half;
                        widebmpmask = EMbmAvkonQgn_stat_japin_katakana_half;
                        narrowbmpid = EMbmAvkonQgn_stat_japin_katakana_half;
                        narrowbmpmask = EMbmAvkonQgn_stat_japin_katakana_half;
                        }
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorJapaneseFullUpperAlphabet;
            wpriority = 1;
            npriority = 1;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons =
                    {
                    INDICATOR_ICON
                        {
                        widebmpid = EMbmAvkonQgn_stat_case_capital_full;
                        widebmpmask = EMbmAvkonQgn_stat_case_capital_full;
                        narrowbmpid = EMbmAvkonQgn_stat_case_capital_full;
                        narrowbmpmask = EMbmAvkonQgn_stat_case_capital_full;
                        }
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorJapaneseFullLowerAlphabet;
            wpriority = 1;
            npriority = 1;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons =
                    {
                    INDICATOR_ICON
                        {
                        widebmpid = EMbmAvkonQgn_stat_case_small_full;
                        widebmpmask = EMbmAvkonQgn_stat_case_small_full;
                        narrowbmpid = EMbmAvkonQgn_stat_case_small_full;
                        narrowbmpmask = EMbmAvkonQgn_stat_case_small_full;
                        }
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorJapaneseFullTextAlphabet;
            wpriority = 1;
            npriority = 1;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons =
                    {
                    INDICATOR_ICON
                        {
                        widebmpid = EMbmAvkonQgn_stat_case_text_full;
                        widebmpmask = EMbmAvkonQgn_stat_case_text_full;
                        narrowbmpid = EMbmAvkonQgn_stat_case_text_full;
                        narrowbmpmask = EMbmAvkonQgn_stat_case_text_full;
                        }
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorJapaneseFullNumeric;
            wpriority = 1;
            npriority = 1;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons =
                    {
                    INDICATOR_ICON
                        {
                        widebmpid = EMbmAvkonQgn_stat_case_numeric_full;
                        widebmpmask = EMbmAvkonQgn_stat_case_numeric_full;
                        narrowbmpid = EMbmAvkonQgn_stat_case_numeric_full;
                        narrowbmpmask = EMbmAvkonQgn_stat_case_numeric_full;
                        }
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorKoreanHangul;
            wpriority = 1;
            npriority = 1;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons =
                    {
                    INDICATOR_ICON
                        {
                        widebmpid = EMbmAvkonQgn_stat_kor_case;
                        widebmpmask = EMbmAvkonQgn_stat_kor_case;
                        narrowbmpid = EMbmAvkonQgn_stat_kor_case;
                        narrowbmpmask = EMbmAvkonQgn_stat_kor_case;
                        }
                    };
                };
            },
	INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorKoreanHangulSelect;
            wpriority = 1;
            npriority = 1;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons =
                    {
                    INDICATOR_ICON
                        {
                        widebmpid = EMbmAvkonQgn_stat_kor_case_select;
                        widebmpmask = EMbmAvkonQgn_stat_kor_case_select;
                        narrowbmpid = EMbmAvkonQgn_stat_kor_case_select;
                        narrowbmpmask = EMbmAvkonQgn_stat_kor_case_select;
                        }
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorVietnameseLowerCase;
            wpriority = 10;
            npriority = 10;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons =
                    {
                    INDICATOR_ICON
                        {
                        widebmpid = EMbmAvkonQgn_stat_viet_case_small;
                        widebmpmask = EMbmAvkonQgn_stat_viet_case_small;
                        narrowbmpid = EMbmAvkonQgn_stat_viet_case_small;
                        narrowbmpmask = EMbmAvkonQgn_stat_viet_case_small;
                        }
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorVietnameseUpperCase;
            wpriority = 10;
            npriority = 10;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons =
                    {
                    INDICATOR_ICON
                        {
                        widebmpid = EMbmAvkonQgn_stat_viet_case_capital;
                        widebmpmask = EMbmAvkonQgn_stat_viet_case_capital;
                        narrowbmpid = EMbmAvkonQgn_stat_viet_case_capital;
                        narrowbmpmask = EMbmAvkonQgn_stat_viet_case_capital;
                        }
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorVietnameseTextCase;
            wpriority = 10;
            npriority = 10;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons =
                    {
                    INDICATOR_ICON
                        {
                        widebmpid = EMbmAvkonQgn_stat_viet_case_text;
                        widebmpmask = EMbmAvkonQgn_stat_viet_case_text;
                        narrowbmpid = EMbmAvkonQgn_stat_viet_case_text;
                        narrowbmpmask = EMbmAvkonQgn_stat_viet_case_text;
                        }
                    };
                };
            },
#ifndef RD_INTELLIGENT_TEXT_INPUT
           INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorAutoComplete;
            wpriority = 20;
            npriority = 20;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_t9_auto;
                    widebmpmask = EMbmAvkonQgn_stat_t9_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_t9_auto;
                    narrowbmpmask = EMbmAvkonQgn_stat_t9_mask;
                    };
                };
},
#endif //RD_INTELLIGENT_TEXT_INPUT
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorCangJie;
            wpriority = 10;
            npriority = 10;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_chi_cangjie;
                    widebmpmask = EMbmAvkonQgn_stat_chi_cangjie_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_chi_cangjie;
                    narrowbmpmask = EMbmAvkonQgn_stat_chi_cangjie_mask;
                    };
                };
        },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorPinyinPhrase;
            wpriority = 10;
            npriority = 10;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_chi_pinyin_phrase;
                    widebmpmask = EMbmAvkonQgn_stat_chi_pinyin_phrase_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_chi_pinyin_phrase;
                    narrowbmpmask = EMbmAvkonQgn_stat_chi_pinyin_phrase_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorZhuyinPhrase;
            wpriority = 10;
            npriority = 10;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_chi_zhuyin_phrase;
                    widebmpmask = EMbmAvkonQgn_stat_chi_zhuyin_phrase_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_chi_zhuyin_phrase;
                    narrowbmpmask = EMbmAvkonQgn_stat_chi_zhuyin_phrase_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorStrokePhrase;
            wpriority = 10;
            npriority = 10;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_chi_stroke_phrase;
                    widebmpmask = EMbmAvkonQgn_stat_chi_stroke_phrase_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_chi_stroke_phrase;
                    narrowbmpmask = EMbmAvkonQgn_stat_chi_stroke_phrase_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorStrokeTradPhrase;
            wpriority = 10;
            npriority = 10;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid = EMbmAvkonQgn_stat_chi_stroke_trad_phrase;
                    widebmpmask = EMbmAvkonQgn_stat_chi_stroke_trad_phrase_mask;
                    narrowbmpid = EMbmAvkonQgn_stat_chi_stroke_trad_phrase;
                    narrowbmpmask = EMbmAvkonQgn_stat_chi_stroke_trad_phrase_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorWlanAvailable;
            wpriority = 21;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid     = EMbmAvkonQgn_stat_wlan_avail;
                    widebmpmask   = EMbmAvkonQgn_stat_wlan_avail_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorWlanActive;
            wpriority = 21;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid     = EMbmAvkonQgn_stat_wlan_active;
                    widebmpmask   = EMbmAvkonQgn_stat_wlan_active_mask;
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorWlanActiveSecure;
            wpriority = 21;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons = INDICATOR_ICON
                    {
                    widebmpid     = EMbmAvkonQgn_stat_wlan_active_secure;
                    widebmpmask   = EMbmAvkonQgn_stat_wlan_active_secure_mask;
                    };
                }; 
            },
//For Greek indicators:            
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorGreekLowerCase;
            wpriority = 10;
            npriority = 10;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons =
                    {
                    INDICATOR_ICON
                        {
                        widebmpid = EMbmAvkonQgn_stat_case_greek_small;
                        widebmpmask = EMbmAvkonQgn_stat_case_greek_small;
                        narrowbmpid = EMbmAvkonQgn_stat_case_greek_small;
                        narrowbmpmask = EMbmAvkonQgn_stat_case_greek_small;
                        }
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorGreekUpperCase;
            wpriority = 10;
            npriority = 10;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons =
                    {
                    INDICATOR_ICON
                        {
                        widebmpid = EMbmAvkonQgn_stat_case_greek_capital;
                        widebmpmask = EMbmAvkonQgn_stat_case_greek_capital;
                        narrowbmpid = EMbmAvkonQgn_stat_case_greek_capital;
                        narrowbmpmask = EMbmAvkonQgn_stat_case_greek_capital;
                        }
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorGreekTextCase;
            wpriority = 10;
            npriority = 10;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons =
                    {
                    INDICATOR_ICON
                        {
                        widebmpid = EMbmAvkonQgn_stat_case_greek_text;
                        widebmpmask = EMbmAvkonQgn_stat_case_greek_text;
                        narrowbmpid = EMbmAvkonQgn_stat_case_greek_text;
                        narrowbmpmask = EMbmAvkonQgn_stat_case_greek_text;
                        }
                    };
                };
            },
//For Cyrillic indicators:            
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorCyrillicLowerCase;
            wpriority = 10;
            npriority = 10;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons =
                    {
                    INDICATOR_ICON
                        {
                        widebmpid = EMbmAvkonQgn_stat_case_cyrillic_small;
                        widebmpmask = EMbmAvkonQgn_stat_case_cyrillic_small;
                        narrowbmpid = EMbmAvkonQgn_stat_case_cyrillic_small;
                        narrowbmpmask = EMbmAvkonQgn_stat_case_cyrillic_small;
                        }
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorCyrillicUpperCase;
            wpriority = 10;
            npriority = 10;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons =
                    {
                    INDICATOR_ICON
                        {
                        widebmpid = EMbmAvkonQgn_stat_case_cyrillic_capital;
                        widebmpmask = EMbmAvkonQgn_stat_case_cyrillic_capital;
                        narrowbmpid = EMbmAvkonQgn_stat_case_cyrillic_capital;
                        narrowbmpmask = EMbmAvkonQgn_stat_case_cyrillic_capital;
                        }
                    };
                };
            },
        INDICATOR
            {
            uid = EAknNaviPaneEditorIndicatorCyrillicTextCase;
            wpriority = 10;
            npriority = 10;
            bmpfile = AVKON_BITMAP_FILE;
            states = INDICATOR_STATE
                {
                id = EAknIndicatorStateOn;
                icons =
                    {
                    INDICATOR_ICON
                        {
                        widebmpid = EMbmAvkonQgn_stat_case_cyrillic_text;
                        widebmpmask = EMbmAvkonQgn_stat_case_cyrillic_text;
                        narrowbmpid = EMbmAvkonQgn_stat_case_cyrillic_text;
                        narrowbmpmask = EMbmAvkonQgn_stat_case_cyrillic_text;
                        }
                    };
                };
            }
        };
    }

// Deprecated resource
RESOURCE CLOCK r_avkon_status_pane_clock
    {
    }

//
// Grid - related resource
//

RESOURCE GRID r_avkon_selection_grid_empty_text_default
    {
    emptytext = qtn_selec_empty_list;
    }

//
//  Empty Texts
//

RESOURCE LBUF r_avkon_listbox_default_empty_text
    {
    txt=qtn_selec_empty_list;
    }

RESOURCE LBUF r_avkon_find_no_matches
    {
    txt=qtn_find_no_matches;
    }

// Setting item list text when no value set - default used in avkon
RESOURCE LBUF r_avkon_selec_sett_val_field_none
    {
    txt=qtn_selec_sett_val_field_none;
    }

// Setting item list text when no value set - here for users to use
RESOURCE LBUF r_avkon_selec_sett_val_field_unknow
    {
    txt=qtn_selec_sett_val_field_unknow;
    }

RESOURCE LBUF r_avkon_selec_set_pane_empty
    {
    txt=qtn_selec_set_pane_empty;
    }

RESOURCE TBUF r_avkon_empty_popup_list_text
    {
    buf = qtn_empty_popup_list_text;
    }
//
// popup field resources
//

RESOURCE POPUP_FIELD_SELECTION_BMP r_avkon_radiobutt_bmp
    {
    bmpfile=AVKON_BITMAP_FILE;
    bmpidon=EMbmAvkonQgn_indi_radiobutt_on;
    bmpmaskon=EMbmAvkonQgn_indi_radiobutt_on_mask;
    bmpidoff=EMbmAvkonQgn_indi_radiobutt_off;
    bmpmaskoff=EMbmAvkonQgn_indi_radiobutt_off_mask;
    }

RESOURCE TBUF r_avkon_tbuf_popup_field_default_text_query_prompt { buf=text_popupfield_prompt_for_text; }
RESOURCE TBUF r_avkon_tbuf_popup_field_default_number_query_prompt { buf=text_popupfield_prompt_for_number; }
RESOURCE TBUF r_avkon_tbuf_popup_field_default_phone_query_prompt { buf=text_popupfield_prompt_for_phonenumber; }
RESOURCE TBUF r_avkon_tbuf_popup_field_default_time_query_prompt { buf=text_popupfield_prompt_for_time; }
RESOURCE TBUF r_avkon_tbuf_popup_field_default_date_query_prompt { buf=text_popupfield_prompt_for_date; }
RESOURCE TBUF r_avkon_tbuf_popup_field_default_duration_query_prompt { buf=text_popupfield_prompt_for_duration; }

RESOURCE TBUF r_avkon_tbuf_popup_field_default_text_format { buf=""; }
RESOURCE TBUF r_avkon_tbuf_popup_field_default_number_format { buf="%d"; }
RESOURCE TBUF r_avkon_tbuf_popup_field_default_phone_format { buf="%d"; }
RESOURCE TBUF r_avkon_tbuf_popup_field_default_time_format { buf="%-B%:0%J%:1%T%:2%S%:3%+B"; }
RESOURCE TBUF r_avkon_tbuf_popup_field_default_date_format { buf="%D%M%Y%/0%1%/1%2%/2%3%/3"; }
RESOURCE TBUF r_avkon_tbuf_popup_field_default_duration_format { buf="%dh %dm %ds"; }

// Query for CAknQueryValueText
RESOURCE DIALOG r_avkon_dialog_query_value_text
    {
    flags=EGeneralQueryFlags;
    buttons=r_avkon_softkeys_ok_cancel;
    items=
        {
        DLG_LINE
            {
            type=EAknCtQuery;
            id=EGeneralQuery;
            control= AVKON_DATA_QUERY
                {
                layout = EDataLayout;
                label = text_popupfield_prompt_for_text;
                control=EDWIN
                    {
                    flags= EEikEdwinNoHorizScrolling | EEikEdwinResizable;
                    maxlength=256;
                    width=6;
                    lines=5;
                    };
                };
            }
        };
    }

// Query for CAknQueryValueNumber
// class CAknQueryValueNumberDialog
RESOURCE DIALOG r_avkon_dialog_query_value_number
    {
    flags=EGeneralQueryFlags;
    buttons=r_avkon_softkeys_ok_cancel;
    items=
        {
        DLG_LINE
            {
            type=EAknCtQuery;
            id=EGeneralQuery;
            control= AVKON_DATA_QUERY
                {
                layout = ENumberLayout;
                label = text_popupfield_prompt_for_number;
                control = AVKON_INTEGER_EDWIN
                    {
                    maxlength = 7;
                    min=0;
                    max= 1000000;
                    unset_value = -1;
                    };
                };
            }
        };
    }

// Query for CAknQueryValuePhone
// class CAknQueryValuePhoneDialog
RESOURCE DIALOG r_avkon_dialog_query_value_phone
    {
    flags=EGeneralQueryFlags;
    buttons=r_avkon_softkeys_ok_cancel;
    items=
        {
        DLG_LINE
            {
            type=EAknCtQuery;
            id=EGeneralQuery;
            control= AVKON_DATA_QUERY
                {
                layout = EPhoneLayout;
                label = text_popupfield_prompt_for_phonenumber;
                control = EDWIN
                    {
                    flags= EEikEdwinNoHorizScrolling | EEikEdwinResizable;
                    maxlength=256;
                    width=6;
                    lines=5;
                    };
                };
            }
        };
    }

// Query for CAknQueryValueTime
RESOURCE DIALOG r_avkon_dialog_query_value_time
    {
    flags=EGeneralQueryFlags;
    buttons=r_avkon_softkeys_ok_cancel;
    items=
        {
        DLG_LINE
            {
            type=EAknCtQuery;
            id=EGeneralQuery;
            control= AVKON_DATA_QUERY
                {
                layout = ETimeLayout;
                label = text_popupfield_prompt_for_time;
                control = TIME_EDITOR
                    {
                    minTime= TIME {second=0;minute=0;hour=0;};
                    maxTime= TIME {second=59;minute=59;hour=23;};
                    flags=0;
                    };
                };
            }
        };
    }

// Query for CAknQueryValueDate
RESOURCE DIALOG r_avkon_dialog_query_value_date
    {
    flags=EGeneralQueryFlags;
    buttons=r_avkon_softkeys_ok_cancel;
    items=
        {
        DLG_LINE
            {
            type=EAknCtQuery;
            id=EGeneralQuery;
            control= AVKON_DATA_QUERY
                {
                layout = EDateLayout;
                label = text_popupfield_prompt_for_date;
                control = DATE_EDITOR
                    {
                    minDate= DATE {year=1986;};
                    maxDate= DATE {year=2986;};
                    flags=0;
                    };
                };
            }
        };
    }

// Query for CAknQueryValueDuration
// class CAknQueryValueDurationDialog
RESOURCE DIALOG r_avkon_dialog_query_value_duration
    {
    flags=EGeneralQueryFlags;
    buttons=r_avkon_softkeys_ok_cancel;
    items=
        {
        DLG_LINE
            {
            type=EAknCtQuery;
            id=EGeneralQuery;
            control= AVKON_DATA_QUERY
                {
                layout = EDurationLayout;
                label = text_popupfield_prompt_for_duration;
                control = DURATION_EDITOR
                    {
                    minDuration= DURATION {};
                    maxDuration= DURATION {seconds=3599;};
                    flags=0; // permitted flags: EEikTimeWithout[Seconds][Hours]Field
                    };
                };
            }
        };
    }

//
// Message Query - related stuff
//
// Not used in code!
RESOURCE AVKON_LAYOUT_RECT r_avkon_wml_sign_query_heading_pane { l=0; t=3; W=168; H=23; }

RESOURCE DIALOG r_avkon_message_query_dialog
    {
    flags = EGeneralQueryFlags | EEikDialogFlagNoBorder | EEikDialogFlagNoShadow;
    buttons = r_avkon_softkeys_ok_cancel__ok;
    items=
        {
        DLG_LINE
            {
            type = EAknCtPopupHeadingPane;
            id = EAknMessageQueryHeaderId;
            control = AVKON_HEADING
                {
                headinglayout = r_avkon_wml_sign_query_heading_pane;
                };
            },
        DLG_LINE
            {
            type = EAknCtMessageQuery;
            id = EAknMessageQueryContentId;
            control = AVKON_MESSAGE_QUERY
                {
                };
            }
        };
    }

RESOURCE EDWIN r_avkon_message_query_edwin
    {
    flags= EEikEdwinNoHorizScrolling | EEikEdwinDisplayOnly | EEikEdwinReadOnly;
    maxlength=0;
    width=6;
    lines=6;
    }


RESOURCE AVKON_CONFIG_EDWIN r_avkon_message_query_editor
    {
    editingSpace = 0;     // Max number of character in a editor field
    editingWindow = 6;   // Maximum number of lines in a editor field
    characterCase = EAknEditorCharactersTextCase;
    justification = EAknEditorAlignBidi;
    allowedToMoveInsertionPoint = 0;
    cursorYesNo = 0;
    overflowYesNo = 0;
    }


//
// Listbox - related resource
//

//
// Listbox layouts
//

// R_LIST_PANE_LINES_A_COLUMN
// R_LIST_PANE_LINES_AB_COLUMN
// R_LIST_PANE_LINES_AB_COLUMN_X
// R_LIST_PANE_LINES_AB_COLUMN_XX
// R_LIST_PANE_LINES_BC_COLUMN
// R_LIST_PANE_LINES_BC_COLUMN_X
// R_LIST_PANE_LINES_BC_COLUMN_XX

// Placeholders for deprecated resource structures - TO BE REMOVED IN 3.0
RESOURCE AVKON_UNUSED r_avkon_dummy_1 {}
RESOURCE AVKON_UNUSED r_avkon_dummy_2 {}
RESOURCE AVKON_UNUSED r_avkon_dummy_3 {}
RESOURCE AVKON_UNUSED r_avkon_dummy_4 {}
RESOURCE AVKON_UNUSED r_avkon_dummy_5 {}

// TO BE REMOVED IN 3.0
RESOURCE AVKON_UNUSED r_list_pane_lines_A_column {}

// TO BE REMOVED IN 3.0
RESOURCE AVKON_UNUSED r_list_pane_lines_A_column_X {}

// TO BE REMOVED IN 3.0
RESOURCE AVKON_UNUSED r_list_pane_lines_AB_column {}

// TO BE REMOVED IN 3.0 - not used in code
RESOURCE AVKON_LAYOUT_RECT r_avkon_layout_empty_list_find_line
    {
    C=215; l=19; t=0; W=1; H=113;
    }

// TO BE REMOVED IN 3.0
RESOURCE AVKON_UNUSED r_list_pane_lines_AB_column_X {}

// TO BE REMOVED IN 3.0
RESOURCE AVKON_UNUSED r_list_pane_lines_AB_column_XX {}

// TO BE REMOVED IN 3.0
RESOURCE AVKON_UNUSED r_list_pane_lines_BC_column {}

// TO BE REMOVED IN 3.0
RESOURCE AVKON_UNUSED r_list_pane_lines_BC_column_X {}

// TO BE REMOVED IN 3.0
RESOURCE AVKON_UNUSED r_list_pane_lines_BC_column_XX {}

// TO BE REMOVED IN 3.0 - not used in code
RESOURCE AVKON_LISTBOX_LINES r_list_pane_lines_graphic_heading_window
    {
    vline1=AVKON_LAYOUT_RECT { C=219; l=54; r=3; W=1; H=2; };
    vline2=AVKON_LAYOUT_RECT { C=219; l=54; r=81; W=1; H=2; };
    hline= AVKON_LAYOUT_RECT { C=0; l=1; t=1; W=0; H=0; };
    }

// TO BE REMOVED IN 3.0 - not used in code
RESOURCE AVKON_LAYOUT_TEXT r_avkon_layout_empty_list_1
    {
    font = ELatinBold13; C=215; l=14; r=12; B=44; W=150; J=ELayoutAlignCenter;
    }
// TO BE REMOVED IN 3.0 - not used in code
RESOURCE AVKON_LAYOUT_TEXT r_avkon_layout_empty_list_2
    {
    font = ELatinBold13; C=215; l=14; r=12; B=65; W=150; J=ELayoutAlignCenter;
    }

RESOURCE IMAGE r_avkon_find_pane_image { bmpfile = AVKON_BITMAP_FILE; bmpid=EMbmAvkonQgn_prop_folder_small; bmpmask= EMbmAvkonQgn_prop_folder_small_mask; }

// TO BE REMOVED IN 3.0 - not used in code
RESOURCE AVKON_LAYOUT_TEXT r_avkon_layout_empty_list_find_1
    {
    font=ELatinBold13; C=215; l=26; r=24; B=44; W=126; J=ELayoutAlignCenter;
    }

// TO BE REMOVED IN 3.0 - not used in code
RESOURCE AVKON_LAYOUT_TEXT r_avkon_layout_empty_list_find_2
    {
    font=ELatinBold13; C=215; l=26; r=24; B=65; W=126; J=ELayoutAlignCenter;
    }


RESOURCE EDWIN r_avkon_find_pane_edwin
    {
    }

// TO BE REMOVED IN 3.0
RESOURCE AVKON_LAYOUT_CONTROL r_avkon_grid_qdial_pane { l=1; t=1; W=174; H=180; }
// TO BE REMOVED IN 3.0
RESOURCE AVKON_LAYOUT_CONTROL r_avkon_grid_app_pane { l=1; t=1; W=174; H=141; }
// TO BE REMOVED IN 3.0
RESOURCE AVKON_LAYOUT_CONTROL r_avkon_list_gen_pane_x { l=0; t=0; W=176; H=113; }
// TO BE REMOVED IN 3.0
RESOURCE AVKON_LAYOUT_CONTROL r_avkon_list_gen_pane_with_find_popup { l=0; t=0; W=176; H=144-40; }
// TO BE REMOVED IN 3.0
RESOURCE AVKON_LAYOUT_CONTROL r_avkon_list_gen_pane   { l=0; t=0; W=176; H=144; }
// TO BE REMOVED IN 3.0
RESOURCE AVKON_LAYOUT_CONTROL r_avkon_find_pane       { r=0; b=0; W=176; H=31;  }
// TO BE REMOVED IN 3.0
RESOURCE AVKON_LAYOUT_RECT    r_avkon_find_pane_vert_shadow { C=221; l=20; t=5; W=1; H=21; }
// TO BE REMOVED IN 3.0
RESOURCE AVKON_LAYOUT_RECT    r_avkon_find_pane_hori_shadow { C=221; l=21; t=5; W=153; H=1; }
// TO BE REMOVED IN 3.0
RESOURCE AVKON_LAYOUT_RECT    r_avkon_find_pane_outline_frame { C=215; l=19; t=4; W=156; H=23; }
// TO BE REMOVED IN 3.0
RESOURCE AVKON_LAYOUT_RECT    r_avkon_find_pane_magn_glass    { l=2; t=2; W=24; H=26; }
// TO BE REMOVED IN 3.0
RESOURCE AVKON_LAYOUT_EDWIN    r_avkon_find_pane_search_string { font=ELatinBold13; C=215; l=28; r=5; B=20; W=143; J=ELayoutAlignLeft; lines=1; }



// find popup window (parent = popup_find_window in "Pop up Windows" table.

// This one should actually work in scalable UI...
RESOURCE AVKON_LAYOUT_RECT r_avkon_main_pane_parent_none { l=0; t=0; b=0; r=0; }
// TO BE REMOVED IN 3.0
RESOURCE AVKON_LAYOUT_RECT r_avkon_main_pane_with_status_pane { l=0; t=44; b=20; r=0; }


// TO BE REMOVED IN 3.0
RESOURCE AVKON_LAYOUT_CONTROL r_avkon_popup_find_window { r=0; b=0; W=176; H=41; }
// Find popup window elements
// TO BE REMOVED IN 3.0
RESOURCE AVKON_LAYOUT_RECT r_avkon_popup_find_window_vert_shadow { C=221; l=25; t=8; W=1; H=21; }
// TO BE REMOVED IN 3.0
RESOURCE AVKON_LAYOUT_RECT r_avkon_popup_find_window_hori_shadow { C=221; l=26; t=8; W=140; H=1; }
// TO BE REMOVED IN 3.0
RESOURCE AVKON_LAYOUT_RECT r_avkon_popup_find_window_outline_frame { C=215; l=24; t=7; W=143; H=23; }
// TO BE REMOVED IN 3.0
RESOURCE AVKON_LAYOUT_RECT r_avkon_popup_find_window_magn_glass { l=7; t=5; W=24; H=26; }
// TO BE REMOVED IN 3.0
RESOURCE AVKON_LAYOUT_EDWIN r_avkon_popup_find_window_search_string { font=ELatinBold13; C=215; l=33; r=13; B=23; W=130; J=ELayoutAlignLeft; lines=1; }

// Find popup window graphics
// TO BE REMOVED IN 3.0
RESOURCE AVKON_LAYOUT_RECT r_avkon_popup_find_window_cover { C=0; l=0; t=0; W=176; H=41; }
// TO BE REMOVED IN 3.0
RESOURCE AVKON_LAYOUT_RECT r_avkon_popup_find_window_second_shadow { C=86; l=6; t=6; W=168; H=31; }
// TO BE REMOVED IN 3.0
RESOURCE AVKON_LAYOUT_RECT r_avkon_popup_find_window_first_shadow { C=221; l=4; t=4; W=169; H=32; }
// TO BE REMOVED IN 3.0
RESOURCE AVKON_LAYOUT_RECT r_avkon_popup_find_window_outline_frame_2 { C=215; l=2; t=2; W=170; H=33; }
// TO BE REMOVED IN 3.0
RESOURCE AVKON_LAYOUT_RECT r_avkon_popup_find_window_inside_area { C=0; l=3; t=3; W=168; H=31; }



// TO BE REMOVED IN 3.0
RESOURCE AVKON_LAYOUT_RECT r_avkon_find_pinb_pane { l=5; t=150; W=165; H=29; }
// TO BE REMOVED IN 3.0
RESOURCE AVKON_LAYOUT_RECT r_avkon_grid_pinb_pane { l=5; t=5; W=165; H=145; }


// pinb find
// TO BE REMOVED IN 3.0
RESOURCE AVKON_LAYOUT_RECT r_avkon_find_pinb_pane_vert_shadow { C=221; l=20; t=6; W=1; H=19; }
// TO BE REMOVED IN 3.0
RESOURCE AVKON_LAYOUT_RECT r_avkon_find_pinb_pane_hori_shadow { C=221; l=21; t=6; W=140; H=1; }
// TO BE REMOVED IN 3.0
RESOURCE AVKON_LAYOUT_RECT r_avkon_find_pinb_pane_outline_frame { C=215; l=1; t=0; W=143; H=21; }
// TO BE REMOVED IN 3.0
RESOURCE AVKON_LAYOUT_RECT r_avkon_find_pinb_pane_magn_glass { l=2; t=2; W=24; H=26; }
// TO BE REMOVED IN 3.0
RESOURCE AVKON_LAYOUT_TEXT r_avkon_find_pinb_pane_title_indication { font=ELatinPlain12; C=215; l=29; r=7; B=20; W=129; J=ELayoutAlignLeft; }
// TO BE REMOVED IN 3.0
RESOURCE AVKON_LAYOUT_EDWIN r_avkon_find_pinb_pane_search_string { font=ELatinBold13; C=215; l=29; r=7; B=20; W=129; J=ELayoutAlignLeft; lines=1; }


// TO BE REMOVED IN 3.0
RESOURCE AVKON_LAYOUT_TEXT r_empty_list
    {
    font=ELatinBold13; C=215; l=57; r=24; B=24; W=95; J=ELayoutAlignCenter;
    }

// TO BE REMOVED IN 3.0
RESOURCE AVKON_LAYOUT_TEXT r_empty_list_2
    {
    font=ELatinBold13; C=215; l=57; r=24; B=24+(65-44); W=95; J=ELayoutAlignCenter;
    }


// TO BE REMOVED IN 3.0
RESOURCE AVKON_LAYOUT_RECT r_empty_list_find_line
    {
    C=215; l=50; t=0; W=1; H=113;
    }
// TO BE REMOVED IN 3.0
RESOURCE AVKON_LAYOUT_RECT r_clk_find_pane_vert_shadow
    {
    C=221; l=51; t=6; W=1; H=21;
    }

// TO BE REMOVED IN 3.0
RESOURCE AVKON_LAYOUT_RECT r_clk_find_pane_hori_shadow
    {
    C=221; l=52; t=6; W=122; H=1;
    }

// TO BE REMOVED IN 3.0
RESOURCE AVKON_LAYOUT_RECT r_clk_find_pane_outline_frame
    {
    C=215; l=50; t=5; W=125; H=23;
    }

// TO BE REMOVED IN 3.0
RESOURCE AVKON_LAYOUT_RECT r_clk_find_pane_magn_glass
    {
    l=33; t=2; W=24; H=26;
    }

// TO BE REMOVED IN 3.0
RESOURCE AVKON_LAYOUT_EDWIN r_clk_find_pane_search_string
    {
    font=ELatinBold13; C=215; l=60; r=5; B=20; W=111; J=ELayoutAlignLeft; lines=1;
    }

RESOURCE DIALOG r_akn_selection_list_dialog
    {
    flags =  EAknDialogSelectionList;
    buttons = r_avkon_softkeys_options_back;
    }


//
//  Avkon Dialogs
//  -------------
RESOURCE MENU_BAR r_avkon_dialog_empty_menubar
    {
    titles={};
    }


//
//  Avkon Forms
//  -----------

RESOURCE MENU_BAR r_avkon_form_menubar
    {
    titles={ MENU_TITLE { menu_pane=r_avkon_form_menupane ; txt="??"; } };
    }


RESOURCE MENU_PANE r_avkon_form_menupane
    {
    items=
        {
        MENU_ITEM { command = EAknFormCmdEdit; txt = qtn_form_litxt_edit ; } ,
        MENU_ITEM { command = EAknFormCmdAdd; txt = qtn_form_litxt_add ; } ,
        MENU_ITEM { command = EAknFormCmdSave; txt = qtn_form_litxt_save ; } ,
        MENU_ITEM { command = EAknFormCmdLabel; txt = qtn_form_litxt_label ; } ,
        MENU_ITEM { command = EAknFormCmdDelete; txt = qtn_form_litxt_delete ; }
        };
    }

RESOURCE DIALOG r_avkon_form_default_save_changes_dialog
    {
    flags=EGeneralQueryFlags;
    buttons=r_avkon_softkeys_yes_no;
    items=
        {
        DLG_LINE
            {
            type=EAknCtQuery;
            id=EGeneralQuery;
            control= AVKON_CONFIRMATION_QUERY
                {
                layout = EConfirmationLayout;
                label = qtn_form_quest_save_changes;
                animation = r_qgn_note_query_anim;
                };
            }
        };
    }

RESOURCE AVKON_UNUSED r_avkon_unused_1
    {
    }

RESOURCE AVKON_UNUSED r_avkon_unused_2
    {
    }


RESOURCE DIALOG r_avkon_form_default_delete_item_dialog
    {
    flags=EGeneralQueryFlags;
    buttons=r_avkon_softkeys_yes_no__yes;
    items=
        {
        DLG_LINE
            {
            type=EAknCtQuery;
            id = EGeneralQuery;
            control = AVKON_CONFIRMATION_QUERY
                {
                layout = EConfirmationLayout;
                label = qtn_form_quest_remove_field;
                animation = r_qgn_note_erased_anim;
                };
            }
        };
    }


RESOURCE DIALOG r_avkon_default_edit_label_query
    {
    flags=EEikDialogFlagWait | EEikDialogFlagNoDrag | EEikDialogFlagNoTitleBar |
          EEikDialogFlagCbaButtons ;
    buttons=r_avkon_softkeys_ok_cancel__ok;
    items=
        {
        DLG_LINE
            {
            type=EAknCtQuery;
            prompt="";
            id=EGeneralQuery;
            control= AVKON_DATA_QUERY
                {
                layout = EDataLayout;
                label = "";
                control = EDWIN
                    {
                    flags= EEikEdwinNoLineOrParaBreaks;
                    width=10;
                    lines=1;
                    };
                };
            }
        };
    }

// None of the following hard-coded form layouts are used in UI framework codes.
// All of them should be removed in 3.0.

// This resource used by Form when there are no Form items
RESOURCE TBUF r_avkon_no_data{ buf=qtn_selec_empty_list; }

RESOURCE AVKON_LAYOUT_CONTROL r_avkon_form_field_data_pane{ l=1 ; t=7 ; W=174 ; H=23 ; }
RESOURCE AVKON_LAYOUT_RECT r_avkon_form_frame{ C=215 ; l=0 ; t=0 ; W=174 ; H=23 ; }
RESOURCE AVKON_LAYOUT_RECT r_avkon_form_vert_shadow{ C=221 ; l=1 ; t=1 ; W=1 ; H=21 ; }
RESOURCE AVKON_LAYOUT_RECT r_avkon_form_horiz_shadow{ C=221 ; l=2 ; t=1 ; W=121 ; H=1 ; }
RESOURCE AVKON_LAYOUT_CONTROL r_avkon_form_icon { l=3 ; t=5 ; W=13 ; H=13 ; }
RESOURCE AVKON_LAYOUT_EDWIN r_avkon_form_edwin { font=ELatinBold13 ; C=215 ; l=56 ; r=4 ; B=16 ; W=114 ; J=ELayoutAlignLeft; lines=1 ; nextB=37;}
RESOURCE AVKON_LAYOUT_RECT r_avkon_form_field_popup_pane_1 { l=50 ; t=3; W=122 ;H = 18; }
RESOURCE AVKON_LAYOUT_RECT r_avkon_form_field_popup_pane_2 { l=50 ; t=3; W=122 ;H = 39; }
RESOURCE AVKON_LAYOUT_RECT r_avkon_form_field_popup_pane_3 { l=50 ; t=3; W=122 ;H = 60; }
RESOURCE AVKON_LAYOUT_RECT r_avkon_form_field_popup_pane_4 { l=50 ; t=3; W=122 ;H = 81; }
RESOURCE AVKON_LAYOUT_RECT r_avkon_form_field_popup_pane_5 { l=50 ; t=3; W=122 ;H = 102; }
RESOURCE AVKON_LAYOUT_RECT r_avkon_form_field_popup_pane_6 { l=50 ; t=3; W=122 ;H = 123; }
RESOURCE AVKON_LAYOUT_RECT r_avkon_list_form_graphic_pane_item_graphic { l=6; t=1; W=10 ; H=17; }
RESOURCE AVKON_LAYOUT_LABEL r_avkon_list_form_graphic_pane_item_text_with_label { font=ELatinBold13 ; C=215; l=21; r=3; B=13; W=98; J=ELayoutAlignLeft; }
RESOURCE AVKON_LAYOUT_LABEL r_avkon_list_form_graphic_pane_item_text_no_label { font=ELatinBold13 ; C=215; l=6; r=3; B=13; W=113; J=ELayoutAlignLeft; }
RESOURCE AVKON_LAYOUT_CONTROL r_avkon_form_empty_control {  l=56 ; t=4 ; W=114 ; H=0 ;}
RESOURCE AVKON_LAYOUT_CONTROL r_avkon_form_control {  l=56 ; t=4 ; W=114 ; H=21 ;}
RESOURCE AVKON_LAYOUT_CONTROL r_avkon_form_label_as_editor {  l=56 ; t=5 ; W=114 ; H=21 ;}

RESOURCE AVKON_LAYOUT_CONTROL r_avkon_form_slider_control_2 { l=1; t=7; W=174; H=44; }
RESOURCE AVKON_LAYOUT_CONTROL r_avkon_form_slider_control_3 { l=1; t=7; W=174; H=65; }
RESOURCE AVKON_LAYOUT_LABEL r_avkon_form_label_no_icon { font=ELatinPlain12  ; C=215 ; l=3 ; r=127; B=15 ; W=44 ; J=ELayoutAlignRight; }
RESOURCE AVKON_LAYOUT_LABEL r_avkon_form_label_with_icon { font= ELatinPlain12 ; C=215 ; l=17 ; r=127; B=15 ; W=30 ; J=ELayoutAlignLeft; }
RESOURCE AVKON_LAYOUT_LABEL r_avkon_form_label_edit_indicator { font= ELatinPlain12 ; C=215 ; l=48 ; r=127; B=15 ; W=3 ; J=ELayoutAlignLeft; }


RESOURCE VOLUME r_avkon_navi_pane_volume_indicator
    {
    flags=ENaviPaneVolumeControl;
    value=1;
    bmpfile=AVKON_BITMAP_FILE;
    bmpid=EMbmAvkonQgn_indi_speaker;
    bmpmask=EMbmAvkonQgn_indi_speaker_mask;
    }

RESOURCE VOLUME r_avkon_navi_pane_recorder_volume_indicator
    {
    flags=ENaviPaneVolumeControl;
    value=1;
    bmpfile=AVKON_BITMAP_FILE;
    bmpid=EMbmAvkonQgn_indi_mic;
    bmpmask=EMbmAvkonQgn_indi_mic_mask;
    }

RESOURCE VOLUME r_avkon_navi_pane_earpiece_volume_indicator
    {
    flags=ENaviPaneVolumeControl;
    value=1;
    bmpfile=AVKON_BITMAP_FILE;
    bmpid=EMbmAvkonQgn_indi_earpiece;
    bmpmask=EMbmAvkonQgn_indi_earpiece_mask;
    }


RESOURCE IMAGE r_avkon_slider_contrast_graphics
    {
    bmpfile=AVKON_BITMAP_FILE;
    bmpid = EMbmAvkonQgn_graf_contrast;
    }


RESOURCE GRID_STYLE r_avkon_grid_style_default

    {
    layoutflags = EAknGridVerticalOrientation | EAknGridLeftToRight | EAknGridRightToLeft| EAknGridTopToBottom;
    primaryscroll = EAknGridFollowsItemsAndLoops;
    secondaryscroll = EAknGridFollowsItemsAndLoops;
    itemsinprimaryorient = 1;
    itemsinsecondaryorient = 1;
    height = 50;
    width = 50;
    gapwidth = 0;
    gapheight = 0;
    }


RESOURCE GRID_STYLE r_avkon_grid_style_app_grid
    {
    layoutflags = EAknGridHorizontalOrientation | EAknGridLeftToRight | EAknGridRightToLeft| EAknGridTopToBottom;
    primaryscroll = EAknGridFollowsItemsAndLoops;
    secondaryscroll = EAknGridFollowsItemsAndLoops;
    itemsinprimaryorient = 3;
    itemsinsecondaryorient = 3;
    height = 47;
    width = 58;
    gapwidth = 0;
    gapheight = 0;
    }




RESOURCE DIALOG r_avkon_t9_note_no_available
    {
    flags=EEikDialogFlagNoDrag | EEikDialogFlagNoTitleBar | EEikDialogFlagCbaButtons;
    buttons=r_avkon_softkeys_empty;
    items=
        {
        DLG_LINE
            {
            type=EAknCtNote;
            id=EGeneralNote;
            control= AVKON_NOTE
                {
                layout = EGeneralLayout;
                singular_label = text_t9_no_ldb_available;
                };
            }
        };
    }


RESOURCE DIALOG r_avkon_t9_activated_note
    {
    flags=EEikDialogFlagNoDrag | EEikDialogFlagNoTitleBar | EEikDialogFlagCbaButtons;
    buttons=r_avkon_softkeys_empty;
    items=
        {
        DLG_LINE
            {
            type=EAknCtNote;
            id=EGeneralNote;
            control= AVKON_NOTE
                {
                layout = EGeneralLayout;
                singular_label = text_t9_enabled_conf;
                animation = r_qgn_note_ok_anim;
                };
            }
        };
    }


RESOURCE DIALOG r_avkon_t9_deactivated_note
    {
    flags=EEikDialogFlagNoDrag | EEikDialogFlagNoTitleBar | EEikDialogFlagCbaButtons;
    buttons=r_avkon_softkeys_empty;
    items=
        {
        DLG_LINE
            {
            type=EAknCtNote;
            id=EGeneralNote;
            control= AVKON_NOTE
                {
                layout = EGeneralLayout;
                singular_label = text_t9_disabled_conf;
                animation = r_qgn_note_ok_anim;
                };
            }
        };
    }

RESOURCE DIALOG r_avkon_insert_word_query
    {
    flags=EGeneralQueryFlags;
    buttons=r_avkon_softkeys_ok_cancel;
    items=
        {
        DLG_LINE
            {
            type=EAknCtQuery;
            id=EGeneralQuery;
            control= AVKON_DATA_QUERY
                {
                layout = EDataLayout;
                label = text_t9_spell_query;
                control=EDWIN
                    {
                    flags= EEikEdwinNoHorizScrolling | EEikEdwinResizable;
                    maxlength=168;
                    width=16;
                    lines=1;
                    default_input_mode=EAknEditorTextInputMode;
                    max_view_height_in_lines=5; // (5 or less lines are permitted)
                    base_line_delta=21;
                    };
                };
            }
        };
    }

RESOURCE DIALOG r_avkon_edit_word_query
    {
    flags=EGeneralQueryFlags;
    buttons=r_avkon_softkeys_ok_cancel;
    items=
        {
        DLG_LINE
            {
            type=EAknCtQuery;
            id=EGeneralQuery;
            control= AVKON_DATA_QUERY
                {
                    layout = EDataLayout;
                    label = text_t9_edit_query;
                    control=EDWIN
                        {
                        maxlength=168;
                        width=3;
                        lines=1;
                        default_input_mode=EAknEditorTextInputMode;
                        };
                };
            }
        };
    }

RESOURCE DIALOG r_avkon_insert_number_query
    {
    flags=EGeneralQueryFlags;
    buttons=r_avkon_softkeys_ok_cancel;
    items=
        {
        DLG_LINE
            {
            type=EAknCtQuery;
            id=EGeneralQuery;
            control= AVKON_DATA_QUERY
                {
                layout = EPhoneLayout;
                label = text_insert_number_query;
                control=EDWIN
                    {
                    maxlength=32;
                    width=3;
                    lines=1;
                    numeric_keymap=EAknEditorStandardNumberModeKeymap;
                    allowed_input_modes=EAknEditorNumericInputMode;
                    default_input_mode=EAknEditorNumericInputMode;
                    };
                };
            }
        };
    }



RESOURCE LBUF r_avkon_t9_matches_query_spell_item
    {
    txt=qtn_t9_list_query_spell;
    }
RESOURCE DIALOG r_avkon_t9_matches_query
    {
    flags=EGeneralQueryFlags;
    buttons=r_avkon_softkeys_ok_cancel__ok;
    items=
        {
        DLG_LINE
            {
            type = EAknCtListQueryControl;
            id=EListQueryControl;
            control = AVKON_LIST_QUERY_CONTROL
                {
                listtype = EAknCtSinglePopupMenuListBox;
                listbox = LISTBOX
                    {
                    flags = EAknListBoxMenuList;
                    height = 3;
                    width = 3;
                    };
                heading = qtn_t9_list_head_select_word;
                };
            }
        };
    }



RESOURCE DIALOG r_avkon_t9_languages_query
    {
    flags=EGeneralQueryFlags;
    buttons=r_avkon_softkeys_ok_cancel;
    items=
        {
        DLG_LINE
            {
            type = EAknCtListQueryControl;
            id=EListQueryControl;
            control = AVKON_LIST_QUERY_CONTROL
                {
                listtype = EAknCtSingleGraphicPopupMenuListBox;
                listbox = LISTBOX
                    {
                    flags = EAknListBoxMenuList;
                    height = 3;
                    width = 3;
                    };
                heading = qtn_options_input_language;
                };
            }
        };
    }

// This hardcoded layout resource is actually not used in code!
RESOURCE AVKON_LAYOUT_IMAGE r_avkon_layout_general_note_image
    {
    C=ELayoutEmpty; l=140; t=4; r=ELayoutEmpty; b=ELayoutEmpty; W=30; H=40;
    }

// ELAF popup_grid_graphic_window
// This hardcoded layout resource is actually not used in code!
RESOURCE AVKON_LAYOUT_RECT r_avkon_list_heading_pane { l=3; t=10; W=168; H=23; }


//
// Special Character Table resource
//


RESOURCE NUMBER_INT16 r_avkon_sct_space_symbol
    {
    value = KPuaCodeSpaceSymbol;  //qtn_sct_space_symbol
    }


RESOURCE NUMBER_INT16 r_avkon_sct_line_feed_symbol
    {
    value = KPuaCodeLineFeedSymbol;  //qtn_sct_line_feed_symbol;
    }


RESOURCE DIALOG r_avkon_special_character_table_dialog
    {
    flags = EGeneralQueryFlags | EEikDialogFlagNoBorder | EEikDialogFlagNoShadow;
    buttons = r_avkon_softkeys_select_cancel__select;
    items=
        {
        DLG_LINE
            {
            type = EAknCtPopupHeadingPane;
            id = EAknSCTQueryHeadingId;
            control = AVKON_HEADING
                {
                label = qtn_pop_up_select_character;
                headinglayout = r_avkon_sct_list_heading_pane;
                };
            },
        DLG_LINE
            {
            type = EAknCtSpecialCharacterMap;
            id = EAknSCTQueryContentId;
            control = SPECIAL_CHAR_TABLE
                {
                contents =
                    {
                    SCT_CHAR_SET
                        {
                        id = EAknSCTLowerCase;
                        chars = qtn_sct_special_characters_lower;
                        },
                    SCT_CHAR_SET
                        {
                        id = EAknSCTUpperCase;
                        chars = qtn_sct_special_characters_upper;
                        },
                    SCT_CHAR_SET
                        {
                        id = EAknSCTHalfCase;
                        chars = qtn_sct_special_characters_halfwidth;
                        },
                    SCT_CHAR_SET
                        {
                        id = EAknSCTFullCase;
                        chars = qtn_sct_special_characters_fullwidth1;
                        },
                    SCT_CHAR_SET
                        {
                        id = EAknSCTFullCase;
                        chars = qtn_sct_special_characters_fullwidth2;
                        },
                    SCT_CHAR_SET
                        {
                        id = EAknSCTQwerty;
                        chars = qtn_sct_special_characters_qwerty;
                        }
                    };
                };
            }
        };
    }


RESOURCE DIALOG r_avkon_url_special_character_table_dialog
    {
    flags = EGeneralQueryFlags | EEikDialogFlagNoBorder | EEikDialogFlagNoShadow;
    buttons = r_avkon_softkeys_select_cancel__select;
    items=
        {
        DLG_LINE
            {
            type = EAknCtPopupHeadingPane;
            id = EAknSCTQueryHeadingId;
            control = AVKON_HEADING
                {
                label = qtn_pop_up_select_character;
                headinglayout = r_avkon_sct_list_heading_pane;
                };
            },
        DLG_LINE
            {
            type = EAknCtSpecialCharacterMap;
            id = EAknSCTQueryContentId;
            control = SPECIAL_CHAR_TABLE
                {
                contents =
                    {
                    SCT_CHAR_SET
                        {
                        id = EAknSCTLowerCase;
                        chars = qtn_sct_url_special_characters_lower;
                        },
                    SCT_CHAR_SET
                        {
                        id = EAknSCTUpperCase;
                        chars = qtn_sct_url_special_characters_upper;
                        }
                    };
                };
            }
        };
    }



RESOURCE DIALOG r_avkon_email_addr_special_character_table_dialog
    {
    flags = EGeneralQueryFlags | EEikDialogFlagNoBorder | EEikDialogFlagNoShadow;
    buttons = r_avkon_softkeys_select_cancel__select;
    items=
        {
        DLG_LINE
            {
            type = EAknCtPopupHeadingPane;
            id = EAknSCTQueryHeadingId;
            control = AVKON_HEADING
                {
                label = qtn_pop_up_select_character;
                headinglayout = r_avkon_sct_list_heading_pane;
                };
            },
        DLG_LINE
            {
            type = EAknCtSpecialCharacterMap;
            id = EAknSCTQueryContentId;
            control = SPECIAL_CHAR_TABLE
                {
                contents =
                    {
                    SCT_CHAR_SET
                        {
                        id = EAknSCTLowerCase;
                        chars = qtn_sct_email_speci_chars_lower;
                        },
                    SCT_CHAR_SET
                        {
                        id = EAknSCTUpperCase;
                        chars = qtn_sct_email_speci_chars_upper;
                        }
                    };
                };
            }
        };
    }


RESOURCE DIALOG r_avkon_currency_name_special_character_table_dialog
    {
    flags = EGeneralQueryFlags | EEikDialogFlagNoBorder | EEikDialogFlagNoShadow;
    buttons = r_avkon_softkeys_select_cancel__select;
    items=
        {
        DLG_LINE
            {
            type = EAknCtPopupHeadingPane;
            id = EAknSCTQueryHeadingId;
            control = AVKON_HEADING
                {
                label = qtn_pop_up_select_character;
                headinglayout = r_avkon_sct_list_heading_pane;
                };
            },
        DLG_LINE
            {
            type = EAknCtSpecialCharacterMap;
            id = EAknSCTQueryContentId;
            control = SPECIAL_CHAR_TABLE
                {
                contents =
                    {
                    SCT_CHAR_SET
                        {
                        id = EAknSCTLowerCase;
                        chars = qtn_sct_currency_name_speci_chars_lower;
                        },
                    SCT_CHAR_SET
                        {
                        id = EAknSCTUpperCase;
                        chars = qtn_sct_currency_name_speci_chars_upper;
                        }
                    };
                };
            }
        };
    }


// ELAF popup_grid_graphic_window
// This hardcoded layout resource is actually not used in code!
RESOURCE AVKON_LAYOUT_RECT r_avkon_sct_list_heading_pane { l=3; t=6; W=168; H=23; }
// This hardcoded layout resource is actually not used in code!
RESOURCE AVKON_LAYOUT_RECT r_avkon_sct_list_heading_pane_8 { l=3; t=10; W=168; H=23; }


//
//CAnkPopupHeadingPane
//
// This hardcoded layout resource is actually not used in code!
RESOURCE AVKON_LAYOUT_RECT r_avkon_list_heading_pane_popups
    {
    l=3; t=5; W=168; H=23;
    }

// do more lines like this when different heading panes are needed
#define R_AVKON_LIST_HEADING_PANE_SINGLE_GRAPHIC R_AVKON_LIST_HEADING_PANE

// This hardcoded layout resource is actually not used in code!
RESOURCE AVKON_LAYOUT_LABEL r_avkon_layout_popup_message_query_heading_pane_label
    {
    font = ELatinBold13; C=215; l=8; r=22; B=14; W=138; J=ELayoutAlignLeft;
    }

// This hardcoded layout resource is actually not used in code!
RESOURCE AVKON_LAYOUT_IMAGE r_avkon_layout_popup_heading_pane_image
    {
    l=149; t=2; W=16; H=16;
    }

// This hardcoded layout resource is actually not used in code!
RESOURCE AVKON_LAYOUT_CONTROL r_avkon_heading_pane_control_for_menu
    {
    l=3; t=28; W=168; H=60;
    }


//
// Common date and time format strings.
//

// Applications are supposed to use these logical resource names
// and then format the time/date with common component (or TTime's
// FormatL) -method.

// 1:20, 1:20 am, 13:05, pm 1:05  // separators are locale dependent
RESOURCE TBUF r_qtn_time_usual { buf = "%-B%:0%*J%:1%T%:3%+B"; }

// 01:20, 1:20 am, 13:05, pm 1:05 // separators are locale dependent
RESOURCE TBUF r_qtn_time_usual_with_zero { buf = "%-B%:0%J%:1%T%:3%+B"; }

// 13:20:45,  1:20:45 pm, 1:02:05, 1:02:05 am  // separators are locale dependent
RESOURCE TBUF r_qtn_time_long { buf = "%-B%:0%*J%:1%T%:2%S%:3%+B"; }

// 13:20:45,  1:20:45 pm, 01:02:05, 1:02:05 am  // separators are locale dependent
RESOURCE TBUF r_qtn_time_long_with_zero { buf = "%-B%:0%J%:1%T%:2%S%:3%+B"; }


// 1.9.00, 00.9,1  // order and separators are locale dependent.
RESOURCE TBUF r_qtn_date_short { buf = "%*D%*M%*Y%/0%1%/1%2%/2%3%/3"; }

// 01.09.00, 00.09.01  // order and separators are locale dependent.
RESOURCE TBUF r_qtn_date_short_with_zero { buf = "%D%M%*Y%/0%1%/1%2%/2%3%/3"; }

// 1.9.2000, 2000.9,1  // order and separators are locale dependent.
RESOURCE TBUF r_qtn_date_usual { buf = "%*D%*M%Y%/0%1%/1%2%/2%3%/3"; }

// 01.09.2000, 2000.09.01  // order and separators are locale dependent.
RESOURCE TBUF r_qtn_date_usual_with_zero { buf = "%D%M%Y%/0%1%/1%2%/2%3%/3"; }

// 25.12  12/25  4.5  // order and separators are locale dependent.
RESOURCE TBUF r_qtn_date_without_year { buf = "%*D%*M%/0%4%/1%5"; }

// 25.12  12/25  04.05  // order and separators are locale dependent.
RESOURCE TBUF r_qtn_date_without_year_with_zero { buf = "%D%M%/0%4%/1%5"; }

// 13:15, 3:05 (hours and minutes, without seconds) // separators are locale dependent.
RESOURCE TBUF r_qtn_time_durat_short { buf = "%:0%*H%:1%T%:3"; }

// 13:15, 03:05 (hours and minutes, without seconds) // separators are locale dependent.
RESOURCE TBUF r_qtn_time_durat_short_with_zero { buf = "%:0%H%:1%T%:3"; }

// 13:55:23, 3:15:12  (hours, minutes and seconds) // separators are locale dependent
RESOURCE TBUF r_qtn_time_durat_long { buf = "%:0%*H%:1%T%:2%S%:3"; }

// 13:55:23, 03:15:12 (hours, minutes and seconds) // separators are locale dependent
RESOURCE TBUF r_qtn_time_durat_long_with_zero { buf = "%:0%H%:1%T%:2%S%:3"; }

// 13:15, 3:05 (minutes without leading zero and seconds) // separators are locale dependent.
RESOURCE TBUF r_qtn_time_durat_min_sec { buf = "%:0%*T%:2%S%:3"; }

// 13:15, 03:05 (minutes with leading zero and seconds) // separators are locale dependent.
RESOURCE TBUF r_qtn_time_durat_min_sec_with_zero { buf = "%:0%T%:2%S%:3"; }


// Common month and weekday names

RESOURCE TBUF r_qtn_month_three_chars_jan { buf = qtn_month_three_chars_jan; }
RESOURCE TBUF r_qtn_month_three_chars_feb { buf = qtn_month_three_chars_feb; }
RESOURCE TBUF r_qtn_month_three_chars_mar { buf = qtn_month_three_chars_mar; }
RESOURCE TBUF r_qtn_month_three_chars_apr { buf = qtn_month_three_chars_apr; }
RESOURCE TBUF r_qtn_month_three_chars_may { buf = qtn_month_three_chars_may; }
RESOURCE TBUF r_qtn_month_three_chars_jun { buf = qtn_month_three_chars_jun; }
RESOURCE TBUF r_qtn_month_three_chars_jul { buf = qtn_month_three_chars_jul; }
RESOURCE TBUF r_qtn_month_three_chars_aug { buf = qtn_month_three_chars_aug; }
RESOURCE TBUF r_qtn_month_three_chars_sep { buf = qtn_month_three_chars_sep; }
RESOURCE TBUF r_qtn_month_three_chars_oct { buf = qtn_month_three_chars_oct; }
RESOURCE TBUF r_qtn_month_three_chars_nov { buf = qtn_month_three_chars_nov; }
RESOURCE TBUF r_qtn_month_three_chars_dec { buf = qtn_month_three_chars_dec; }


RESOURCE TBUF r_qtn_month_long_january { buf = qtn_month_long_january; }
RESOURCE TBUF r_qtn_month_long_february { buf = qtn_month_long_february; }
RESOURCE TBUF r_qtn_month_long_march { buf = qtn_month_long_march; }
RESOURCE TBUF r_qtn_month_long_april { buf = qtn_month_long_april; }
RESOURCE TBUF r_qtn_month_long_may { buf = qtn_month_long_may; }
RESOURCE TBUF r_qtn_month_long_june { buf = qtn_month_long_june; }
RESOURCE TBUF r_qtn_month_long_july { buf = qtn_month_long_july; }
RESOURCE TBUF r_qtn_month_long_august { buf = qtn_month_long_august; }
RESOURCE TBUF r_qtn_month_long_september { buf = qtn_month_long_september; }
RESOURCE TBUF r_qtn_month_long_october { buf = qtn_month_long_october; }
RESOURCE TBUF r_qtn_month_long_november { buf = qtn_month_long_november; }
RESOURCE TBUF r_qtn_month_long_december { buf = qtn_month_long_december; }


RESOURCE TBUF r_qtn_week_two_chars_mo { buf = qtn_week_two_chars_mo; }
RESOURCE TBUF r_qtn_week_two_chars_tu { buf = qtn_week_two_chars_tu; }
RESOURCE TBUF r_qtn_week_two_chars_we { buf = qtn_week_two_chars_we; }
RESOURCE TBUF r_qtn_week_two_chars_th { buf = qtn_week_two_chars_th; }
RESOURCE TBUF r_qtn_week_two_chars_fr { buf = qtn_week_two_chars_fr; }
RESOURCE TBUF r_qtn_week_two_chars_sa { buf = qtn_week_two_chars_sa; }
RESOURCE TBUF r_qtn_week_two_chars_su { buf = qtn_week_two_chars_su; }


RESOURCE TBUF r_qtn_week_long_monday { buf = qtn_week_long_monday; }
RESOURCE TBUF r_qtn_week_long_tuesday { buf = qtn_week_long_tuesday; }
RESOURCE TBUF r_qtn_week_long_wednesday { buf = qtn_week_long_wednesday; }
RESOURCE TBUF r_qtn_week_long_thursday { buf = qtn_week_long_thursday; }
RESOURCE TBUF r_qtn_week_long_friday { buf = qtn_week_long_friday; }
RESOURCE TBUF r_qtn_week_long_saturday { buf = qtn_week_long_saturday; }
RESOURCE TBUF r_qtn_week_long_sunday { buf = qtn_week_long_sunday; }

// Some softkey texts

RESOURCE TBUF r_text_softkey_copy { buf = text_softkey_copy; }
RESOURCE TBUF r_text_softkey_paste { buf = text_softkey_paste; }
RESOURCE TBUF r_text_softkey_empty { buf = text_softkey_empty; }

// Size strings

RESOURCE TBUF r_qtn_size_b { buf = qtn_size_b; }
RESOURCE TBUF r_qtn_size_kb { buf = qtn_size_kb; }
RESOURCE TBUF r_qtn_size_mb { buf = qtn_size_mb; }
RESOURCE TBUF r_qtn_size_gb { buf = qtn_size_gb; }

#include "AvkonSystemSounds.ra"

RESOURCE AVKON_SKEY_LIST r_avkon_default_skey_list
    {
    list=
        {
        AVKON_SKEY_INFO {key='0'; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key='0'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='0'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='1'; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key='1'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='1'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='2'; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key='2'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='2'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='3'; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key='3'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='3'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='4'; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key='4'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='4'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='5'; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key='5'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='5'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='6'; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key='6'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='6'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='7'; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key='7'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='7'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='8'; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key='8'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='8'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='9'; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key='9'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='9'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},

#ifdef __QWERTY_INPUT
        // QWERTY keys.
        AVKON_SKEY_INFO {key='A'; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key='A'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='A'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='B'; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key='B'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='B'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='C'; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key='C'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='C'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='D'; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key='D'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='D'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='E'; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key='E'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='E'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='F'; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key='F'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='F'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='G'; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key='G'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='G'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='H'; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key='H'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='H'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='I'; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key='I'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='I'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='J'; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key='J'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='J'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='K'; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key='K'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='K'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='L'; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key='L'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='L'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='M'; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key='M'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='M'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='N'; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key='N'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='N'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='O'; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key='O'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='O'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='P'; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key='P'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='P'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='Q'; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key='Q'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='Q'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='R'; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key='R'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='R'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='S'; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key='S'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='S'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='T'; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key='T'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='T'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='U'; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key='U'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='U'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='V'; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key='V'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='V'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='W'; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key='W'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='W'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='X'; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key='X'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='X'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='Y'; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key='Y'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='Y'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='Z'; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key='Z'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='Z'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeyBacklightToggle; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key=EStdKeyBacklightToggle; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyBacklightToggle; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='+'; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key='+'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='+'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeyMinus; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key=EStdKeyMinus; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyMinus; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeySemiColon; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key=EStdKeySemiColon; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeySemiColon; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeySingleQuote; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key=EStdKeySingleQuote; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeySingleQuote; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeyLeftFunc; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key=EStdKeyLeftFunc; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyLeftFunc; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeyComma; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key=EStdKeyComma; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyComma; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeyFullStop; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key=EStdKeyFullStop; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyFullStop; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeyForwardSlash; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key=EStdKeyForwardSlash; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyForwardSlash; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeyEnter; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key=EStdKeyEnter; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyEnter; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeySpace; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key=EStdKeySpace; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeySpace; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeyRightShift; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key=EStdKeyRightShift; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyRightShift; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeyRightCtrl; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key=EStdKeyRightCtrl; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyRightCtrl; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeyBacklightOn; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key=EStdKeyBacklightOn; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyBacklightOn; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeyBacklightOff; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key=EStdKeyBacklightOff; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyBacklightOff; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeyRightFunc; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key=EStdKeyRightFunc; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyRightFunc; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},

#endif // __QWERTY_INPUT

        // Default keysounds for CBA keys
        AVKON_SKEY_INFO {key=EStdKeyDevice0; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key=EStdKeyDevice0; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyDevice0; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeyDevice1; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key=EStdKeyDevice1; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyDevice1; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        // Default keysound for OK key
        AVKON_SKEY_INFO {key=EStdKeyDevice3; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key=EStdKeyDevice3; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyDevice3; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        // Default keysound for arrow keys
        AVKON_SKEY_INFO {key=EStdKeyLeftArrow; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key=EStdKeyLeftArrow; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyLeftArrow; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeyRightArrow; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key=EStdKeyRightArrow; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyRightArrow; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeyUpArrow; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key=EStdKeyUpArrow; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyUpArrow; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeyDownArrow; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key=EStdKeyDownArrow; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyDownArrow; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        // Default keysound for #, * & Shift key
        AVKON_SKEY_INFO {key='*'; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key='*'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='*'; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeyHash; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key=EStdKeyHash; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyHash; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeyLeftShift; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key=EStdKeyLeftShift; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyLeftShift; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        // Backspace
        AVKON_SKEY_INFO {key=EStdKeyBackspace; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key=EStdKeyBackspace; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyBackspace; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},

        // APPS key
        AVKON_SKEY_INFO {key=EStdKeyApplication0; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key=EStdKeyApplication0; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyApplication0; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},

        // Call keys
        AVKON_SKEY_INFO {key=EStdKeyYes; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key=EStdKeyYes; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyYes; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},

        AVKON_SKEY_INFO {key=EStdKeyNo; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key=EStdKeyNo; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyNo; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},

        // Voice Key
        AVKON_SKEY_INFO {key=EStdKeyDevice6; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key=EStdKeyDevice6; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyDevice6; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},

        // Power key
        AVKON_SKEY_INFO {key=EStdKeyDevice2; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key=EStdKeyDevice2; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyDevice2; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},

        // Diagonal events

        // Left up
        AVKON_SKEY_INFO {key=EStdKeyDevice10; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key=EStdKeyDevice10; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyDevice10; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},

        // Right up
        AVKON_SKEY_INFO {key=EStdKeyDevice11; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key=EStdKeyDevice11; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyDevice11; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},

        // Right down
        AVKON_SKEY_INFO {key=EStdKeyDevice12; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key=EStdKeyDevice12; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyDevice12; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;},

        // Left down
        AVKON_SKEY_INFO {key=EStdKeyDevice13; sid=EAvkonSIDStandardKeyClick;},
        AVKON_SKEY_INFO {key=EStdKeyDevice13; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyDevice13; sid=EAvkonSIDStandardKeyClick; type = ESKeyTypeRepeat;}

        };
    }

// Silent keysound resource.

RESOURCE AVKON_SKEY_LIST r_avkon_silent_skey_list
    {
    list=
        {
        AVKON_SKEY_INFO {key='0'; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key='0'; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='0'; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='1'; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key='1'; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='1'; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='2'; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key='2'; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='2'; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='3'; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key='3'; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='3'; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='4'; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key='4'; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='4'; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='5'; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key='5'; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='5'; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='6'; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key='6'; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='6'; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='7'; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key='7'; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='7'; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='8'; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key='8'; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='8'; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='9'; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key='9'; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='9'; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},

#ifdef __QWERTY_INPUT
        // QWERTY keys.
        AVKON_SKEY_INFO {key='A'; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key='A'; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='A'; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='B'; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key='B'; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='B'; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='C'; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key='C'; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='C'; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='D'; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key='D'; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='D'; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='E'; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key='E'; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='E'; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='F'; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key='F'; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='F'; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='G'; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key='G'; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='G'; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='H'; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key='H'; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='H'; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='I'; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key='I'; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='I'; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='J'; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key='J'; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='J'; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='K'; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key='K'; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='K'; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='L'; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key='L'; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='L'; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='M'; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key='M'; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='M'; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='N'; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key='N'; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='N'; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='O'; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key='O'; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='O'; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='P'; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key='P'; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='P'; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='Q'; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key='Q'; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='Q'; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='R'; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key='R'; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='R'; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='S'; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key='S'; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='S'; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='T'; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key='T'; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='T'; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='U'; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key='U'; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='U'; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='V'; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key='V'; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='V'; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='W'; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key='W'; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='W'; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='X'; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key='X'; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='X'; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='Y'; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key='Y'; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='Y'; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='Z'; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key='Z'; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='Z'; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeyBacklightToggle; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key=EStdKeyBacklightToggle; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyBacklightToggle; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key='+'; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key='+'; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='+'; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeyMinus; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key=EStdKeyMinus; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyMinus; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeySemiColon; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key=EStdKeySemiColon; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeySemiColon; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeySingleQuote; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key=EStdKeySingleQuote; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeySingleQuote; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeyLeftFunc; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key=EStdKeyLeftFunc; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyLeftFunc; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeyComma; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key=EStdKeyComma; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyComma; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeyFullStop; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key=EStdKeyFullStop; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyFullStop; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeyForwardSlash; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key=EStdKeyForwardSlash; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyForwardSlash; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeyEnter; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key=EStdKeyEnter; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyEnter; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeySpace; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key=EStdKeySpace; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeySpace; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeyRightShift; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key=EStdKeyRightShift; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyRightShift; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeyRightCtrl; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key=EStdKeyRightCtrl; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyRightCtrl; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeyBacklightOn; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key=EStdKeyBacklightOn; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyBacklightOn; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeyBacklightOff; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key=EStdKeyBacklightOff; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyBacklightOff; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeyRightFunc; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key=EStdKeyRightFunc; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyRightFunc; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},

#endif // __QWERTY_INPUT

        // Default keysounds for CBA keys
        AVKON_SKEY_INFO {key=EStdKeyDevice0; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key=EStdKeyDevice0; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyDevice0; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeyDevice1; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key=EStdKeyDevice1; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyDevice1; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        // Default keysound for OK key
        AVKON_SKEY_INFO {key=EStdKeyDevice3; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key=EStdKeyDevice3; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyDevice3; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        // Default keysound for arrow keys
        AVKON_SKEY_INFO {key=EStdKeyLeftArrow; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key=EStdKeyLeftArrow; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyLeftArrow; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeyRightArrow; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key=EStdKeyRightArrow; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyRightArrow; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeyUpArrow; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key=EStdKeyUpArrow; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyUpArrow; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeyDownArrow; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key=EStdKeyDownArrow; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyDownArrow; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        // Default keysound for #, * & Shift key
        AVKON_SKEY_INFO {key='*'; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key='*'; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key='*'; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeyHash; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key=EStdKeyHash; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyHash; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        AVKON_SKEY_INFO {key=EStdKeyLeftShift; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key=EStdKeyLeftShift; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyLeftShift; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},
        // Backspace
        AVKON_SKEY_INFO {key=EStdKeyBackspace; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key=EStdKeyBackspace; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyBackspace; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},

        // APPS key
        AVKON_SKEY_INFO {key=EStdKeyApplication0; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key=EStdKeyApplication0; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyApplication0; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},

        // Callkeys
        AVKON_SKEY_INFO {key=EStdKeyYes; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key=EStdKeyYes; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyYes; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},

        AVKON_SKEY_INFO {key=EStdKeyNo; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key=EStdKeyNo; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyNo; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},

        // Voice key
        AVKON_SKEY_INFO {key=EStdKeyDevice6; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key=EStdKeyDevice6; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyDevice6; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},

        // Power key
        AVKON_SKEY_INFO {key=EStdKeyDevice2; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key=EStdKeyDevice2; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyDevice2; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},

        // Diagonal events

        // Left up
        AVKON_SKEY_INFO {key=EStdKeyDevice10; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key=EStdKeyDevice10; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyDevice10; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},

        // Right up
        AVKON_SKEY_INFO {key=EStdKeyDevice11; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key=EStdKeyDevice11; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyDevice11; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},

        // Right down
        AVKON_SKEY_INFO {key=EStdKeyDevice12; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key=EStdKeyDevice12; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyDevice12; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;},

        // Left down
        AVKON_SKEY_INFO {key=EStdKeyDevice13; sid=EAvkonSIDNoSound;},
        AVKON_SKEY_INFO {key=EStdKeyDevice13; sid=EAvkonSIDNoSound; type = ESKeyTypeLong;},
        AVKON_SKEY_INFO {key=EStdKeyDevice13; sid=EAvkonSIDNoSound; type = ESKeyTypeRepeat;}

        };
    }


//
// Setting Page default resources
//
// Not used in code!
RESOURCE AVKON_LAYOUT_TEXT r_avkon_layout_empty_setting_page_1
    {
    font = ELatinBold12; C=215; l=6; r=4; B=31; W=122; J=ELayoutAlignCenter;
    }

// Not used in code!
RESOURCE AVKON_LAYOUT_TEXT r_avkon_layout_empty_setting_page_2
    {
    font = ELatinBold12; C=215; l=6; r=4; B=47; W=122; J=ELayoutAlignCenter;
    }

// Not used in code!
RESOURCE AVKON_SETTING_PAGE r_avkon_default_setting_page
    {
// All defaults from .rh file
    }

RESOURCE TIME_EDITOR r_avkon_default_setting_page_time_editor
    {
    minTime= TIME {hour=0;};
    maxTime= TIME {hour=23;};
    }
RESOURCE DATE_EDITOR r_avkon_default_setting_page_date_editor
    {
    minDate= DATE {year=1800;};
    maxDate= DATE {year=2999;};
    }
RESOURCE EDWIN r_avkon_default_setting_page_text_editor
    {
    flags= EEikEdwinNoLineOrParaBreaks;
    lines = 6;
    }
RESOURCE AVKON_INTEGER_EDWIN r_avkon_default_setting_page_number_editor
    {
    }
RESOURCE EDWIN r_avkon_default_setting_page_phone_editor
    {
    }

//
// Default resource used for setting pages launched from CAknQueryValueDuration
//

RESOURCE DURATION_EDITOR r_avkon_default_setting_page_duration_editor
    {
    minDuration= DURATION {seconds=0;};
    maxDuration= DURATION {seconds=3599;};
    flags = 0;
    }

RESOURCE LISTBOX r_avkon_popup_setting_list_empty_listbox
    {
    flags = EAknListBoxMultipleSelection;
    height = 3;
    width = 60;
    }


RESOURCE LBUF r_avkon_set_pane_empty
    {
    txt=qtn_selec_set_pane_empty;
    }

RESOURCE AKN_ICON_ARRAY r_avkon_setting_page_radiobutton_icons
    {
    type = EAknIconArraySimple;
    bmpfile = AVKON_BITMAP_FILE;
    icons =
        {
        AKN_ICON
            {
            iconId = EMbmAvkonQgn_indi_radiobutt_on;
            maskId = EMbmAvkonQgn_indi_radiobutt_on_mask;
            },
        AKN_ICON
            {
            iconId = EMbmAvkonQgn_indi_radiobutt_off;
            maskId = EMbmAvkonQgn_indi_radiobutt_off_mask;
            }
        };
    }


RESOURCE AKN_ICON_ARRAY r_avkon_setting_page_checkbox_icons
    {
    type = EAknIconArraySimple;
    bmpfile = AVKON_BITMAP_FILE;
    icons =
        {
        AKN_ICON
            {
            iconId = EMbmAvkonQgn_indi_checkbox_on;
            maskId = EMbmAvkonQgn_indi_checkbox_on_mask;
            },
        AKN_ICON
            {
            iconId = EMbmAvkonQgn_indi_checkbox_off;
            maskId = EMbmAvkonQgn_indi_checkbox_off_mask;
            }
        };
    }




//
// Avkon Note Wrappers
//

RESOURCE DIALOG r_akn_confirmation_note_dialog
    {
    flags =  EAknConfirmationNoteFlags;
    buttons = r_avkon_softkeys_empty_with_ids;
    items =
        {
        DLG_LINE
            {
            type = EAknCtNote;
            id = EGeneralNote;
            control = AVKON_NOTE
                {
                layout = EGeneralLayout;
                singular_label = text_done;
                animation = r_qgn_note_ok_anim;
                };
            }
        };

    }


RESOURCE AKN_NOTE_WRAPPER r_akn_confirmation_note
    {
    resId = r_akn_confirmation_note_dialog;
    timeout = EAknConfirmationNoteTimeout;
    tone = EAknNoteDialogConfirmationTone;
    text = "";  // Set to empty string to enable default text from the dialog resource
    }


RESOURCE DIALOG r_akn_confirmation_note_dialog_wait
    {
    flags =  EAknConfirmationNoteFlags | EEikDialogFlagWait;
    buttons = r_avkon_softkeys_empty_with_ids;
    items =
        {
        DLG_LINE
            {
            type = EAknCtNote;
            id = EGeneralNote;
            control = AVKON_NOTE
                {
                layout = EGeneralLayout;
                singular_label = text_done;
                animation = r_qgn_note_ok_anim;
                };
            }
        };

    }




RESOURCE AKN_NOTE_WRAPPER r_akn_confirmation_note_wait
    {
    resId = r_akn_confirmation_note_dialog_wait;
    timeout = EAknConfirmationNoteTimeout;
    tone = EAknNoteDialogConfirmationTone;
    text = "";  // Set to empty string to enable default text from the dialog resource
    }


RESOURCE DIALOG r_akn_information_note_dialog
    {
    flags =  EAknInformationNoteFlags;
    buttons = r_avkon_softkeys_empty_with_ids;
    items =
        {
        DLG_LINE
            {
            type = EAknCtNote;
            id = EGeneralNote;
            control = AVKON_NOTE
                {
                // localised string for default text, see Notes UI spec.
                layout = EGeneralLayout;
                animation = r_qgn_note_info_anim;
                };
            }
        };
    }

RESOURCE AKN_NOTE_WRAPPER r_akn_information_note
    {
    resId = r_akn_information_note_dialog;
    timeout = EAknInformationNoteTimeout;
    tone = EAknNoteDialogConfirmationTone;
    text = "";
    }


RESOURCE DIALOG r_akn_information_note_dialog_wait
    {
    flags =  EAknInformationNoteFlags | EEikDialogFlagWait;
    buttons = r_avkon_softkeys_empty_with_ids;
    items =
        {
        DLG_LINE
            {
            type = EAknCtNote;
            id = EGeneralNote;
            control = AVKON_NOTE
                {
                // localised string for default text, see Notes UI spec.
                layout = EGeneralLayout;
                animation = r_qgn_note_info_anim;
                };
            }
        };
    }

RESOURCE AKN_NOTE_WRAPPER r_akn_information_note_wait
    {
    resId = r_akn_information_note_dialog_wait;
    timeout = EAknInformationNoteTimeout;
    tone = EAknNoteDialogConfirmationTone;
    text = "";
    }

RESOURCE DIALOG r_akn_error_note_dialog
    {
    flags =  EAknErrorNoteFlags;
    buttons = r_avkon_softkeys_empty_with_ids;
    items =
        {
        DLG_LINE
            {
            type = EAknCtNote;
            id = EGeneralNote;
            control = AVKON_NOTE
                {
                layout = EGeneralLayout;
                animation = r_qgn_note_error_anim;
                };
            }
        };
    }

RESOURCE AKN_NOTE_WRAPPER r_akn_error_note
    {
    resId = r_akn_error_note_dialog;
    timeout = EAknErrorNoteTimeout;
    tone = EAknNoteDialogErrorTone;
    text = "";
    }

RESOURCE DIALOG r_akn_error_note_dialog_wait
    {
    flags =  EAknErrorNoteFlags | EEikDialogFlagWait;
    buttons = r_avkon_softkeys_empty_with_ids;
    items =
        {
        DLG_LINE
            {
            type = EAknCtNote;
            id = EGeneralNote;
            control = AVKON_NOTE
                {
                layout = EGeneralLayout;
                animation = r_qgn_note_error_anim;
                };
            }
        };
    }

RESOURCE AKN_NOTE_WRAPPER r_akn_error_note_wait
    {
    resId = r_akn_error_note_dialog_wait;
    timeout = EAknErrorNoteTimeout;
    tone = EAknNoteDialogErrorTone;
    text = "";
    }

RESOURCE DIALOG r_akn_warning_note_dialog
    {
    flags = EAknWarningNoteFlags;
    buttons = r_avkon_softkeys_empty_with_ids;
    items =
        {
        DLG_LINE
            {
            type = EAknCtNote;
            id = EGeneralNote;
            control = AVKON_NOTE
                {
                layout = EGeneralLayout;
                animation = r_qgn_note_warning_anim;
                };
            }
        };
    }

RESOURCE AKN_NOTE_WRAPPER r_akn_warning_note
    {
    resId = r_akn_warning_note_dialog;
    timeout = EAknWarningNoteTimeout;
    tone = EAknNoteDialogWarningTone;
    text = "";
    }

RESOURCE DIALOG r_akn_warning_note_dialog_wait
    {
    flags = EAknWarningNoteFlags | EEikDialogFlagWait;
    buttons = r_avkon_softkeys_empty_with_ids;
    items =
        {
        DLG_LINE
            {
            type = EAknCtNote;
            id = EGeneralNote;
            control = AVKON_NOTE
                {
                layout = EGeneralLayout;
                animation = r_qgn_note_warning_anim;
                };
            }
        };
    }

RESOURCE AKN_NOTE_WRAPPER r_akn_warning_note_wait
    {
    resId = r_akn_warning_note_dialog_wait;
    timeout = EAknWarningNoteTimeout;
    tone = EAknNoteDialogWarningTone;
    text = "";
    }



////////////////////////////////////////////////////
// Animation resources
////////////////////////////////////////////////////


RESOURCE BMPANIM_DATA r_qgn_note_ok_anim
    {
    frameinterval = 200;
    playmode = EAknBitmapAnimationPlayModePlay;
    bmpfile = AVKON_BITMAP_FILE;
    frames = r_qgn_note_ok_anim_frames;
    }




RESOURCE ARRAY r_qgn_note_ok_anim_frames
    {
    items=
        {
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_ok_2; maskid=EMbmAvkonQgn_note_ok_2_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_ok_3; maskid=EMbmAvkonQgn_note_ok_3_mask;},
//        BMPANIM_FRAME {time=400;bmpid=EMbmAvkonQgn_note_ok_4; maskid=EMbmAvkonQgn_note_ok_4_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_ok_5; maskid=EMbmAvkonQgn_note_ok_5_mask;},
        BMPANIM_FRAME {time=750;bmpid=EMbmAvkonQgn_note_ok; maskid=EMbmAvkonQgn_note_ok_mask;},
        BMPANIM_FRAME {time=750;bmpid=EMbmAvkonQgn_note_ok; maskid=EMbmAvkonQgn_note_ok_mask;}
        };
    }

RESOURCE BMPANIM_DATA r_qgn_note_erased_anim
    {
    frameinterval = 100;
    playmode = EAknBitmapAnimationPlayModePlay;
    bmpfile = AVKON_BITMAP_FILE;
    frames = r_qgn_note_erased_anim_frames;
    }

RESOURCE ARRAY r_qgn_note_erased_anim_frames
    {
    items=
        {
//        BMPANIM_FRAME {time=200; bmpid=EMbmAvkonQgn_note_erased_2; maskid=EMbmAvkonQgn_note_erased_2_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_erased_3; maskid=EMbmAvkonQgn_note_erased_3_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_erased_4; maskid=EMbmAvkonQgn_note_erased_4_mask;},
//        BMPANIM_FRAME {time=300; bmpid=EMbmAvkonQgn_note_erased_5; maskid=EMbmAvkonQgn_note_erased_5_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_erased_6; maskid=EMbmAvkonQgn_note_erased_6_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_erased_7; maskid=EMbmAvkonQgn_note_erased_7_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_erased_8; maskid=EMbmAvkonQgn_note_erased_8_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_erased_7; maskid=EMbmAvkonQgn_note_erased_7_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_erased_8; maskid=EMbmAvkonQgn_note_erased_8_mask;},
        BMPANIM_FRAME {time=750; bmpid=EMbmAvkonQgn_note_erased; maskid=EMbmAvkonQgn_note_erased_mask;},
        BMPANIM_FRAME {time=750; bmpid=EMbmAvkonQgn_note_erased; maskid=EMbmAvkonQgn_note_erased_mask;}
        };
    }



RESOURCE BMPANIM_DATA r_qgn_note_info_anim
    {
    frameinterval = 200;
    playmode = EAknBitmapAnimationPlayModePlay;
    bmpfile = AVKON_BITMAP_FILE;
    frames = r_qgn_note_info_anim_frames;
    }

RESOURCE ARRAY  r_qgn_note_info_anim_frames
    {
    items=
        {

//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_empty; maskid=EMbmAvkonQgn_note_empty_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_info_2; maskid=EMbmAvkonQgn_note_info_2_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_info_3; maskid=EMbmAvkonQgn_note_info_3_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_info_4; maskid=EMbmAvkonQgn_note_info_4_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_info_5; maskid=EMbmAvkonQgn_note_info_5_mask;},
        BMPANIM_FRAME {time=1500; bmpid=EMbmAvkonQgn_note_info; maskid=EMbmAvkonQgn_note_info_mask;}
        };
    }


RESOURCE BMPANIM_DATA r_qgn_note_warning_anim
    {
    frameinterval = 200;
    playmode = EAknBitmapAnimationPlayModePlay;
    bmpfile = AVKON_BITMAP_FILE;
    frames = r_qgn_note_warning_anim_frames;
    }

RESOURCE ARRAY r_qgn_note_warning_anim_frames
    {
    items=
        {
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_warning_2; maskid=EMbmAvkonQgn_note_warning_2_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_warning; maskid=EMbmAvkonQgn_note_warning_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_warning_2; maskid=EMbmAvkonQgn_note_warning_2_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_warning; maskid=EMbmAvkonQgn_note_warning_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_warning_2; maskid=EMbmAvkonQgn_note_warning_2_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_warning; maskid=EMbmAvkonQgn_note_warning_mask;},
        BMPANIM_FRAME {time = 3000; bmpid=EMbmAvkonQgn_note_warning; maskid=EMbmAvkonQgn_note_warning_mask;}
        };
    }

RESOURCE BMPANIM_DATA r_qgn_note_error_anim
    {
    frameinterval = 200;
    playmode = EAknBitmapAnimationPlayModePlay;
    bmpfile = AVKON_BITMAP_FILE;
    frames = r_qgn_note_error_anim_frames;
    }

RESOURCE ARRAY r_qgn_note_error_anim_frames
    {
    items=
        {
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_error_2; maskid=EMbmAvkonQgn_note_error_2_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_error; maskid=EMbmAvkonQgn_note_error_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_error_2; maskid=EMbmAvkonQgn_note_error_2_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_error; maskid=EMbmAvkonQgn_note_error_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_error_2; maskid=EMbmAvkonQgn_note_error_2_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_error; maskid=EMbmAvkonQgn_note_error_mask;},
        BMPANIM_FRAME {time = 3000; bmpid=EMbmAvkonQgn_note_error; maskid=EMbmAvkonQgn_note_error_mask;}
        };
    }

RESOURCE BMPANIM_DATA r_qgn_note_query_anim
    {
    frameinterval = 250;
    playmode = EAknBitmapAnimationPlayModePlay;
    bmpfile = AVKON_BITMAP_FILE;
    frames = r_qgn_note_query_anim_frames;
    }

RESOURCE ARRAY r_qgn_note_query_anim_frames
    {
    items=
        {
//       BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_query; maskid=EMbmAvkonQgn_note_query_mask;},
//       BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_query_2; maskid=EMbmAvkonQgn_note_query_2_mask;},
//       BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_query_3; maskid=EMbmAvkonQgn_note_query_3_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_query_2; maskid=EMbmAvkonQgn_note_query_2_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_query_4; maskid=EMbmAvkonQgn_note_query_4_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_query_2; maskid=EMbmAvkonQgn_note_query_2_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_query_5; maskid=EMbmAvkonQgn_note_query_5_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_query_2; maskid=EMbmAvkonQgn_note_query_2_mask;},
        BMPANIM_FRAME {time = 2250; bmpid=EMbmAvkonQgn_note_query; maskid=EMbmAvkonQgn_note_query_mask;}
        };
    }


RESOURCE BMPANIM_DATA r_qgn_graf_wait_bar_anim
    {
    frameinterval = 100;
    playmode = EAknBitmapAnimationPlayModeCycle;
    bmpfile = AVKON_BITMAP_FILE;
    frames = r_qgn_graf_wait_bar_anim_frames;
    }

RESOURCE ARRAY r_qgn_graf_wait_bar_anim_frames
    {
    items=
        {
        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_graf_bar_wait_1; maskid=EMbmAvkonQgn_graf_bar_wait_1_mask;},
        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_graf_bar_wait_2; maskid=EMbmAvkonQgn_graf_bar_wait_2_mask;},
        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_graf_bar_wait_3; maskid=EMbmAvkonQgn_graf_bar_wait_3_mask;},
        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_graf_bar_wait_4; maskid=EMbmAvkonQgn_graf_bar_wait_4_mask;},
        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_graf_bar_wait_5; maskid=EMbmAvkonQgn_graf_bar_wait_5_mask;},
        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_graf_bar_wait_6; maskid=EMbmAvkonQgn_graf_bar_wait_6_mask;},
        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_graf_bar_wait_7; maskid=EMbmAvkonQgn_graf_bar_wait_7_mask;}
        };
    }


RESOURCE BMPANIM_DATA r_qgn_note_batt_charging_anim
    {
    frameinterval = 250;
    playmode = EAknBitmapAnimationPlayModePlay;
    bmpfile = AVKON_BITMAP_FILE;
    frames = r_qgn_note_batt_charging_anim_frames;
    }


RESOURCE ARRAY r_qgn_note_batt_charging_anim_frames
    {
    items=
        {
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_batt_charging_2; maskid=EMbmAvkonQgn_note_batt_charging_2_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_batt_charging_3; maskid=EMbmAvkonQgn_note_batt_charging_3_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_batt_charging_4; maskid=EMbmAvkonQgn_note_batt_charging_4_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_batt_charging_5; maskid=EMbmAvkonQgn_note_batt_charging_5_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_batt_charging; maskid=EMbmAvkonQgn_note_batt_charging_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_batt_charging_2; maskid=EMbmAvkonQgn_note_batt_charging_2_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_batt_charging_3; maskid=EMbmAvkonQgn_note_batt_charging_3_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_batt_charging_4; maskid=EMbmAvkonQgn_note_batt_charging_4_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_batt_charging_5; maskid=EMbmAvkonQgn_note_batt_charging_5_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_batt_charging; maskid=EMbmAvkonQgn_note_batt_charging_mask;},
        BMPANIM_FRAME {time=3000; bmpid=EMbmAvkonQgn_note_batt_charging; maskid=EMbmAvkonQgn_note_batt_charging_mask;}
        };
    }



RESOURCE BMPANIM_DATA r_qgn_note_batt_full_anim
    {
    frameinterval = 300;
    playmode = EAknBitmapAnimationPlayModePlay;
    bmpfile = AVKON_BITMAP_FILE;
    frames = r_qgn_note_batt_full_anim_frames;
    }


RESOURCE ARRAY r_qgn_note_batt_full_anim_frames
    {
    items=
        {
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_batt_full; maskid=EMbmAvkonQgn_note_batt_full_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_batt_full_2; maskid=EMbmAvkonQgn_note_batt_full_2_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_batt_full; maskid=EMbmAvkonQgn_note_batt_full_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_batt_full_2; maskid=EMbmAvkonQgn_note_batt_full_2_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_batt_full; maskid=EMbmAvkonQgn_note_batt_full_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_batt_full_2; maskid=EMbmAvkonQgn_note_batt_full_2_mask;},
        BMPANIM_FRAME {time=3000; bmpid=EMbmAvkonQgn_note_batt_full; maskid=EMbmAvkonQgn_note_batt_full_mask;}
        };
    }


RESOURCE BMPANIM_DATA r_qgn_note_batt_low_anim
    {
    frameinterval = 300;
    playmode = EAknBitmapAnimationPlayModePlay;
    bmpfile = AVKON_BITMAP_FILE;
    frames = r_qgn_note_batt_low_anim_frames;
    }


RESOURCE ARRAY r_qgn_note_batt_low_anim_frames
    {
    items=
        {
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_batt_low_2; maskid=EMbmAvkonQgn_note_batt_low_2_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_batt_low; maskid=EMbmAvkonQgn_note_batt_low_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_batt_low_2; maskid=EMbmAvkonQgn_note_batt_low_2_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_batt_low; maskid=EMbmAvkonQgn_note_batt_low_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_batt_low_2; maskid=EMbmAvkonQgn_note_batt_low_2_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_batt_low; maskid=EMbmAvkonQgn_note_batt_low_mask;},
        BMPANIM_FRAME {time=3000; bmpid=EMbmAvkonQgn_note_batt_low; maskid=EMbmAvkonQgn_note_batt_low_mask;}
        };
    }


RESOURCE BMPANIM_DATA r_qgn_note_batt_not_charging_anim
    {
    frameinterval = 500;
    playmode = EAknBitmapAnimationPlayModePlay;
    bmpfile = AVKON_BITMAP_FILE;
    frames = r_qgn_note_batt_not_charging_anim_frames;
    }


RESOURCE ARRAY r_qgn_note_batt_not_charging_anim_frames
    {
    items=
        {
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_batt_not_charging_2; maskid=EMbmAvkonQgn_note_batt_not_charging_2_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_batt_not_charging_3; maskid=EMbmAvkonQgn_note_batt_not_charging_3_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_batt_not_charging; maskid=EMbmAvkonQgn_note_batt_not_charging_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_batt_not_charging_2; maskid=EMbmAvkonQgn_note_batt_not_charging_2_mask;},
        BMPANIM_FRAME {time=3000; bmpid=EMbmAvkonQgn_note_batt_not_charging; maskid=EMbmAvkonQgn_note_batt_not_charging_mask;}
        };
    }


RESOURCE BMPANIM_DATA r_qgn_note_batt_recharge_anim
    {
    frameinterval = 200;
    playmode = EAknBitmapAnimationPlayModePlay;
    bmpfile = AVKON_BITMAP_FILE;
    frames = r_qgn_note_batt_recharge_anim_frames;
    }


RESOURCE ARRAY r_qgn_note_batt_recharge_anim_frames
    {
    items=
        {
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_batt_recharge; maskid=EMbmAvkonQgn_note_batt_recharge_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_batt_recharge_2; maskid=EMbmAvkonQgn_note_batt_recharge_2_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_batt_recharge_3; maskid=EMbmAvkonQgn_note_batt_recharge_3_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_batt_recharge_4; maskid=EMbmAvkonQgn_note_batt_recharge_4_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_batt_recharge_3; maskid=EMbmAvkonQgn_note_batt_recharge_3_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_batt_recharge_2; maskid=EMbmAvkonQgn_note_batt_recharge_2_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_batt_recharge; maskid=EMbmAvkonQgn_note_batt_recharge_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_batt_recharge_2; maskid=EMbmAvkonQgn_note_batt_recharge_2_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_batt_recharge_3; maskid=EMbmAvkonQgn_note_batt_recharge_3_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_batt_recharge_4; maskid=EMbmAvkonQgn_note_batt_recharge_4_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_batt_recharge_3; maskid=EMbmAvkonQgn_note_batt_recharge_3_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_batt_recharge_2; maskid=EMbmAvkonQgn_note_batt_recharge_2_mask;},
        BMPANIM_FRAME {time=3000; bmpid=EMbmAvkonQgn_note_batt_recharge; maskid=EMbmAvkonQgn_note_batt_recharge_mask;}
        };
    }


RESOURCE BMPANIM_DATA r_qgn_note_keyguard_locked_anim
    {
    frameinterval = 100;
    playmode = EAknBitmapAnimationPlayModePlay;
    bmpfile = AVKON_BITMAP_FILE;
    frames = r_qgn_note_keyguard_locked_anim_frames;
    }


RESOURCE ARRAY r_qgn_note_keyguard_locked_anim_frames
    {
    items=
        {
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_keyguard_2; maskid=EMbmAvkonQgn_note_keyguard_2_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_keyguard_3; maskid=EMbmAvkonQgn_note_keyguard_3_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_keyguard_4; maskid=EMbmAvkonQgn_note_keyguard_4_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_keyguard_5; maskid=EMbmAvkonQgn_note_keyguard_5_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_keyguard_6; maskid=EMbmAvkonQgn_note_keyguard_6_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_keyguard_7; maskid=EMbmAvkonQgn_note_keyguard_7_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_keyguard_8; maskid=EMbmAvkonQgn_note_keyguard_8_mask;},
        BMPANIM_FRAME {time=1000; bmpid=EMbmAvkonQgn_note_keyguard; maskid=EMbmAvkonQgn_note_keyguard_mask;}
        };
    }

RESOURCE BMPANIM_DATA r_qgn_note_keyguard_open_anim
    {
    frameinterval = 100;
    playmode = EAknBitmapAnimationPlayModePlay;
    bmpfile = AVKON_BITMAP_FILE;
    frames = r_qgn_note_keyguard_open_anim_frames;
    }


RESOURCE ARRAY r_qgn_note_keyguard_open_anim_frames
    {
    items=
        {
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_keyguard; maskid=EMbmAvkonQgn_note_keyguard_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_keyguard_8; maskid=EMbmAvkonQgn_note_keyguard_8_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_keyguard_7; maskid=EMbmAvkonQgn_note_keyguard_7_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_keyguard_6; maskid=EMbmAvkonQgn_note_keyguard_6_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_keyguard_5; maskid=EMbmAvkonQgn_note_keyguard_5_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_keyguard_4; maskid=EMbmAvkonQgn_note_keyguard_4_mask;},
//        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_note_keyguard_3; maskid=EMbmAvkonQgn_note_keyguard_3_mask;},
        BMPANIM_FRAME {time=1000; bmpid=EMbmAvkonQgn_note_keyguard_2; maskid=EMbmAvkonQgn_note_keyguard_2_mask;}
        };
    }


RESOURCE BMPANIM_DATA r_bubblemanager_alerting_anim
    {
    frameinterval=500; // ms
    playmode=1;
    frames = r_bubblemanager_alerting_image_array;
    bmpfile = CALLSTATUS_BITMAP_FILE;
    }

RESOURCE ARRAY r_bubblemanager_alerting_image_array
    {
    items=
        {
        BMPANIM_FRAME {
            bmpid=EMbmCallstatusQgn_indi_call_active;
            maskid=EMbmCallstatusQgn_indi_call_active_mask;
               },
        BMPANIM_FRAME {
            bmpid=EMbmCallstatusQgn_indi_call_active_2;
            maskid=EMbmCallstatusQgn_indi_call_active_mask;
               }
        };
    }

RESOURCE BMPANIM_DATA r_bubblemanager_alerting_voip_anim
    {
    frameinterval=500; // ms
    playmode=1;
    frames = r_bubblemanager_alerting_voip_image_array;
    bmpfile = CALLSTATUS_BITMAP_FILE;
    }

RESOURCE ARRAY r_bubblemanager_alerting_voip_image_array
    {
    items=
        {
        BMPANIM_FRAME {
            bmpid=EMbmCallstatusQgn_indi_call_voip_active;
            maskid=EMbmCallstatusQgn_indi_call_voip_active_mask;
               },
        BMPANIM_FRAME {
            bmpid=EMbmCallstatusQgn_indi_call_voip_active_2;
            maskid=EMbmCallstatusQgn_indi_call_voip_active_2_mask;
               }
        };
    }

RESOURCE ARRAY r_bubblemanager_alerting_backgroundframe
    {
    items=
        {
        };
    }


RESOURCE TBUF r_avkon_numeric_password_blanking_text { buf = "****"; }
RESOURCE TBUF r_avkon_alpha_password_blanking_text { buf = "******"; }



//
// Screensaver application resource
//

RESOURCE LABEL r_screen_saver_text
    {
    txt = qtn_sanim_text_default;
    }



// This wait note is used as a busy message when the active scheduler is stopped asynchronously
RESOURCE DIALOG r_scheduler_stop_busy_message
    {
    flags = EAknWaitNoteFlags;
    buttons=r_avkon_softkeys_empty;
    items=
        {
        DLG_LINE
            {
            type = EAknCtNote;
            id = EGeneralNote;
            control= AVKON_NOTE
                {
                layout = EWaitLayout;
                singular_label = qtn_memlo_application_busy;
                animation =r_qgn_graf_wait_bar_anim;
                };
            }
        };
    }


RESOURCE TBUF r_qtn_fldr_deleting_wait_note { buf = qtn_fldr_deleting_wait_note; }
RESOURCE TBUF r_qtn_fldr_moving_wait_note { buf = qtn_fldr_moving_wait_note; }


RESOURCE AVKON_UNUSED r_avkon_unused_3
    {
    }

RESOURCE LBUF r_avkon_text_edit_label_query_text
    {
    txt = qtn_form_prmpt_field_gen_label;
    }

// for Chinese find search mode indicators

RESOURCE AKN_ICON_ARRAY r_avkon_find_pane_indicator_icons
    {
    type = EAknIconArraySimple;
    bmpfile = AVKON_BITMAP_FILE;
    icons =
        {
        AKN_ICON
            {
            iconId = EMbmAvkonQgn_indi_chi_find_small;
            maskId = EMbmAvkonQgn_indi_chi_find_small_mask;
            },
        AKN_ICON
            {
            iconId = EMbmAvkonQgn_indi_chi_find_numeric;
            maskId = EMbmAvkonQgn_indi_chi_find_numeric_mask;
            },
        AKN_ICON
            {
            iconId = EMbmAvkonQgn_indi_chi_find_pinyin;
            maskId = EMbmAvkonQgn_indi_chi_find_pinyin_mask;
            },
        AKN_ICON
            {
            iconId = EMbmAvkonQgn_indi_chi_find_zhuyin;
            maskId = EMbmAvkonQgn_indi_chi_find_zhuyin_mask;
            },
        AKN_ICON
            {
            iconId = EMbmAvkonQgn_indi_chi_find_zhuyin_symbol;
            maskId = EMbmAvkonQgn_indi_chi_find_zhuyin_symbol_mask;
            },
        AKN_ICON
            {
            iconId = EMbmAvkonQgn_indi_chi_find_stroke_simple;
            maskId = EMbmAvkonQgn_indi_chi_find_stroke_simple_mask;
            },
        AKN_ICON
            {
            iconId = EMbmAvkonQgn_indi_chi_find_stroke_trad;
            maskId = EMbmAvkonQgn_indi_chi_find_stroke_trad_mask;
            },
        AKN_ICON
            {
            iconId = EMbmAvkonQgn_indi_chi_find_stroke_symbol;
            maskId = EMbmAvkonQgn_indi_chi_find_stroke_symbol_mask;
            },
        AKN_ICON
            {
            iconId = EMbmAvkonQgn_indi_jap_find_predictive;
            maskId = EMbmAvkonQgn_indi_jap_find_predictive_mask;
            },
        AKN_ICON
            {
            iconId = EMbmAvkonQgn_indi_jap_find_hiragana;
            maskId = EMbmAvkonQgn_indi_jap_find_hiragana_mask;
            },
        AKN_ICON
            {
            iconId = EMbmAvkonQgn_indi_jap_find_katakana_half;
            maskId = EMbmAvkonQgn_indi_jap_find_katakana_half_mask;
            },
        AKN_ICON
            {
            iconId = EMbmAvkonQgn_indi_jap_find_katakana_full;
            maskId = EMbmAvkonQgn_indi_jap_find_katakana_full_mask;
            },
        AKN_ICON
            {
            iconId = EMbmAvkonQgn_indi_jap_find_case_small_full;
            maskId = EMbmAvkonQgn_indi_jap_find_case_small_full_mask;
            },
        AKN_ICON
            {
            iconId = EMbmAvkonQgn_indi_jap_find_case_numeric_full;
            maskId = EMbmAvkonQgn_indi_jap_find_case_numeric_full_mask;
            },
        AKN_ICON
            {
            iconId = EMbmAvkonQgn_indi_jap_find_hiragana_only;
            maskId = EMbmAvkonQgn_indi_jap_find_hiragana_only_mask;
            },
        AKN_ICON
            {
            iconId = EMbmAvkonQgn_indi_thai_find_small;
            maskId = EMbmAvkonQgn_indi_thai_find_small_mask;
            },
        AKN_ICON
            {
            iconId = EMbmAvkonQgn_indi_chi_find_cangjie;
            maskId = EMbmAvkonQgn_indi_chi_find_cangjie_mask;
            }
        };
    }

RESOURCE INDICATOR_PANE r_avkon_dummy_find_indicators
    {
    indicators =
        {
        };
    }


// Resource for emergency call number display note (no text). This is not intended for non-avkon use
RESOURCE DIALOG r_avkon_emergency_call_note
    {
    flags = 0;
    buttons=r_avkon_softkeys_cancel;
        items=
        {
        DLG_LINE
            {
            type=EAknCtNote;
            id=EGeneralNote;
            control= AVKON_NOTE
                {
                layout = EGeneralLayout;
                };
            }
        };
    }

RESOURCE CBA r_avkon_softkeys_queue_quit
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyOk; txt=qtn_ccbs_softkey_queue;},
        CBA_BUTTON {id=EAknSoftkeyCancel; txt=text_softkey_quit;}
        };
    }


RESOURCE GRID_STYLE r_avkon_grid_style_default_automatic_mirroring

    {
    layoutflags = EAknGridVerticalOrientation | EAknGridLanguageSpecificHorizontalDirection | EAknGridTopToBottom;
    primaryscroll = EAknGridFollowsItemsAndLoops;
    secondaryscroll = EAknGridFollowsItemsAndLoops;
    itemsinprimaryorient = 1;
    itemsinsecondaryorient = 1;
    height = 50;
    width = 50;
    gapwidth = 0;
    gapheight = 0;
    }


RESOURCE GRID_STYLE r_avkon_grid_style_app_grid_automatic_mirroring
    {
    layoutflags = EAknGridHorizontalOrientation | EAknGridLanguageSpecificHorizontalDirection | EAknGridTopToBottom;
    primaryscroll = EAknGridFollowsItemsAndLoops;
    secondaryscroll = EAknGridFollowsItemsAndLoops;
    itemsinprimaryorient = 3;
    itemsinsecondaryorient = 3;
    height = 47;
    width = 58;
    gapwidth = 0;
    gapheight = 0;
    }


RESOURCE DIALOG r_colour_selection_grid_none
    {
    flags=EEikDialogFlagWait | EEikDialogFlagNotifyEsc| EEikDialogFlagCbaButtons |
          EEikDialogFlagNoDrag | EEikDialogFlagNoBorder;
    buttons=r_avkon_softkeys_ok_cancel;
    items=
        {
        DLG_LINE
            {
            type = EAknCtPopupHeadingPane;
            id = EColourGridPopup;
            control = AVKON_HEADING
                {
                label = qtn_select_colour_prompt;
                headinglayout = r_avkon_list_heading_pane;
                };
            },
        DLG_LINE
            {
            type = EAknCtColourSelectionDialogNoneField;
            id = EColourGridPopupNone;
            control = LABEL
                {
                txt = qtn_select_colour_none;
                };
            },
        DLG_LINE
            {
            type = EAknCtColourSelectionDialogGrid;
            id   = ECtrlGridType;
            control = GRID
                {
                style = r_colour_sel_grid_style_none;
                flags = EEikDlgItemTakesEnterKey;
                height  = 4;
                width = 4 ;
                };
            }
        };
    }

RESOURCE DIALOG r_colour_selection_grid
    {
    flags=EEikDialogFlagWait | EEikDialogFlagNotifyEsc| EEikDialogFlagCbaButtons |
          EEikDialogFlagNoDrag | EEikDialogFlagNoBorder;
    buttons=r_avkon_softkeys_ok_cancel;
    items=
        {
        DLG_LINE
            {
            type = EAknCtPopupHeadingPane;
            id = EColourGridPopup;
            control = AVKON_HEADING
                {
                label = qtn_select_colour_prompt;
                headinglayout = r_avkon_list_heading_pane;
                };
            },
        DLG_LINE
            {
            type = EAknCtColourSelectionDialogGrid;
            id   = ECtrlGridType;
            control = GRID
                {
                style = r_colour_sel_grid_style;
                flags = EEikDlgItemTakesEnterKey;
                height  = 4;
                width = 4 ;
                };
            }
        };
    }

RESOURCE GRID_STYLE r_colour_sel_grid_style_none
    {
    layoutflags = EAknGridHorizontalOrientation | EAknGridLeftToRight | EAknGridTopToBottom;
    primaryscroll = EAknGridFollowsItemsAndLoops;
    secondaryscroll = EAknGridFollowsItemsAndLoops;
    itemsinprimaryorient = 4;
    itemsinsecondaryorient = 4;
    width = 40;
    height = 23;
    gapwidth = 1;
    gapheight = 1;
    }

RESOURCE GRID_STYLE r_colour_sel_grid_style
    {
    layoutflags = EAknGridHorizontalOrientation | EAknGridLeftToRight | EAknGridTopToBottom;
    primaryscroll = EAknGridFollowsItemsAndLoops;
    secondaryscroll = EAknGridFollowsItemsAndLoops;
    itemsinprimaryorient = 4;
    itemsinsecondaryorient = 4;
    width = 40;
    height = 29;
    gapwidth = 1;
    gapheight = 1;
    }

RESOURCE STATUS_PANE_LAYOUT r_avkon_status_pane_layout_small
    {
    position = EEikStatusPaneLayoutAknLafDefined;
    pane_tree = SPANE_LAYOUT_TREE_NODE
        {
        // No pane id, this is the root of the pane tree
        // Flags are ignored at the top level - size is always fixed
        size = 15;      // This is the total width of this layout
        sub_panes =
            {
                SPANE_LAYOUT_TREE_NODE
                {
                    id = EEikStatusPaneUidNavi;
                    flags = EEikStatusPaneIsStretchable;  // will be stretched to use available space
                    // no flags needed - fixed size.
                    size = 16;
                    sub_panes = {};
                }
            };
        };
    }

RESOURCE STATUS_PANE_LAYOUT r_avkon_status_pane_layout_small_with_signal_pane
    {
    position = EEikStatusPaneLayoutAknLafDefined;
    pane_tree = SPANE_LAYOUT_TREE_NODE
        {
        // No pane id, this is the root of the pane tree
        // Flags are ignored at the top level - size is always fixed
        size = 15;      // This is the total width of this layout
        sub_panes =
            {
                SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidSignal;
                // no flags needed - fixed size.
                size = 12;
                sub_panes = {};
                },
                SPANE_LAYOUT_TREE_NODE
                {
                    id = EEikStatusPaneUidNavi;
                    flags = EEikStatusPaneIsStretchable;  // will be stretched to use available space
                    // no flags needed - fixed size.
                    size = 16;
                    sub_panes = {};
                }
            };
        };
    }

RESOURCE STATUS_PANE_LAYOUT r_avkon_status_pane_layout_small_with_signal_pane_mirrored
    {
    position = EEikStatusPaneLayoutAknLafDefined;
    pane_tree = SPANE_LAYOUT_TREE_NODE
        {
        // No pane id, this is the root of the pane tree
        // Flags are ignored at the top level - size is always fixed
        size = 15;      // This is the total width of this layout
        sub_panes =
            {
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidNavi;
                flags = EEikStatusPaneIsStretchable;  // will be stretched to use available space
                // no flags needed - fixed size.
                size = 16;
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidSignal;
                // no flags needed - fixed size.
                size = 12;
                sub_panes = {};
                }
            };
        };
    }


RESOURCE STATUS_PANE_LAYOUT r_avkon_status_pane_layout_usual_mirrored
    {
    position = EEikStatusPaneLayoutAknLafDefined;
    pane_tree = SPANE_LAYOUT_TREE_NODE
        {
        // No pane id, this is the root of the pane tree
        // Flags are ignored at the top level - size is always fixed
        size = 44;      // This is the total height of this layout
        sub_panes =
            {
            SPANE_LAYOUT_TREE_NODE
                {
                // No pane id set, because this is a set of sub panes
                flags = EEikStatusPaneIsStretchable;  // will be stretched to use available space
                size = 1;   // will be stretched to use available space
                sub_panes =
                    {
                    SPANE_LAYOUT_TREE_NODE
                        {
                        // No pane id set, because this is a set of sub panes
                        // no flags needed - fixed size.
                        size = 28;
                        sub_panes =
                            {
                            SPANE_LAYOUT_TREE_NODE
                                {
                                id = EEikStatusPaneUidIndic;
                                // no flags needed - fixed size.
                                size = 12;
                                sub_panes = {};
                                },
                            SPANE_LAYOUT_TREE_NODE
                                {
                                id = EEikStatusPaneUidTitle;
                                flags = EEikStatusPaneIsStretchable;
                                size = 1;
                                sub_panes = {};
                                }
                            };
                        },
                        SPANE_LAYOUT_TREE_NODE
                            {
                            id = EEikStatusPaneUidNavi;
                            flags = EEikStatusPaneIsStretchable;
                            size = 16;
                            sub_panes = {};
                            }
                    };
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidContext;
                // no flags needed - fixed size.
                size = 44;
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidSignal;
                // no flags needed - fixed size.
                size = 12;
                sub_panes = {};
                },
                SPANE_LAYOUT_TREE_NODE
                    {
                    id = EEikStatusPaneUidBattery;
                    size = 0; // dummy value, real value comes from AknLayout system
                    sub_panes = {};
                    }
            };
        };
    }


RESOURCE STATUS_PANE_LAYOUT r_avkon_status_pane_layout_idle_mirrored
    {
    position = EEikStatusPaneLayoutAknLafDefined;
    pane_tree = SPANE_LAYOUT_TREE_NODE
        {
        size = 56;  // height
        sub_panes =
            {
            SPANE_LAYOUT_TREE_NODE
                {
                size = 1;       // width
                flags = EEikStatusPaneIsStretchable;  // will be stretched to use available space
                sub_panes =
                    {
                    SPANE_LAYOUT_TREE_NODE
                        {
                        size = 44;      // height
                        sub_panes =
                            {
                            SPANE_LAYOUT_TREE_NODE
                                {
                                id = EEikStatusPaneUidBattery;
                                // no flags needed - fixed size.
                                size = 12;   // width
                                sub_pane = {};
                                },
                                SPANE_LAYOUT_TREE_NODE
                                {
                                // No pane id set, because this is a set of sub panes
                                size = 1;   // width
                                flags = EEikStatusPaneIsStretchable;  // will be stretched to use available space
                                sub_panes =
                                    {
                                    SPANE_LAYOUT_TREE_NODE
                                        {
                                        // No pane id set, because this is a set of sub panes
                                        // no flags needed - fixed size.
                                        size = 56;  // height
                                        sub_panes =
                                            {
                                            SPANE_LAYOUT_TREE_NODE
                                                {
                                                // No pane id set, because this is a set of sub panes
                                                // no flags needed - fixed size.
                                                size = 101;     // width
                                                sub_panes =
                                                    {
                                                    SPANE_LAYOUT_TREE_NODE
                                                        {
                                                        id = EEikStatusPaneUidTitle;
                                                        // no flags needed - fixed size.
                                                        size = 28;
                                                        sub_panes = {};
                                                        },
                                                    SPANE_LAYOUT_TREE_NODE
                                                        {
                                                        id = EEikStatusPaneUidNavi;
                                                        // no flags needed - fixed size.
                                                        size = 16;
                                                        sub_panes = {};
                                                        }
                                                     };
                                                },
                                            SPANE_LAYOUT_TREE_NODE
                                                {
                                                id = EEikStatusPaneUidClock;
                                                size = 51;  // width
                                                sub_panes = {};
                                                },
                                            SPANE_LAYOUT_TREE_NODE
                                                {
                                                // No pane id set, because this is a set of sub panes
                                                // no flags needed - fixed size.
                                                size = 12;  // width
                                                sub_panes =
                                                    {
                                                    SPANE_LAYOUT_TREE_NODE
                                                        {
                                                        id = EEikStatusPaneUidSignal;
                                                        // no flags needed - fixed size.
                                                        size = 44;  // height
                                                        sub_panes = {};
                                                        }
                                                    };
                                                }
                                            };
                                        }
                                    };
                                }
                            };
                        },
                    SPANE_LAYOUT_TREE_NODE
                        {
                        size = 12;      // height
                        sub_panes =
                            {
                            SPANE_LAYOUT_TREE_NODE
                                {
                                id = EEikStatusPaneUidIndic;
                                //flags = EEikStatusPaneIsStretchable;  // will be stretched to use available space
                                size = 113;  // width
                                sub_panes = {};
                                }
                            };
                        }
                   };
               }
            };
        };
    }


RESOURCE STATUS_PANE_LAYOUT r_avkon_status_pane_layout_power_off_recharge_mirrored
    {
    position = EEikStatusPaneLayoutAknLafDefined;
    pane_tree = SPANE_LAYOUT_TREE_NODE
        {
        // No pane id, this is the root of the pane tree
        // Flags are ignored at the top level - size is always fixed
        size = 44;      // This is the total height of this layout
        sub_panes =
            {
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidBattery;
                // no flags needed - fixed size.
                size = 12;
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                flags = EEikStatusPaneIsStretchable;  // will be stretched to use available space
                size = 1;
                sub_panes = {};
                }
            };
        };
    }


RESOURCE TBUF r_avkon_softkey_select_text
    {
    buf = text_softkey_select;
    }

RESOURCE TBUF r_avkon_softkey_next_text
    {
    buf = text_softkey_sct_next_page;
    }

RESOURCE TBUF r_avkon_special_characters_page_indicator
    {
    buf = qtn_edit_sct_page_indicator;
    }


RESOURCE STATUS_PANE_LAYOUT r_avkon_status_pane_layout_vt
    {
    position = EEikStatusPaneLayoutAknLafDefined;
    pane_tree = SPANE_LAYOUT_TREE_NODE
        {
        // No pane id, this is the root of the pane tree
        // Flags are ignored at the top level - size is always fixed
        size = 44;      // This is the total height of this layout
        sub_panes =
            {
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidSignal;
                // no flags needed - fixed size.
                size = 12;
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidContext;
                // no flags needed - fixed size.
                size = 51;
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                // No pane id set, because this is a set of sub panes
                flags = EEikStatusPaneIsStretchable;  // will be stretched to use available space
                size = 1;   // will be stretched to use available space
                sub_panes =
                    {
                    SPANE_LAYOUT_TREE_NODE
                        {
                        // No pane id set, because this is a set of sub panes
                        // no flags needed - fixed size.
                        size = 28;
                        sub_panes =
                            {
                            SPANE_LAYOUT_TREE_NODE
                                {
                                id = EEikStatusPaneUidTitle;
                                flags = EEikStatusPaneIsStretchable;
                                size = 1;
                                sub_panes = {};
                                },
                            SPANE_LAYOUT_TREE_NODE
                                {
                                id = EEikStatusPaneUidIndic;
                                // no flags needed - fixed size.
                                size = 12;
                                sub_panes = {};
                                }
                            };
                        },
                    SPANE_LAYOUT_TREE_NODE
                        {
                        id = EEikStatusPaneUidNavi;
                        // no flags needed - fixed size.
                        size = 16;
                        sub_panes = {};
                        }
                    };
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidBattery;
                // no flags needed - fixed size.
                size = 12;
                sub_panes = {};
                }
            };
        };
    }

RESOURCE STATUS_PANE_LAYOUT r_avkon_status_pane_layout_vt_mirrored
    {
    position = EEikStatusPaneLayoutAknLafDefined;
    pane_tree = SPANE_LAYOUT_TREE_NODE
        {
        // No pane id, this is the root of the pane tree
        // Flags are ignored at the top level - size is always fixed
        size = 44;      // This is the total height of this layout
        sub_panes =
            {
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidBattery;
                // no flags needed - fixed size.
                size = 12;
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                // No pane id set, because this is a set of sub panes
                flags = EEikStatusPaneIsStretchable;  // will be stretched to use available space
                size = 1;   // will be stretched to use available space
                sub_panes =
                    {
                    SPANE_LAYOUT_TREE_NODE
                        {
                        // No pane id set, because this is a set of sub panes
                        // no flags needed - fixed size.
                        size = 28;
                        sub_panes =
                            {
                            SPANE_LAYOUT_TREE_NODE
                                {
                                id = EEikStatusPaneUidIndic;
                                // no flags needed - fixed size.
                                size = 12;
                                sub_panes = {};
                                },
                            SPANE_LAYOUT_TREE_NODE
                                {
                                id = EEikStatusPaneUidTitle;
                                flags = EEikStatusPaneIsStretchable;
                                size = 1;
                                sub_panes = {};
                                }
                            };
                        },
                    SPANE_LAYOUT_TREE_NODE
                        {
                        id = EEikStatusPaneUidNavi;
                        // no flags needed - fixed size.
                        size = 16;
                        sub_panes = {};
                        }
                    };
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidContext;
                // no flags needed - fixed size.
                size = 51;
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidSignal;
                // no flags needed - fixed size.
                size = 12;
                sub_panes = {};
                }
            };
        };
    }

RESOURCE TBUF r_avkon_softkey_cancel
    {
    buf = text_softkey_cancel;
    }

RESOURCE NUMBER_INT16 r_avkon_sct_fullwidthspace_symbol
    {
    value = KPuaCodeFullWidthSpaceSymbol;  //qtn_sct_fullwidthspace_symbol
    }

RESOURCE TBUF r_avkon_special_characters_pictograph
    {
    buf = qtn_japin_prmpt_select_pictograph;
    }

RESOURCE TBUF r_avkon_special_characters_half_symbol
    {
    buf = qtn_pop_up_select_half_symbol;
    }

RESOURCE TBUF r_avkon_special_characters_full_symbol
    {
    buf = qtn_pop_up_select_full_symbol;
    }

RESOURCE DIALOG r_avkon_japanese_predictive_activated_note
    {
    flags=EEikDialogFlagNoDrag | EEikDialogFlagNoTitleBar | EEikDialogFlagCbaButtons;
    buttons=r_avkon_softkeys_empty;
    items=
        {
        DLG_LINE
            {
            type=EAknCtNote;
            id=EGeneralNote;
            control= AVKON_NOTE
                {
                layout = EGeneralLayout;
                singular_label = qtn_japin_conf_predictive_on;
                animation = r_qgn_note_ok_anim;
                };
            }
        };
    }


RESOURCE DIALOG r_avkon_japanese_predictive_deactivated_note
    {
    flags=EEikDialogFlagNoDrag | EEikDialogFlagNoTitleBar | EEikDialogFlagCbaButtons;
    buttons=r_avkon_softkeys_empty;
    items=
        {
        DLG_LINE
            {
            type=EAknCtNote;
            id=EGeneralNote;
            control= AVKON_NOTE
                {
                layout = EGeneralLayout;
                singular_label = qtn_japin_conf_predictive_off;
                animation = r_qgn_note_ok_anim;
                };
            }
        };
    }

RESOURCE STATUS_PANE_LAYOUT r_avkon_status_pane_layout_usual_with_battery_pane
    {
    position = EEikStatusPaneLayoutAknLafDefined;
    pane_tree = SPANE_LAYOUT_TREE_NODE
        {
        // No pane id, this is the root of the pane tree
        // Flags are ignored at the top level - size is always fixed
        size = 44;      // This is the total height of this layout
        sub_panes =
            {
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidSignal;
                // no flags needed - fixed size.
                size = 12;
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidContext;
                // no flags needed - fixed size.
                size = 44;
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                // No pane id set, because this is a set of sub panes
                flags = EEikStatusPaneIsStretchable;  // will be stretched to use available space
                size = 1;   // will be stretched to use available space
                sub_panes =
                    {
                    SPANE_LAYOUT_TREE_NODE
                        {
                        // No pane id set, because this is a set of sub panes
                        // no flags needed - fixed size.
                        size = 28;
                        sub_panes =
                            {
                            SPANE_LAYOUT_TREE_NODE
                                {
                                id = EEikStatusPaneUidTitle;
                                flags = EEikStatusPaneIsStretchable;
                                size = 1;
                                sub_panes = {};
                                },
                            SPANE_LAYOUT_TREE_NODE
                                {
                                id = EEikStatusPaneUidIndic;
                                // no flags needed - fixed size.
                                size = 12;
                                sub_panes = {};
                                }
                            };
                        },
                    SPANE_LAYOUT_TREE_NODE
                        {
                        id = EEikStatusPaneUidNavi;
                        // no flags needed - fixed size.
                        size = 16;
                        sub_panes = {};
                        }
                    };
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidBattery;
                // no flags needed - fixed size.
                size = 12;
                sub_panes = {};
                }

            };
        };
    }


RESOURCE VOLUME r_avkon_popup_volume_indicator
    {
    flags=EPopupVolumeControl;
    value=1;
    bmpfile=AVKON_BITMAP_FILE;
    bmpid=EMbmAvkonQgn_indi_earpiece;
    bmpmask=EMbmAvkonQgn_indi_earpiece_mask;
    }

 RESOURCE DIALOG r_avkon_cdma_sp_sms_special_character_table_dialog
     {
     flags = EGeneralQueryFlags | EEikDialogFlagNoBorder |
 EEikDialogFlagNoShadow;
     buttons = r_avkon_softkeys_select_cancel__select;
     items=
         {
         DLG_LINE
             {
             type = EAknCtPopupHeadingPane;
             id = EAknSCTQueryHeadingId;
             control = AVKON_HEADING
                 {
                 label = qtn_pop_up_select_character;
                 headinglayout = r_avkon_sct_list_heading_pane;
                 };
             },
         DLG_LINE
             {
             type = EAknCtSpecialCharacterMap;
             id = EAknSCTQueryContentId;
             control = SPECIAL_CHAR_TABLE
                 {
                 contents =
                     {
                     SCT_CHAR_SET
                         {
                         id = EAknSCTLowerCase;
                         chars = qtn_sct_cdma_sp_sms_speci_chars_lower;
                         },
                     SCT_CHAR_SET
                         {
                         id = EAknSCTUpperCase;
                         chars =  qtn_sct_cdma_sp_sms_speci_chars_upper;
                         }
                     };
                 };
             }
         };
     }


 RESOURCE TBUF r_avkon_popup_volume_muted
    {
    buf = qtn_avkon_popup_volume_muted;
    }


RESOURCE BMPANIM_DATA r_qgn_graf_wait_bar_increm_anim
    {
    frameinterval = 100;
    playmode = EAknBitmapAnimationPlayModeCycle;
    bmpfile = avkon_bitmap_file;
    frames = r_qgn_graf_wait_bar_increm_anim_frames;
    }

RESOURCE ARRAY r_qgn_graf_wait_bar_increm_anim_frames
    {
    items=
        {
        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_graf_bar_wait_increm; maskid=EMbmAvkonQgn_graf_bar_wait_1_mask;},
        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_graf_bar_wait_increm_02; maskid=EMbmAvkonQgn_graf_bar_wait_2_mask;},
        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_graf_bar_wait_increm_03; maskid=EMbmAvkonQgn_graf_bar_wait_3_mask;},
        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_graf_bar_wait_increm_04; maskid=EMbmAvkonQgn_graf_bar_wait_4_mask;},
        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_graf_bar_wait_increm_05; maskid=EMbmAvkonQgn_graf_bar_wait_5_mask;},
        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_graf_bar_wait_increm_06; maskid=EMbmAvkonQgn_graf_bar_wait_6_mask;},
        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_graf_bar_wait_increm_07; maskid=EMbmAvkonQgn_graf_bar_wait_6_mask;},
        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_graf_bar_wait_increm_08; maskid=EMbmAvkonQgn_graf_bar_wait_6_mask;},
        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_graf_bar_wait_increm_09; maskid=EMbmAvkonQgn_graf_bar_wait_6_mask;},
        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_graf_bar_wait_increm_10; maskid=EMbmAvkonQgn_graf_bar_wait_6_mask;},
        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_graf_bar_wait_increm_11; maskid=EMbmAvkonQgn_graf_bar_wait_6_mask;},
        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_graf_bar_wait_increm_12; maskid=EMbmAvkonQgn_graf_bar_wait_6_mask;},
        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_graf_bar_wait_increm_13; maskid=EMbmAvkonQgn_graf_bar_wait_6_mask;},
        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_graf_bar_wait_increm_14; maskid=EMbmAvkonQgn_graf_bar_wait_6_mask;},
        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_graf_bar_wait_increm_15; maskid=EMbmAvkonQgn_graf_bar_wait_6_mask;},
        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_graf_bar_wait_increm_16; maskid=EMbmAvkonQgn_graf_bar_wait_6_mask;},
        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_graf_bar_wait_increm_17; maskid=EMbmAvkonQgn_graf_bar_wait_6_mask;},
        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_graf_bar_wait_increm_18; maskid=EMbmAvkonQgn_graf_bar_wait_6_mask;},
        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_graf_bar_wait_increm_19; maskid=EMbmAvkonQgn_graf_bar_wait_7_mask;}
        };
    }

RESOURCE BMPANIM_DATA r_qgn_graf_wait_bar_idle_anim
    {
    frameinterval = 100;
    playmode = EAknBitmapAnimationPlayModeCycle;
    bmpfile = avkon_bitmap_file;
    frames = r_qgn_graf_wait_bar_idle_anim_frames;
    }


RESOURCE ARRAY r_qgn_graf_wait_bar_idle_anim_frames
    {
    items=
        {
        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_graf_bar_wait_idle; maskid=EMbmAvkonQgn_graf_bar_wait_1_mask;}
        };
    }

RESOURCE BMPANIM_DATA r_qgn_graf_wait_bar_increm_idle_anim
    {
    frameinterval = 100;
    playmode = EAknBitmapAnimationPlayModeCycle;
    bmpfile = avkon_bitmap_file;
    frames = r_qgn_graf_wait_bar_increm_idle_anim_frames;
    }

RESOURCE ARRAY r_qgn_graf_wait_bar_increm_idle_anim_frames
    {
    items=
        {
        BMPANIM_FRAME {bmpid=EMbmAvkonQgn_graf_bar_wait_increm_idle; maskid=EMbmAvkonQgn_graf_bar_wait_1_mask;}
        };
    }


RESOURCE STATUS_PANE_LAYOUT r_avkon_stacon_pane_layout_usual_softkeys_right
    {
    position = EEikStatusPaneLayoutAknLafDefined;
    pane_tree = SPANE_LAYOUT_TREE_NODE
        {
        size = 1;      // Dummy size, real size comes from AknLayout
        sub_panes =
            {
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidSignal;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidTitle;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidIndic;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidNavi;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidDigitalClock;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidBattery;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                }
            };
        };
    }

RESOURCE STATUS_PANE_LAYOUT r_avkon_stacon_pane_layout_usual_softkeys_left
    {
    position = EEikStatusPaneLayoutAknLafDefined;
    pane_tree = SPANE_LAYOUT_TREE_NODE
        {
        size = 1;      // Dummy size, real size comes from AknLayout
        sub_panes =
            {
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidSignal;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidTitle;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidIndic;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidNavi;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidDigitalClock;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidBattery;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                }
            };
        };
    }


RESOURCE STATUS_PANE_LAYOUT r_avkon_stacon_pane_layout_idle_softkeys_right
    {
    position = EEikStatusPaneLayoutAknLafDefined;
    pane_tree = SPANE_LAYOUT_TREE_NODE
        {
        size = 1;      // Dummy size, real size comes from AknLayout
        sub_panes =
            {
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidSignal;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidTitle;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidIndic;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidNavi;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidEmpty;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidBattery;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                }
            };
        };
    }

RESOURCE STATUS_PANE_LAYOUT r_avkon_stacon_pane_layout_idle_softkeys_left
    {
    position = EEikStatusPaneLayoutAknLafDefined;
    pane_tree = SPANE_LAYOUT_TREE_NODE
        {
        size = 1;      // Dummy size, real size comes from AknLayout
        sub_panes =
            {
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidSignal;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidTitle;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidIndic;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidNavi;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidEmpty;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidBattery;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                }
            };
        };
    }



RESOURCE STATUS_PANE_LAYOUT r_avkon_stacon_pane_layout_empty_softkeys_right
    {
    position = EEikStatusPaneLayoutAknLafDefined;
    pane_tree = SPANE_LAYOUT_TREE_NODE
        {
        // No pane id, this is the root of the pane tree
        // Flags are ignored at the top level - size is always fixed
        size = 0;       // This is the total height of this layout
        sub_panes = {};  // No any sub-panes
        };
    }

RESOURCE STATUS_PANE_LAYOUT r_avkon_stacon_pane_layout_empty_softkeys_left
    {
    position = EEikStatusPaneLayoutAknLafDefined;
    pane_tree = SPANE_LAYOUT_TREE_NODE
        {
        // No pane id, this is the root of the pane tree
        // Flags are ignored at the top level - size is always fixed
        size = 0;       // This is the total height of this layout
        sub_panes = {};  // No any sub-panes
        };
    }

RESOURCE DIALOG r_avkon_special_character_table_dialog_for_zhuyin_symbol_input
    {
    flags = EGeneralQueryFlags | EEikDialogFlagNoBorder | EEikDialogFlagNoShadow;
    buttons = r_avkon_softkeys_select_cancel__select;
    items=
        {
        DLG_LINE
            {
            type = EAknCtPopupHeadingPane;
            id = EAknSCTQueryHeadingId;
            control = AVKON_HEADING
                {
                label = qtn_pop_up_select_character;
                headinglayout = r_avkon_sct_list_heading_pane;
                };
            },
        DLG_LINE
            {
            type = EAknCtSpecialCharacterMap;
            id = EAknSCTQueryContentId;
            control = SPECIAL_CHAR_TABLE
                {
                contents =
                    {
                    SCT_CHAR_SET
                        {
                        id = EAknSCTUpperCase;
                        chars = text_chi_input_star_key qtn_chi_star_zhuyin_tonemarks;
                        },
                    SCT_CHAR_SET
                        {
                        id = EAknSCTLowerCase;
                        chars = text_chi_input_star_key2;
                        }
                    };
                };
            }
        };
    }

RESOURCE CBA r_avkon_softkeys_other_quit
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyOther; txt = text_softkey_other;},
        CBA_BUTTON {id=EAknSoftkeyQuit; txt = text_softkey_quit; }
        };
    }

// -----------------------------------------------------------------------------
//
// r_avkon_special_characters_pictograph1/2
// Special character table query prompt text for pictograph1/2.
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_avkon_special_characters_pictograph1
    {
    buf = qtn_japin_prmpt_select_pictograph1;
    }

RESOURCE TBUF r_avkon_special_characters_pictograph2
    {
    buf = qtn_japin_prmpt_select_pictograph2;
    }


RESOURCE STATUS_PANE_LAYOUT r_avkon_status_pane_layout_usual_flat
    {
    position = EEikStatusPaneLayoutAknLafDefined;
    pane_tree = SPANE_LAYOUT_TREE_NODE
        {
        size = 1;      // Dummy size, real size comes from AknLayout
        sub_panes =
            {
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidSignal;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidTitle;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidIndic;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidNavi;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
#ifndef __SERIES60_31__
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidDigitalClock;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
#endif
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidBattery;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                }
            };
        };
    }


RESOURCE STATUS_PANE_LAYOUT r_avkon_status_pane_layout_idle_flat
    {
    position = EEikStatusPaneLayoutAknLafDefined;
    pane_tree = SPANE_LAYOUT_TREE_NODE
        {
        size = 1;      // Dummy size, real size comes from AknLayout
        sub_panes =
            {
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidSignal;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidTitle;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidIndic;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidNavi;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidDigitalClock;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidBattery;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                }
            };
        };
    }

// -----------------------------------------------------------------------------
//
// softkeys for toolbar and toolbar items
//
// -----------------------------------------------------------------------------
//
RESOURCE CBA r_avkon_softkeys_edit_done
    {
    buttons =
        {
        CBA_BUTTON{id=EAknSoftkeyEdit; txt= text_softkey_edit; },
        CBA_BUTTON{id=EAknSoftkeyDone; txt= text_softkey_done; }
        };
    }

RESOURCE CBA r_avkon_softkeys_open_done
    {
    buttons =
        {
        CBA_BUTTON{id=EAknSoftkeyOpen; txt= text_softkey_open; },
        CBA_BUTTON{id=EAknSoftkeyDone; txt= text_softkey_done; }
        };
    }

RESOURCE CBA r_avkon_softkeys_select_done
    {
    buttons =
        {
        CBA_BUTTON{id=EAknSoftkeySelect; txt= text_softkey_select; },
        CBA_BUTTON{id=EAknSoftkeyDone; txt= text_softkey_done; }
        };
    }

//
// CHINESE INPUT METHOD SUBMENUS
//

RESOURCE MENU_PANE r_avkon_input_mode_sub_menu
    {
    items=
        {
        MENU_ITEM { command=EChinFepCmdModePinyin; txt=qtn_chi_sub_input_pinyin; },
        MENU_ITEM { command=EChinFepCmdModeZhuyin; txt=qtn_chi_sub_input_zhuyin; },
        MENU_ITEM { command=EChinFepCmdModeStroke; txt=qtn_chi_sub_input_stroke; },
        MENU_ITEM { command=EChinFepCmdModeCangJie; txt=qtn_chi_sub_input_cangjie; },
        MENU_ITEM { command=EAknCmdEditModeLatinText; txt=qtn_chi_sub_input_english; },
        MENU_ITEM { command=EChinFepCmdModeZhuyinFind; txt=qtn_chi_sub_find_zhuyin_symbol; },
        MENU_ITEM { command=EChinFepCmdModeStrokeFind; txt=qtn_chi_sub_find_stroke_symbol; }
        };
    }

// -----------------------------------------------------------------------------
//
// r_avkon_special_characters_pictograph1/2
// CangJie Option Dialog resource
//
// -----------------------------------------------------------------------------
//

RESOURCE ARRAY r_avkon_cangjie_options_lbx
    {
    items =
        {
        LBUF
            {
            txt = qtn_chi_option_normal_cangjie;
            },
        LBUF
            {
            txt = qtn_chi_option_easy_cangjie;
            },
        LBUF
            {
            txt = qtn_chi_option_advanced_cangjie;
            }
        };
    }

RESOURCE LISTBOX r_avkon_cangjie_options
    {
    array_id = r_avkon_cangjie_options_lbx;
    flags = EEikListBoxMultipleSelection;
    }

RESOURCE AVKON_SETTING_PAGE r_avkon_cangjie_mode_options_setting_page
    {
    number = EAknSettingPageNoOrdinalDisplayed;
    label = qtn_chi_heading_cangjie_mode;
    softkey_resource = r_avkon_softkeys_ok_cancel;
    type = EAknSetListBox;
    editor_resource_id = r_avkon_cangjie_options;
    }

RESOURCE CBA r_avkon_softkeys_send_cancel
    {
    buttons =
        {
        CBA_BUTTON{id=EAknSoftkeySend; txt= text_softkey_send; },
        CBA_BUTTON{id=EAknSoftkeyCancel; txt= text_softkey_cancel; }
        };
    }

RESOURCE CBA r_avkon_softkeys_edit_close
    {
    buttons =
        {
        CBA_BUTTON{id=EAknSoftkeyEdit; txt= text_softkey_edit; },
        CBA_BUTTON{id=EAknSoftkeyClose; txt= text_softkey_close; }
        };
    }

RESOURCE CBA r_avkon_softkeys_open_close
    {
    buttons =
        {
        CBA_BUTTON{id=EAknSoftkeyOpen; txt= text_softkey_open; },
        CBA_BUTTON{id=EAknSoftkeyClose; txt= text_softkey_close; }
        };
    }

RESOURCE CBA r_avkon_softkeys_select_close
    {
    buttons =
        {
        CBA_BUTTON{id=EAknSoftkeySelect; txt= text_softkey_select; },
        CBA_BUTTON{id=EAknSoftkeyClose; txt= text_softkey_close; }
        };
    }

RESOURCE CBA r_avkon_softkeys_view_empty
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyView; txt=text_softkey_view; },
        CBA_BUTTON {id=EAknSoftkeyEmpty; txt=text_softkey_empty;},
        CBA_BUTTON {id=EAknSoftkeyView; txt=text_softkey_view; }
        };
    }

RESOURCE STATUS_PANE_LAYOUT r_avkon_widescreen_pane_layout_usual
    {
    position = EEikStatusPaneLayoutAknLafDefined;
    pane_tree = SPANE_LAYOUT_TREE_NODE
        {
        size = 1;      // Dummy size, real size comes from AknLayout
        sub_panes =
            {
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidTitle;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidNavi;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidIndic;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidSignal;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidDigitalClock;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidBattery;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidEmpty;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                }
            };
        };
    }

RESOURCE TBUF r_avkon_ihf_activated_confirmation_note_text
	{
		buf = qtn_hf_conf_activate;
	}

RESOURCE TBUF r_avkon_ihf_deactivated_confirmation_note_text
	{
		buf = qtn_hf_conf_earpiece;
	}


RESOURCE DIALOG r_colour_selection_grid_with_none_field
    {
    flags=EEikDialogFlagWait | EEikDialogFlagNotifyEsc| EEikDialogFlagCbaButtons |
          EEikDialogFlagNoDrag | EEikDialogFlagNoBorder;
    buttons=r_avkon_softkeys_ok_cancel;
    items=
        {
        DLG_LINE
            {
            type = EAknCtPopupHeadingPane;
            id = EColourGridPopup;
            control = AVKON_HEADING
                {
                label = qtn_select_colour_prompt;
                headinglayout = r_avkon_list_heading_pane;
                };
            },
        DLG_LINE
            {
            type = EAknCtColourSelectionGridDialog;
            id   = ECtrlGridType;
            control = AVKON_COLOUR_SELECTION_GRID
                {
                nonetext = qtn_select_colour_none;
                gridcontrol = GRID
                    {
                    style = r_colour_sel_grid_style_none;
                    flags = EEikDlgItemTakesEnterKey;
                    height  = 4;
                    width = 4 ;
                    };
                };
            }
        };
    }

RESOURCE DIALOG r_colour_selection_grid_without_none_field
    {
    flags=EEikDialogFlagWait | EEikDialogFlagNotifyEsc| EEikDialogFlagCbaButtons |
          EEikDialogFlagNoDrag | EEikDialogFlagNoBorder;
    buttons=r_avkon_softkeys_ok_cancel;
    items=
        {
        DLG_LINE
            {
            type = EAknCtPopupHeadingPane;
            id = EColourGridPopup;
            control = AVKON_HEADING
                {
                label = qtn_select_colour_prompt;
                headinglayout = r_avkon_list_heading_pane;
                };
            },
        DLG_LINE
            {
            type = EAknCtColourSelectionGridDialog;
            id   = ECtrlGridType;
            control = AVKON_COLOUR_SELECTION_GRID
                {
                gridcontrol = GRID
                    {
                    style = r_colour_sel_grid_style_none;
                    flags = EEikDlgItemTakesEnterKey;
                    height  = 4;
                    width = 4 ;
                    };
                };
            }
        };
    }

RESOURCE SPECIAL_CHAR_TABLE r_avkon_menu_sct_row_default_contents
    {
    contents =
        {
        SCT_CHAR_SET
            {
            id = EAknSCTLowerCase;
            chars = qtn_sct_special_characters_lower;
            },
        SCT_CHAR_SET
            {
            id = EAknSCTUpperCase;
            chars = qtn_sct_special_characters_upper;
            },
        SCT_CHAR_SET
            {
            id = EAknSCTHalfCase;
            chars = qtn_sct_special_characters_halfwidth;
            },
        SCT_CHAR_SET
            {
            id = EAknSCTFullCase;
            chars = qtn_sct_special_characters_fullwidth1;
            },
        SCT_CHAR_SET
            {
            id = EAknSCTFullCase;
            chars = qtn_sct_special_characters_fullwidth2;
            },
        SCT_CHAR_SET
            {
            id = EAknSCTQwerty;
            chars = qtn_sct_special_characters_qwerty;
            }
        };
    }

RESOURCE TBUF r_akn_locked_memory_card_not_supported
	{
	buf = qtn_memc_locked_not_supported;
	}

RESOURCE CLOCK r_avkon_status_pane_digital_clock
    {
    }

RESOURCE AVKON_UNUSED r_avkon_status_pane_empty
    {
    }
RESOURCE STATUS_PANE_LAYOUT r_avkon_status_pane_layout_usual_ext
    {
    position = EEikStatusPaneLayoutAknLafDefined;
    pane_tree = SPANE_LAYOUT_TREE_NODE
        {
        size = 1;      // Dummy size, real size comes from AknLayout
        sub_panes =
            {
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidSignal;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidTitle;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidIndic;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidNavi;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidBattery;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidDigitalClock;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidEmpty;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                }
            };
        };
    }

RESOURCE DIALOG r_avkon_note_conf_copied
    {
    flags=EEikDialogFlagNoDrag | EEikDialogFlagNoTitleBar | EEikDialogFlagCbaButtons;
    buttons=r_avkon_softkeys_empty;
    items=
        {
        DLG_LINE
            {
            type=EAknCtNote;
            id=EGeneralNote;
            control= AVKON_NOTE
                {
                layout = EGeneralLayout;
                singular_label = qtn_conf_copied;
                animation = r_qgn_note_ok_anim;
                };
            }
        };
    }

RESOURCE TBUF r_qtn_gen_app_shell_tooltip
	{
	buf = qtn_gen_app_shell_tooltip;
	}

RESOURCE TBUF r_qtn_gen_idle_view_tooltip
	{
	buf = qtn_gen_idle_view_tooltip;
	}

RESOURCE TBUF r_qtn_gen_dialler_icon_tooltip
	{
	buf = qtn_gen_dialler_icon_tooltip;
	}

RESOURCE TBUF r_qtn_gen_help_tooltip
	{
	buf = qtn_gen_help_tooltip;
	}

RESOURCE TBUF r_qtn_gen_rotate_icon_tooltip
	{
	buf = qtn_gen_rotate_icon_tooltip;
	}

RESOURCE TBUF r_qtn_gen_input_activation_tooltip
	{
	buf = qtn_gen_input_activation_tooltip;
	}

RESOURCE TBUF r_qtn_gen_toolbar_icon_tooltip
	{
	buf = qtn_gen_toolbar_icon_tooltip;
	}

RESOURCE TBUF r_qtn_gen_fast_swapper_tooltip
	{
	buf = qtn_gen_fast_swapper_tooltip;
	}

RESOURCE TBUF r_qtn_gen_info_pop_up_dimmed_item
	{
	buf = qtn_gen_info_pop_up_dimmed_item;
	}

RESOURCE TBUF r_qtn_language_rfc3066_tag
    {
    buf = qtn_language_rfc3066_tag;
    }
RESOURCE MENU_BAR r_avkon_peninput_option_menu_bar
{
    titles =
    {
    MENU_TITLE
        {
        txt = "";
        menu_pane = r_avkon_touch_touchinput_menu;
        }
     };
}
RESOURCE MENU_PANE r_avkon_peninput_option_menu
    {
    items=
        {
        // Japanese
        MENU_ITEM { command=EPenInputJpCmdFullWidth; flags=EEikMenuItemDimmed; txt=qtn_japin_edit_full_width; },
        MENU_ITEM { command=EPenInputJpCmdHalfWidth; flags=EEikMenuItemDimmed; txt=qtn_japin_edit_half_width; },
        MENU_ITEM { cascade=r_avkon_peninput_option_japin_tin_convert_on_submenu; command=EPenInputJpCmdConversionOn; flags=EEikMenuItemDimmed; txt=qtn_japin_tin_convert; },
        MENU_ITEM { cascade=r_avkon_peninput_option_japin_tin_convert_off_submenu; command=EPenInputJpCmdConversionOff; flags=EEikMenuItemDimmed; txt=qtn_japin_tin_convert; },
        MENU_ITEM { cascade=r_avkon_peninput_option_japin_edit_predict_on_submenu; command=EPenInputJpCmdPredictiveOn; flags=EEikMenuItemDimmed; txt=qtn_japin_edit_predict; },
        MENU_ITEM { cascade=r_avkon_peninput_option_japin_edit_predict_off_submenu; command=EPenInputJpCmdPredictiveOff; flags=EEikMenuItemDimmed; txt=qtn_japin_edit_predict; },
        // common
        MENU_ITEM { command=EPenInputCmdCut;txt=qtn_editing_shift_menu_cut; },
        MENU_ITEM { command=EPenInputCmdCopy; txt=qtn_editing_shift_menu_copy; },
        MENU_ITEM { command=EPenInputCmdPaste; txt=qtn_editing_shift_menu_paste; },
        MENU_ITEM { command=EPenInputCmdSetting; txt=qtn_tin_option_menu_settings; },
        // Japanese
        MENU_ITEM { command=EPenInputJpCmdSaveWord; flags=EEikMenuItemDimmed; txt=qtn_japin_edit_register_word; },
        MENU_ITEM { command=EPenInputJpCmdKutenCode; flags=EEikMenuItemDimmed; txt=qtn_japin_edit_kuten_code; },
        // common
        MENU_ITEM { command=EPenInputCmdHwrTraining; txt=qtn_tin_option_menu_training;},
        MENU_ITEM { command=EAknCmdInputLanguage; txt=text_pup_option_input_language;},
        MENU_ITEM { command=EFepInputCmdHelp; txt=qtn_tin_option_menu_help; }
        };
    }

RESOURCE STATUS_PANE_LAYOUT r_avkon_status_pane_layout_idle_ext
    {
    position = EEikStatusPaneLayoutAknLafDefined;
    pane_tree = SPANE_LAYOUT_TREE_NODE
        {
        size = 1;      // Dummy size, real size comes from AknLayout
        sub_panes =
            {
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidSignal;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidTitle;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidIndic;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidNavi;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidBattery;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidClock;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidEmpty;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                }
            };
        };
    }


// new CBA resources for middle softkey
RESOURCE CBA r_avkon_softkeys_select_cancel__select
    {
    buttons =
        {
        // This prevents EAknSoftkeySelect operating on a long keypress
        AVKON_CBA_BUTTON{id=EAknSoftkeySelect; longpressid=0; txt= text_softkey_select; },
        CBA_BUTTON{id=EAknSoftkeyCancel; txt= text_softkey_cancel; },
        AVKON_CBA_BUTTON{id=EAknSoftkeySelect; longpressid=0; txt= qtn_msk_select; }
        };
    }

RESOURCE CBA r_avkon_softkeys_select_back__select
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeySelect; txt= text_softkey_select;},
        CBA_BUTTON {id=EEikBidCancel; txt=text_softkey_back;},
        CBA_BUTTON {id=EAknSoftkeySelect; txt= qtn_msk_select;}
        };
    }

RESOURCE CBA r_avkon_softkeys_ok_cancel__mark
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyOk; txt=text_softkey_ok;},
        CBA_BUTTON {id=EAknSoftkeyCancel; txt= text_softkey_cancel;},
        CBA_BUTTON {id=EAknSoftkeyMark; txt=qtn_msk_mark;}
        };
    }

RESOURCE CBA r_avkon_softkeys_ok_cancel__ok
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyOk; txt=text_softkey_ok;},
        CBA_BUTTON {id=EAknSoftkeyCancel; txt= text_softkey_cancel;},
        CBA_BUTTON {id=EAknSoftkeyOk; txt=text_softkey_ok;}
        };
    }

RESOURCE CBA r_avkon_softkeys_ok_empty__ok
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyOk; txt=text_softkey_ok; },
        CBA_BUTTON {txt=text_softkey_empty;},
        CBA_BUTTON {id=EAknSoftkeyOk; txt=text_softkey_ok; }
        };
    }

RESOURCE TBUF r_qtn_msk_activate
    {
    buf = qtn_msk_activate;
    }

RESOURCE TBUF r_qtn_msk_add
    {
    buf = qtn_msk_add;
    }

RESOURCE TBUF r_qtn_msk_change
    {
    buf = qtn_msk_change;
    }

RESOURCE TBUF r_qtn_msk_collapse
    {
    buf = qtn_msk_collapse;
    }

RESOURCE TBUF r_qtn_msk_connect
    {
    buf = qtn_msk_connect;
    }

RESOURCE TBUF r_qtn_msk_delete
    {
    buf = qtn_msk_delete;
    }

RESOURCE TBUF r_qtn_msk_edit
    {
    buf = qtn_msk_edit;
    }

RESOURCE TBUF r_qtn_msk_expand
    {
    buf = qtn_msk_expand;
    }

RESOURCE TBUF r_qtn_msk_insert
    {
    buf = qtn_msk_insert;
    }

RESOURCE TBUF r_qtn_msk_mark
    {
    buf = qtn_msk_mark;
    }

RESOURCE TBUF r_qtn_msk_new
    {
    buf = qtn_msk_new;
    }

RESOURCE TBUF r_qtn_msk_open
    {
    buf = qtn_msk_open;
    }

RESOURCE TBUF r_qtn_msk_save
    {
    buf = qtn_msk_save;
    }

RESOURCE TBUF r_qtn_msk_select
    {
    buf = qtn_msk_select;
    }

RESOURCE TBUF r_qtn_msk_unmark
    {
    buf = qtn_msk_unmark;
    }

RESOURCE TBUF r_qtn_msk_view
    {
    buf = qtn_msk_view;
    }

RESOURCE TBUF r_qtn_msk_play
    {
    buf = qtn_msk_play;
    }

RESOURCE TBUF r_qtn_msk_pause
    {
    buf = qtn_msk_pause;
    }

RESOURCE TBUF r_qtn_msk_stop
    {
    buf = qtn_msk_stop;
    }

RESOURCE TBUF r_qtn_msk_send
    {
    buf = qtn_msk_send;
    }

// Warning note text for protected setting item in setting item list
RESOURCE TBUF r_qtn_selec_protected_setting
    {
    buf = qtn_selec_protected_setting;
    }

RESOURCE CBA r_avkon_softkeys_ok_cancel__unmark
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyOk; txt=text_softkey_ok;},
        CBA_BUTTON {id=EAknSoftkeyCancel; txt= text_softkey_cancel;},
        CBA_BUTTON {id=EAknSoftkeyUnmark; txt=qtn_msk_unmark;}
        };
    }

RESOURCE CBA_BUTTON r_avkon_softkey_mark
    {
    id=EAknSoftkeyMark; txt=qtn_msk_mark;
    }

RESOURCE CBA_BUTTON r_avkon_softkey_unmark
    {
    id=EAknSoftkeyUnmark; txt=qtn_msk_unmark;
    }

RESOURCE CBA r_avkon_softkeys_send_cancel__send
    {
    buttons =
        {
        CBA_BUTTON{id=EAknSoftkeySend; txt= text_softkey_send; },
        CBA_BUTTON{id=EAknSoftkeyCancel; txt= text_softkey_cancel; },
        CBA_BUTTON{id=EAknSoftkeySend; txt= qtn_msk_send; }
        };
    }

RESOURCE CBA r_avkon_softkeys_yes_no__yes
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyYes; txt=text_softkey_yes;},
        CBA_BUTTON {id=EAknSoftkeyNo; txt=text_softkey_no;},
        CBA_BUTTON {id=EAknSoftkeyYes; txt=text_softkey_yes;}
        };
    }

RESOURCE CBA r_avkon_softkeys_show_exit__show
    {
    buttons =
        {
        CBA_BUTTON{id=EAknSoftkeyShow  ;txt=text_softkey_show; },
        CBA_BUTTON{id=EAknSoftkeyExit;txt=text_softkey_exit; },
        CBA_BUTTON{id=EAknSoftkeyShow  ;txt=text_softkey_show; }
        };
    }

RESOURCE CBA r_avkon_softkeys_call_cancel__call
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyCall; txt=text_softkey_call;},
        CBA_BUTTON {id=EAknSoftkeyCancel; txt=text_softkey_cancel;},
        CBA_BUTTON {id=EAknSoftkeyCall; txt=text_softkey_call;}
        };
    }

RESOURCE CBA r_avkon_softkeys_read_exit__read
    {
    buttons =
        {
        CBA_BUTTON{id=EAknSoftkeyRead;txt=text_softkey_read; },
        CBA_BUTTON{id=EAknSoftkeyExit;txt=text_softkey_exit; },
        CBA_BUTTON{id=EAknSoftkeyRead;txt=text_softkey_read; }
        };
    }

RESOURCE CBA r_avkon_softkeys_listen_exit__listen
    {
    buttons=
        {
        CBA_BUTTON{id=EAknSoftkeyListen;txt=text_softkey_listen; },
        CBA_BUTTON{id=EAknSoftkeyExit  ;txt=text_softkey_exit; },
        CBA_BUTTON{id=EAknSoftkeyListen;txt=text_softkey_listen; }
        };
    }

RESOURCE CBA r_avkon_softkeys_options_back__select
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyOptions; txt = text_softkey_option;},
        CBA_BUTTON {id=EAknSoftkeyBack; txt = text_softkey_back; },
        AVKON_CBA_BUTTON{id=EAknSoftkeySelect; longpressid=0; txt= qtn_msk_select; }
        };
    }

RESOURCE CBA r_avkon_softkeys_options_done__select
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyOptions; txt = text_softkey_option;},
        CBA_BUTTON {id=EAknSoftkeyDone; txt=text_softkey_done; },
        AVKON_CBA_BUTTON{id=EAknSoftkeySelect; longpressid=0; txt= qtn_msk_select; }
        };
    }

RESOURCE CBA r_avkon_softkeys_options_cancel__select
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyOptions; txt = text_softkey_option;},
        CBA_BUTTON {id=EAknSoftkeyCancel; txt = text_softkey_cancel; },
        AVKON_CBA_BUTTON{id=EAknSoftkeySelect; longpressid=0; txt= qtn_msk_select; }
        };
    }

RESOURCE CBA r_avkon_softkeys_options_exit__select
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyOptions; txt = text_softkey_option;},
        CBA_BUTTON {id=EAknSoftkeyExit; txt = text_softkey_exit; },
        AVKON_CBA_BUTTON{id=EAknSoftkeySelect; longpressid=0; txt= qtn_msk_select; }
        };
    }

RESOURCE BMPANIM_DATA r_bubblemanager_alerting_video_anim
    {
    frameinterval=500; // ms
    playmode=1;
    frames = r_bubblemanager_alerting_video_image_array;
    bmpfile = CALLSTATUS_BITMAP_FILE;
    }

RESOURCE ARRAY r_bubblemanager_alerting_video_image_array
    {
    items=
        {
        BMPANIM_FRAME {
            bmpid=EMbmCallstatusQgn_indi_call_video_callsta_1;
            maskid=EMbmCallstatusQgn_indi_call_video_callsta_1_mask;
               },
        BMPANIM_FRAME {
            bmpid=EMbmCallstatusQgn_indi_call_video_callsta_2;
            maskid=EMbmCallstatusQgn_indi_call_video_callsta_2_mask;
               }
        };
    }

RESOURCE CBA_BUTTON r_avkon_msk_softkey_edit
    {
    id=EAknSoftkeyEdit; txt=qtn_msk_edit;
    }

RESOURCE CBA_BUTTON r_avkon_msk_softkey_change
    {
    id=EAknSoftkeyChange; txt=qtn_msk_change;
    }


RESOURCE MENU_PANE r_avkon_menupane_task_swapper
    {
    items=
        {
        MENU_ITEM {command = EAknCmdTaskSwapper; txt = qtn_options_task_swapper; bmpfile = AVKON_BITMAP_FILE; bmpid = EMbmAvkonQgn_indi_app_open_add; bmpmask = EMbmAvkonQgn_indi_app_open_add_mask;}
        };
    }

RESOURCE CBA r_avkon_softkeys_ok_cancel__select
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyOk; txt=text_softkey_ok;},
        CBA_BUTTON {id=EAknSoftkeyCancel; txt= text_softkey_cancel;},
        CBA_BUTTON {id=EAknSoftkeySelect; txt=qtn_msk_select;}
        };
    }

RESOURCE CBA r_avkon_softkeys_ok_back__ok
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyOk; txt=text_softkey_ok;},
        CBA_BUTTON {id=EAknSoftkeyBack; txt=text_softkey_back;},
        CBA_BUTTON {id=EAknSoftkeyOk; txt=text_softkey_ok;}
        };
    }

RESOURCE TBUF r_qtn_selec_title_swapper
    {
    buf = qtn_selec_title_swapper;
    }

RESOURCE CBA r_avkon_softkeys_select_close__select
    {
    buttons =
        {
        CBA_BUTTON{id=EAknSoftkeySelect; txt=text_softkey_select; },
        CBA_BUTTON{id=EAknSoftkeyClose; txt=text_softkey_close; },
        CBA_BUTTON{id=EAknSoftkeySelect; txt=text_softkey_select; }
        };
    }

RESOURCE ARRAY r_qgn_graf_wait_bar_increm_anim_frames_skinned
    {
    items=
        {
        BMPANIM_FRAME_SKINNED {bmpid=EMbmAvkonQgn_graf_bar_wait_increm;
                               maskid=EMbmAvkonQgn_graf_bar_wait_1_mask;
                               majorskinid=EAknsMajorGeneric;
                               minorskinid=EAknsMinorGenericQgnGrafBarWaitIncrem;},
        BMPANIM_FRAME_SKINNED {bmpid=EMbmAvkonQgn_graf_bar_wait_increm_02;
                               maskid=EMbmAvkonQgn_graf_bar_wait_2_mask;
                               majorskinid=EAknsMajorGeneric;
                               minorskinid=EAknsMinorGenericQgnGrafBarWaitIncrem02;},
        BMPANIM_FRAME_SKINNED {bmpid=EMbmAvkonQgn_graf_bar_wait_increm_03;
                               maskid=EMbmAvkonQgn_graf_bar_wait_3_mask;
                               majorskinid=EAknsMajorGeneric;
                               minorskinid=EAknsMinorGenericQgnGrafBarWaitIncrem03;},
        BMPANIM_FRAME_SKINNED {bmpid=EMbmAvkonQgn_graf_bar_wait_increm_04;
                               maskid=EMbmAvkonQgn_graf_bar_wait_4_mask;
                               majorskinid=EAknsMajorGeneric;
                               minorskinid=EAknsMinorGenericQgnGrafBarWaitIncrem04;},
        BMPANIM_FRAME_SKINNED {bmpid=EMbmAvkonQgn_graf_bar_wait_increm_05;
                               maskid=EMbmAvkonQgn_graf_bar_wait_5_mask;
                               majorskinid=EAknsMajorGeneric;
                               minorskinid=EAknsMinorGenericQgnGrafBarWaitIncrem05;},
        BMPANIM_FRAME_SKINNED {bmpid=EMbmAvkonQgn_graf_bar_wait_increm_06;
                               maskid=EMbmAvkonQgn_graf_bar_wait_6_mask;
                               majorskinid=EAknsMajorGeneric;
                               minorskinid=EAknsMinorGenericQgnGrafBarWaitIncrem06;},
        BMPANIM_FRAME_SKINNED {bmpid=EMbmAvkonQgn_graf_bar_wait_increm_07;
                               maskid=EMbmAvkonQgn_graf_bar_wait_6_mask;
                               majorskinid=EAknsMajorGeneric;
                               minorskinid=EAknsMinorGenericQgnGrafBarWaitIncrem07;},
        BMPANIM_FRAME_SKINNED {bmpid=EMbmAvkonQgn_graf_bar_wait_increm_08;
                               maskid=EMbmAvkonQgn_graf_bar_wait_6_mask;
                               majorskinid=EAknsMajorGeneric;
                               minorskinid=EAknsMinorGenericQgnGrafBarWaitIncrem08;},
        BMPANIM_FRAME_SKINNED {bmpid=EMbmAvkonQgn_graf_bar_wait_increm_09;
                               maskid=EMbmAvkonQgn_graf_bar_wait_6_mask;
                               majorskinid=EAknsMajorGeneric;
                               minorskinid=EAknsMinorGenericQgnGrafBarWaitIncrem09;},
        BMPANIM_FRAME_SKINNED {bmpid=EMbmAvkonQgn_graf_bar_wait_increm_10;
                               maskid=EMbmAvkonQgn_graf_bar_wait_6_mask;
                               majorskinid=EAknsMajorGeneric;
                               minorskinid=EAknsMinorGenericQgnGrafBarWaitIncrem10;},
        BMPANIM_FRAME_SKINNED {bmpid=EMbmAvkonQgn_graf_bar_wait_increm_11;
                               maskid=EMbmAvkonQgn_graf_bar_wait_6_mask;
                               majorskinid=EAknsMajorGeneric;
                               minorskinid=EAknsMinorGenericQgnGrafBarWaitIncrem11;},
        BMPANIM_FRAME_SKINNED {bmpid=EMbmAvkonQgn_graf_bar_wait_increm_12;
                               maskid=EMbmAvkonQgn_graf_bar_wait_6_mask;
                               majorskinid=EAknsMajorGeneric;
                               minorskinid=EAknsMinorGenericQgnGrafBarWaitIncrem12;},
        BMPANIM_FRAME_SKINNED {bmpid=EMbmAvkonQgn_graf_bar_wait_increm_13;
                               maskid=EMbmAvkonQgn_graf_bar_wait_6_mask;
                               majorskinid=EAknsMajorGeneric;
                               minorskinid=EAknsMinorGenericQgnGrafBarWaitIncrem13;},
        BMPANIM_FRAME_SKINNED {bmpid=EMbmAvkonQgn_graf_bar_wait_increm_14;
                               maskid=EMbmAvkonQgn_graf_bar_wait_6_mask;
                               majorskinid=EAknsMajorGeneric;
                               minorskinid=EAknsMinorGenericQgnGrafBarWaitIncrem14;},
        BMPANIM_FRAME_SKINNED {bmpid=EMbmAvkonQgn_graf_bar_wait_increm_15;
                               maskid=EMbmAvkonQgn_graf_bar_wait_6_mask;
                               majorskinid=EAknsMajorGeneric;
                               minorskinid=EAknsMinorGenericQgnGrafBarWaitIncrem15;},
        BMPANIM_FRAME_SKINNED {bmpid=EMbmAvkonQgn_graf_bar_wait_increm_16;
                               maskid=EMbmAvkonQgn_graf_bar_wait_6_mask;
                               majorskinid=EAknsMajorGeneric;
                               minorskinid=EAknsMinorGenericQgnGrafBarWaitIncrem16;},
        BMPANIM_FRAME_SKINNED {bmpid=EMbmAvkonQgn_graf_bar_wait_increm_17;
                               maskid=EMbmAvkonQgn_graf_bar_wait_6_mask;
                               majorskinid=EAknsMajorGeneric;
                               minorskinid=EAknsMinorGenericQgnGrafBarWaitIncrem17;},
        BMPANIM_FRAME_SKINNED {bmpid=EMbmAvkonQgn_graf_bar_wait_increm_18;
                               maskid=EMbmAvkonQgn_graf_bar_wait_6_mask;
                               majorskinid=EAknsMajorGeneric;
                               minorskinid=EAknsMinorGenericQgnGrafBarWaitIncrem18;},
        BMPANIM_FRAME_SKINNED {bmpid=EMbmAvkonQgn_graf_bar_wait_increm_19;
                               maskid=EMbmAvkonQgn_graf_bar_wait_7_mask;
                               majorskinid=EAknsMajorGeneric;
                               minorskinid=EAknsMinorGenericQgnGrafBarWaitIncrem19;}
        };
    }

RESOURCE ARRAY r_qgn_graf_wait_bar_anim_frames_skinned
    {
    items=
        {
        BMPANIM_FRAME_SKINNED {bmpid=EMbmAvkonQgn_graf_bar_wait_1;
                               maskid=EMbmAvkonQgn_graf_bar_wait_1_mask;
                               majorskinid=EAknsMajorGeneric;
                               minorskinid=EAknsMinorGenericQgnGrafBarWait1;},
        BMPANIM_FRAME_SKINNED {bmpid=EMbmAvkonQgn_graf_bar_wait_2;
                               maskid=EMbmAvkonQgn_graf_bar_wait_2_mask;
                               majorskinid=EAknsMajorGeneric;
                               minorskinid=EAknsMinorGenericQgnGrafBarWait2;},
        BMPANIM_FRAME_SKINNED {bmpid=EMbmAvkonQgn_graf_bar_wait_3;
                               maskid=EMbmAvkonQgn_graf_bar_wait_3_mask;
                               majorskinid=EAknsMajorGeneric;
                               minorskinid=EAknsMinorGenericQgnGrafBarWait3;},
        BMPANIM_FRAME_SKINNED {bmpid=EMbmAvkonQgn_graf_bar_wait_4;
                               maskid=EMbmAvkonQgn_graf_bar_wait_4_mask;
                               majorskinid=EAknsMajorGeneric;
                               minorskinid=EAknsMinorGenericQgnGrafBarWait4;},
        BMPANIM_FRAME_SKINNED {bmpid=EMbmAvkonQgn_graf_bar_wait_5;
                               maskid=EMbmAvkonQgn_graf_bar_wait_5_mask;
                               majorskinid=EAknsMajorGeneric;
                               minorskinid=EAknsMinorGenericQgnGrafBarWait5;},
        BMPANIM_FRAME_SKINNED {bmpid=EMbmAvkonQgn_graf_bar_wait_6;
                               maskid=EMbmAvkonQgn_graf_bar_wait_6_mask;
                               majorskinid=EAknsMajorGeneric;
                               minorskinid=EAknsMinorGenericQgnGrafBarWait6;},
        BMPANIM_FRAME_SKINNED {bmpid=EMbmAvkonQgn_graf_bar_wait_7;
                               maskid=EMbmAvkonQgn_graf_bar_wait_7_mask;
                               majorskinid=EAknsMajorGeneric;
                               minorskinid=EAknsMinorGenericQgnGrafBarWait7;}
        };
    }


RESOURCE ARRAY  r_qgn_note_info_anim_frames_skinned
    {
    items=
        {
        BMPANIM_FRAME_SKINNED {time=1500;
                               bmpid=EMbmAvkonQgn_note_info;
                               maskid=EMbmAvkonQgn_note_info_mask;
                               majorskinid=EAknsMajorAvkon;
                               minorskinid=EAknsMinorQgnNoteInfo;}
        };
    }


RESOURCE ARRAY r_qgn_note_ok_anim_frames_skinned
    {
    items=
        {
        BMPANIM_FRAME_SKINNED {time=750;
                               bmpid=EMbmAvkonQgn_note_ok;
                               maskid=EMbmAvkonQgn_note_ok_mask;
                               majorskinid=EAknsMajorAvkon;
                               minorskinid=EAknsMinorQgnNoteOk;},
        BMPANIM_FRAME_SKINNED {time=750;
                               bmpid=EMbmAvkonQgn_note_ok;
                               maskid=EMbmAvkonQgn_note_ok_mask;
                               majorskinid=EAknsMajorAvkon;
                               minorskinid=EAknsMinorQgnNoteOk;}
        };
    }


RESOURCE ARRAY r_qgn_note_error_anim_frames_skinned
    {
    items=
        {
        BMPANIM_FRAME_SKINNED {time = 3000;
                               bmpid=EMbmAvkonQgn_note_error;
                               maskid=EMbmAvkonQgn_note_error_mask;
                               majorskinid=EAknsMajorAvkon;
                               minorskinid=EAknsMinorQgnNoteError;}
        };
    }


RESOURCE ARRAY r_qgn_note_warning_anim_frames_skinned
    {
    items=
        {
        BMPANIM_FRAME_SKINNED {time = 3000;
                               bmpid=EMbmAvkonQgn_note_warning;
                               maskid=EMbmAvkonQgn_note_warning_mask;
                               majorskinid=EAknsMajorAvkon;
                               minorskinid=EAknsMinorQgnNoteWarning;}
        };
    }


RESOURCE ARRAY r_qgn_graf_wait_bar_idle_anim_frames_skinned
    {
    items=
        {
        BMPANIM_FRAME_SKINNED {bmpid=EMbmAvkonQgn_graf_bar_wait_idle;
                               maskid=EMbmAvkonQgn_graf_bar_wait_1_mask;
                               majorskinid=EAknsMajorGeneric;
                               minorskinid=EAknsMinorGenericQgnGrafBarWaitIdle;}
        };
    }


RESOURCE ARRAY r_qgn_graf_wait_bar_increm_idle_anim_frames_skinned
    {
    items=
        {
        BMPANIM_FRAME_SKINNED {bmpid=EMbmAvkonQgn_graf_bar_wait_increm_idle;
                               maskid=EMbmAvkonQgn_graf_bar_wait_1_mask;
                               majorskinid=EAknsMajorGeneric;
                               minorskinid=EAknsMinorGenericQgnGrafBarWaitIncremIdle;}
        };
    }

RESOURCE CBA r_avkon_softkeys_next_exit__next
    {
    buttons =
        {
        CBA_BUTTON{id=EAknSoftkeyNext; txt=qtn_softkey_next; },
        CBA_BUTTON{id=EAknSoftkeyExit; txt=text_softkey_exit; },
        CBA_BUTTON{id=EAknSoftkeyNext; txt=qtn_softkey_next; }
        };
    }

RESOURCE CBA r_avkon_softkeys_accept_reject
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyOk; txt=text_softkey_accept;},
        CBA_BUTTON {id=EAknSoftkeyCancel; txt= text_softkey_reject;}
        };
    }



RESOURCE DIALOG r_avkon_special_character_table_dialog_latin_only
    {
    flags = EGeneralQueryFlags | EEikDialogFlagNoBorder | EEikDialogFlagNoShadow;
    buttons = r_avkon_softkeys_select_cancel__select;
    items=
        {
        DLG_LINE
            {
            type = EAknCtPopupHeadingPane;
            id = EAknSCTQueryHeadingId;
            control = AVKON_HEADING
                {
                label = qtn_pop_up_select_character;
                headinglayout = r_avkon_sct_list_heading_pane;
                };
            },
        DLG_LINE
            {
            type = EAknCtSpecialCharacterMap;
            id = EAknSCTQueryContentId;
            control = SPECIAL_CHAR_TABLE
                {
                contents =
                    {
                    SCT_CHAR_SET
                        {
                        id = EAknSCTLowerCase;
                        chars = ".,'?!\"-()"<0x0040>"/:_;+&%*=<>"<0x00A3><0x20AC>"$"<0x00A5><0x00A4>"[]{}\\~^"<0x00A1><0x00BF><0x00A7>"#|"<0x0020><0x2029>;
                        },
                    SCT_CHAR_SET
                        {
                        id = EAknSCTUpperCase;
                        chars = ".,'?!\"-()"<0x0040>"/:_;+&%*=<>"<0x00A3><0x20AC>"$"<0x00A5><0x00A4>"[]{}\\~^"<0x00A1><0x00BF><0x00A7>"#|"<0x0020><0x2029>;
                        },
                    SCT_CHAR_SET
                        {
                        id = EAknSCTHalfCase;
                        chars = qtn_sct_special_characters_halfwidth;
                        },
                    SCT_CHAR_SET
                        {
                        id = EAknSCTFullCase;
                        chars = qtn_sct_special_characters_fullwidth1;
                        },
                    SCT_CHAR_SET
                        {
                        id = EAknSCTFullCase;
                        chars = qtn_sct_special_characters_fullwidth2;
                        },
                    SCT_CHAR_SET
                        {
                        id = EAknSCTQwerty;
                        chars = ".,'?!\"-()"<0x0040>"/:_;+&%*=<>"<0x00A3><0x20AC>"$"<0x00A5><0x00A4>"[]{}\\~^"<0x00A1><0x00BF><0x00A7>"#|";
                        }
                    };
                };
            }
        };
    }

RESOURCE CBA r_avkon_softkeys_ussd_answer_exit__answer
    {
    buttons =
        {
        CBA_BUTTON{id=EAknSoftkeyShow  ;txt=text_softkey_ussd_answer; },
        CBA_BUTTON{id=EAknSoftkeyExit;txt=text_softkey_exit; },
        CBA_BUTTON{id=EAknSoftkeyShow  ;txt=text_softkey_ussd_answer; }
        };
    }

RESOURCE CBA r_avkon_softkeys_hide_cancel__hide
    {
    buttons =
        {
        CBA_BUTTON {id = EAknSoftkeyHide;   txt = qtn_softkey_hide;},
        CBA_BUTTON {id = EAknSoftkeyCancel; txt = text_softkey_cancel;},
        CBA_BUTTON {id = EAknSoftkeyHide;   txt = qtn_msk_hide;}
        };
    }

RESOURCE DIALOG r_avkon_special_character_table_dialog_chinese
    {
    flags = EGeneralQueryFlags | EEikDialogFlagNoBorder | EEikDialogFlagNoShadow;
    buttons = r_avkon_softkeys_select_cancel__select;
    items=
        {
        DLG_LINE
            {
            type = EAknCtPopupHeadingPane;
            id = EAknSCTQueryHeadingId;
            control = AVKON_HEADING
                {
                label = qtn_pop_up_select_character;
                headinglayout = r_avkon_sct_list_heading_pane;
                };
            },
        DLG_LINE
            {
            type = EAknCtSpecialCharacterMap;
            id = EAknSCTQueryContentId;
            control = SPECIAL_CHAR_TABLE
                {
                contents =
                    {
                    SCT_CHAR_SET
                        {
                        id = EAknSCTUpperCase;
                        chars = text_chi_input_star_key;
                        },
                    SCT_CHAR_SET
                        {
                        id = EAknSCTLowerCase;
                        chars = text_chi_input_star_key2;
                        },
                    SCT_CHAR_SET
                        {
                        id = EAknSCTQwerty;
                        chars = qtn_sct_special_characters_qwerty;
                        }
                    };
                };
            }
        };
    }

RESOURCE SPECIAL_CHAR_TABLE r_avkon_menu_sct_row_default_contents_chinese
    {
    contents =
        {
        SCT_CHAR_SET
            {
            id = EAknSCTUpperCase;
            chars = text_chi_input_star_key;
            },
        SCT_CHAR_SET
            {
            id = EAknSCTLowerCase;
            chars = text_chi_input_star_key2;
            },
        SCT_CHAR_SET
            {
            id = EAknSCTQwerty;
            chars = qtn_sct_special_characters_qwerty;
            }
        };
    }

RESOURCE MENU_PANE r_avkon_predictive_mode_menu
    {
    items=
        {
        MENU_ITEM {command=EAknCmdPredictiveNormal; txt=qtn_options_t9_autocompletion_off;},
        MENU_ITEM {command=EAknCmdPredictiveAutoWord; txt=qtn_options_t9_autocompletion_on;}
        };
    }

RESOURCE DIALOG r_avkon_predictive_autocompletion_activated_note
    {
    flags=EEikDialogFlagNoDrag | EEikDialogFlagNoTitleBar | EEikDialogFlagCbaButtons;
    buttons=r_avkon_softkeys_empty;
    items=
        {
        DLG_LINE
            {
            type=EAknCtNote;
            id=EGeneralNote;
            control= AVKON_NOTE
                {
                layout = EGeneralLayout;
                singular_label = qtn_autocompletion_enabled;
                animation = r_qgn_note_ok_anim;
                };
            }
        };
    }


RESOURCE DIALOG r_avkon_predictive_autocompletion_deactivated_note
    {
    flags=EEikDialogFlagNoDrag | EEikDialogFlagNoTitleBar | EEikDialogFlagCbaButtons;
    buttons=r_avkon_softkeys_empty;
    items=
        {
        DLG_LINE
            {
            type=EAknCtNote;
            id=EGeneralNote;
            control= AVKON_NOTE
                {
                layout = EGeneralLayout;
                singular_label = qtn_autocompletion_disabled;
                animation = r_qgn_note_ok_anim;
                };
            }
        };
    }

RESOURCE MENU_PANE r_avkon_peninput_option_japin_tin_convert_on_submenu
    {
    items=
        {
        // Japanese
        MENU_ITEM { command=EPenInputJpCmdConversionOn; flags=EEikMenuItemRadioStart; txt=qtn_japin_tin_convert_radio_on; },
        MENU_ITEM { command=EPenInputJpCmdConversionOff; flags=EEikMenuItemRadioEnd|EEikMenuItemSymbolOn; txt=qtn_japin_tin_convert_radio_off; }
        };
    }

RESOURCE MENU_PANE r_avkon_peninput_option_japin_tin_convert_off_submenu
    {
    items=
        {
        // Japanese
        MENU_ITEM { command=EPenInputJpCmdConversionOn; flags=EEikMenuItemRadioStart|EEikMenuItemSymbolOn; txt=qtn_japin_tin_convert_radio_on; },
        MENU_ITEM { command=EPenInputJpCmdConversionOff; flags=EEikMenuItemRadioEnd; txt=qtn_japin_tin_convert_radio_off; }
        };
    }

RESOURCE MENU_PANE r_avkon_peninput_option_japin_edit_predict_on_submenu
    {
    items=
        {
        // Japanese
        MENU_ITEM { command=EPenInputJpCmdPredictiveOn; flags=EEikMenuItemRadioStart; txt=qtn_japin_edit_predict_radio_on; },
        MENU_ITEM { command=EPenInputJpCmdPredictiveOff; flags=EEikMenuItemRadioEnd|EEikMenuItemSymbolOn; txt=qtn_japin_edit_predict_radio_off; }
        };
    }

RESOURCE MENU_PANE r_avkon_peninput_option_japin_edit_predict_off_submenu
    {
    items=
        {
        // Japanese
        MENU_ITEM { command=EPenInputJpCmdPredictiveOn; flags=EEikMenuItemRadioStart|EEikMenuItemSymbolOn; txt=qtn_japin_edit_predict_radio_on; },
        MENU_ITEM { command=EPenInputJpCmdPredictiveOff; flags=EEikMenuItemRadioEnd; txt=qtn_japin_edit_predict_radio_off; }
        };
    }

RESOURCE MENU_PANE r_avkon_fep_cmd_mode_japin_edit_predict_on_submenu
    {
    items=
        {
        // Japanese
        MENU_ITEM { command=EJapanFepCmdModePredictiveOn; flags=EEikMenuItemRadioStart; txt=qtn_japin_edit_predict_radio_on; },
        MENU_ITEM { command=EJapanFepCmdModePredictiveOff; flags=EEikMenuItemRadioEnd|EEikMenuItemSymbolOn; txt=qtn_japin_edit_predict_radio_off; }
        };
    }

RESOURCE MENU_PANE r_avkon_fep_cmd_mode_japin_edit_predict_off_submenu
    {
    items=
        {
        // Japanese
        MENU_ITEM { command=EJapanFepCmdModePredictiveOn; flags=EEikMenuItemRadioStart|EEikMenuItemSymbolOn; txt=qtn_japin_edit_predict_radio_on; },
        MENU_ITEM { command=EJapanFepCmdModePredictiveOff; flags=EEikMenuItemRadioEnd; txt=qtn_japin_edit_predict_radio_off; }
        };
    }

RESOURCE STATUS_PANE_LAYOUT r_avkon_widescreen_pane_layout_idle
    {
    position = EEikStatusPaneLayoutAknLafDefined;
    pane_tree = SPANE_LAYOUT_TREE_NODE
        {
        size = 1;      // Dummy size, real size comes from AknLayout
        sub_panes =
            {
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidTitle;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidNavi;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidIndic;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidSignal;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidDigitalClock;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidBattery;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidEmpty;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                }
            };
        };
    }

RESOURCE SLIDER_WITH_FEEDBACK_STYLE r_avkon_vertical_popup_slider
    {
    feedbackstyle = EAknSliderFbDynamic;
    layout = EAknSliderLayoutVertical;
    minvalue = 0;
    maxvalue = 10;
    step = 1;
    minlabel = "-";
    maxlabel = "+";
    }

// ---------------------------------------------------------------------------
// r_avkon_sct_category_button_half
// This is the category button definition for Half-width character(EAknSCTHalfCase)
// ---------------------------------------------------------------------------
//
RESOURCE AVKON_BUTTON r_avkon_sct_category_button_half
    {
    states =
        {
        AVKON_BUTTON_STATE
            {
            bmpfile = AVKON_BITMAP_FILE;
            bmpid = EMbmAvkonQgn_indi_fep_sct_hw_symbols;
            bmpmask = EMbmAvkonQgn_indi_fep_sct_hw_symbols_mask;
            dim_bmpid = EMbmAvkonQgn_indi_fep_sct_hw_symbols_dimmed;
            dim_bmpmask = EMbmAvkonQgn_indi_fep_sct_hw_symbols_dimmed_mask;
            press_bmpid = EMbmAvkonQgn_indi_fep_sct_hw_symbols_dimmed;
            press_bmpmask = EMbmAvkonQgn_indi_fep_sct_hw_symbols_dimmed_mask;
            },
        AVKON_BUTTON_STATE
            {
            bmpfile = AVKON_BITMAP_FILE;
            bmpid = EMbmAvkonQgn_indi_fep_sct_hw_symbols_dimmed;
            bmpmask = EMbmAvkonQgn_indi_fep_sct_hw_symbols_dimmed_mask;
            dim_bmpid = EMbmAvkonQgn_indi_fep_sct_hw_symbols_dimmed;
            dim_bmpmask = EMbmAvkonQgn_indi_fep_sct_hw_symbols_dimmed_mask;
            press_bmpid = EMbmAvkonQgn_indi_fep_sct_hw_symbols_dimmed;
            press_bmpmask = EMbmAvkonQgn_indi_fep_sct_hw_symbols_dimmed_mask;
            }
        };
    }

// ---------------------------------------------------------------------------
// r_avkon_sct_category_button_full
// This is the category button definition for Full-width character(EAknSCTFullCase)
// ---------------------------------------------------------------------------
//
RESOURCE AVKON_BUTTON r_avkon_sct_category_button_full
    {
    states =
        {
        AVKON_BUTTON_STATE
            {
            bmpfile = AVKON_BITMAP_FILE;
            bmpid = EMbmAvkonQgn_indi_fep_sct_fw_symbols;
            bmpmask = EMbmAvkonQgn_indi_fep_sct_fw_symbols_mask;
            dim_bmpid = EMbmAvkonQgn_indi_fep_sct_fw_symbols_dimmed;
            dim_bmpmask = EMbmAvkonQgn_indi_fep_sct_fw_symbols_dimmed_mask;
            press_bmpid = EMbmAvkonQgn_indi_fep_sct_fw_symbols_dimmed;
            press_bmpmask = EMbmAvkonQgn_indi_fep_sct_fw_symbols_dimmed_mask;
            },
        AVKON_BUTTON_STATE
            {
            txt     = "";
            bmpfile = AVKON_BITMAP_FILE;
            bmpid = EMbmAvkonQgn_indi_fep_sct_fw_symbols_dimmed;
            bmpmask = EMbmAvkonQgn_indi_fep_sct_fw_symbols_dimmed_mask;
            dim_bmpid = EMbmAvkonQgn_indi_fep_sct_fw_symbols_dimmed;
            dim_bmpmask = EMbmAvkonQgn_indi_fep_sct_fw_symbols_dimmed_mask;
            press_bmpid = EMbmAvkonQgn_indi_fep_sct_fw_symbols_dimmed;
            press_bmpmask = EMbmAvkonQgn_indi_fep_sct_fw_symbols_dimmed_mask;
            }
        };
    }

// ---------------------------------------------------------------------------
// r_avkon_sct_category_button_picto
// This is the category button definition for Picto character(EAknSCTPictograph)
// ---------------------------------------------------------------------------
//
RESOURCE AVKON_BUTTON r_avkon_sct_category_button_picto
    {
    states =
        {
        AVKON_BUTTON_STATE
            {
            bmpfile = AVKON_BITMAP_FILE;
            bmpid = EMbmAvkonQgn_indi_fep_sct_softbank;
            bmpmask = EMbmAvkonQgn_indi_fep_sct_softbank_mask;
            dim_bmpid = EMbmAvkonQgn_indi_fep_sct_softbank_dimmed;
            dim_bmpmask = EMbmAvkonQgn_indi_fep_sct_softbank_dimmed_mask;
            press_bmpid = EMbmAvkonQgn_indi_fep_sct_softbank_dimmed;
            press_bmpmask = EMbmAvkonQgn_indi_fep_sct_softbank_dimmed_mask;
            },
        AVKON_BUTTON_STATE
            {
            bmpfile = AVKON_BITMAP_FILE;
            bmpid = EMbmAvkonQgn_indi_fep_sct_softbank_dimmed;
            bmpmask = EMbmAvkonQgn_indi_fep_sct_softbank_dimmed_mask;
            dim_bmpid = EMbmAvkonQgn_indi_fep_sct_softbank_dimmed;
            dim_bmpmask = EMbmAvkonQgn_indi_fep_sct_softbank_dimmed_mask;
            press_bmpid = EMbmAvkonQgn_indi_fep_sct_softbank_dimmed;
            press_bmpmask = EMbmAvkonQgn_indi_fep_sct_softbank_dimmed_mask;
            }
        };
    }

// ---------------------------------------------------------------------------
// r_avkon_sct_category_button_picto1
// This is the category button definition for Picto1 character(EAknSCTPictograph1)
// ---------------------------------------------------------------------------
//
RESOURCE AVKON_BUTTON r_avkon_sct_category_button_picto1
    {
    states =
        {
        AVKON_BUTTON_STATE
            {
            bmpfile = AVKON_BITMAP_FILE;
            bmpid = EMbmAvkonQgn_indi_fep_sct_docomo1;
            bmpmask = EMbmAvkonQgn_indi_fep_sct_docomo1_mask;
            dim_bmpid = EMbmAvkonQgn_indi_fep_sct_docomo1_dimmed;
            dim_bmpmask = EMbmAvkonQgn_indi_fep_sct_docomo1_dimmed_mask;
            press_bmpid = EMbmAvkonQgn_indi_fep_sct_docomo1_dimmed;
            press_bmpmask = EMbmAvkonQgn_indi_fep_sct_docomo1_dimmed_mask;
            },
        AVKON_BUTTON_STATE
            {
            bmpfile = AVKON_BITMAP_FILE;
            bmpid = EMbmAvkonQgn_indi_fep_sct_docomo1_dimmed;
            bmpmask = EMbmAvkonQgn_indi_fep_sct_docomo1_dimmed_mask;
            dim_bmpid = EMbmAvkonQgn_indi_fep_sct_docomo1_dimmed;
            dim_bmpmask = EMbmAvkonQgn_indi_fep_sct_docomo1_dimmed_mask;
            press_bmpid = EMbmAvkonQgn_indi_fep_sct_docomo1_dimmed;
            press_bmpmask = EMbmAvkonQgn_indi_fep_sct_docomo1_dimmed_mask;
            }
        };
    }

// ---------------------------------------------------------------------------
// r_avkon_sct_category_button_picto2
// This is the category button definition for Picto2 character(EAknSCTPictograph2)
// ---------------------------------------------------------------------------
//
RESOURCE AVKON_BUTTON r_avkon_sct_category_button_picto2
    {
    states =
        {
        AVKON_BUTTON_STATE
            {
            bmpfile = AVKON_BITMAP_FILE;
            bmpid = EMbmAvkonQgn_indi_fep_sct_docomo2;
            bmpmask = EMbmAvkonQgn_indi_fep_sct_docomo2_mask;
            dim_bmpid = EMbmAvkonQgn_indi_fep_sct_docomo2_dimmed;
            dim_bmpmask = EMbmAvkonQgn_indi_fep_sct_docomo2_dimmed_mask;
            press_bmpid = EMbmAvkonQgn_indi_fep_sct_docomo2_dimmed;
            press_bmpmask = EMbmAvkonQgn_indi_fep_sct_docomo2_dimmed_mask;
            },
        AVKON_BUTTON_STATE
            {
            bmpfile = AVKON_BITMAP_FILE;
            bmpid = EMbmAvkonQgn_indi_fep_sct_docomo2_dimmed;
            bmpmask = EMbmAvkonQgn_indi_fep_sct_docomo2_dimmed_mask;
            dim_bmpid = EMbmAvkonQgn_indi_fep_sct_docomo2_dimmed;
            dim_bmpmask = EMbmAvkonQgn_indi_fep_sct_docomo2_dimmed_mask;
            press_bmpid = EMbmAvkonQgn_indi_fep_sct_docomo2_dimmed;
            press_bmpmask = EMbmAvkonQgn_indi_fep_sct_docomo2_dimmed_mask;
            }
        };
    }

// ---------------------------------------------------------------------------
// r_avkon_sct_category_button_control
// This is the category buttons definition
// ---------------------------------------------------------------------------
//
RESOURCE AVKON_SCT_CATEGORY_BUTTONS r_avkon_sct_category_button_control
    {
    category_buttons =
        {
        AVKON_SCT_CATEGORY_BUTTON
            {
            categorybuttonid = EAknSCTCategoryButtonHalfCase;
            id = EAknSCTHalfCase;
            button = r_avkon_sct_category_button_half;
            },
        AVKON_SCT_CATEGORY_BUTTON
            {
            categorybuttonid = EAknSCTCategoryButtonFullCase;
            id = EAknSCTFullCase;
            button = r_avkon_sct_category_button_full;
            },
        AVKON_SCT_CATEGORY_BUTTON
            {
            categorybuttonid = EAknSCTCategoryButtonPicto;
            id = EAknSCTPictograph;
            button = r_avkon_sct_category_button_picto;
            },
        AVKON_SCT_CATEGORY_BUTTON
            {
            categorybuttonid = EAknSCTCategoryButtonPicto1;
            id = EAknSCTPictograph1;
            button = r_avkon_sct_category_button_picto1;
            },
        AVKON_SCT_CATEGORY_BUTTON
            {
            categorybuttonid = EAknSCTCategoryButtonPicto2;
            id = EAknSCTPictograph2;
            button = r_avkon_sct_category_button_picto2;
            }
        };
    }

// ---------------------------------------------------------------------------
// r_avkon_softkey_japan_sct_back
// This is the softkey string for SCT with Category button
// ---------------------------------------------------------------------------
//
RESOURCE TBUF r_avkon_softkey_japan_sct_back
    {
    buf = qtn_japin_edit_sct_back;
    }

// ---------------------------------------------------------------------------
// r_avkon_sct_heading_close_button
// This is the close button definition for SCT with Category button + Touch input
// ---------------------------------------------------------------------------
//
RESOURCE AVKON_BUTTON r_avkon_sct_heading_close_button
    {
    states =
        {
        AVKON_BUTTON_STATE
            {
            bmpfile = AVKON_BITMAP_FILE;
            bmpid = EMbmAvkonQgn_indi_button_preview_close;
            bmpmask = EMbmAvkonQgn_indi_button_preview_close_mask;
            dim_bmpid = EMbmAvkonQgn_indi_button_preview_close;
            dim_bmpmask = EMbmAvkonQgn_indi_button_preview_close_mask;
            press_bmpid = EMbmAvkonQgn_indi_button_preview_close;
            press_bmpmask = EMbmAvkonQgn_indi_button_preview_close_mask;
            }
        };
    }

// ---------------------------------------------------------------------------
// r_avkon_widescreen_pane_layout_usual_flat
// Flat usual status pane layout for nHD landscape.
// ---------------------------------------------------------------------------
//
RESOURCE STATUS_PANE_LAYOUT r_avkon_widescreen_pane_layout_usual_flat
    {
    position = EEikStatusPaneLayoutAknLafDefined;
    pane_tree = SPANE_LAYOUT_TREE_NODE
        {
        size = 1;      // Dummy size, real size comes from AknLayout
        sub_panes =
            {
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidTitle;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidNavi;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidIndic;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidSignal;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidBattery;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                }
            };
        };
    }

// ---------------------------------------------------------------------------
// r_avkon_widescreen_pane_layout_idle_flat
// Flat idle status pane layout for nHD landscape.
// ---------------------------------------------------------------------------
//
RESOURCE STATUS_PANE_LAYOUT r_avkon_widescreen_pane_layout_idle_flat
    {
    position = EEikStatusPaneLayoutAknLafDefined;
    pane_tree = SPANE_LAYOUT_TREE_NODE
        {
        size = 1;      // Dummy size, real size comes from AknLayout
        sub_panes =
            {
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidTitle;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidNavi;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidIndic;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidSignal;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidBattery;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                }
            };
        };
    }

// ---------------------------------------------------------------------------
// r_avkon_widescreen_pane_layout_usual_flat_no_softkeys
// Flat usual status pane layout for nHD landscape without the right area.
// ---------------------------------------------------------------------------
//
RESOURCE STATUS_PANE_LAYOUT r_avkon_widescreen_pane_layout_usual_flat_no_softkeys
    {
    position = EEikStatusPaneLayoutAknLafDefined;
    pane_tree = SPANE_LAYOUT_TREE_NODE
        {
        size = 1;      // Dummy size, real size comes from AknLayout
        sub_panes =
            {
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidTitle;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidNavi;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidIndic;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidSignal;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidDigitalClock;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidBattery;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                }
            };
        };
    }

// ---------------------------------------------------------------------------
// r_avkon_widescreen_pane_layout_idle_flat_no_softkeys
// Flat idle status pane layout for nHD landscape without the right area.
// ---------------------------------------------------------------------------
//
RESOURCE STATUS_PANE_LAYOUT r_avkon_widescreen_pane_layout_idle_flat_no_softkeys
    {
    position = EEikStatusPaneLayoutAknLafDefined;
    pane_tree = SPANE_LAYOUT_TREE_NODE
        {
        size = 1;      // Dummy size, real size comes from AknLayout
        sub_panes =
            {
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidTitle;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidNavi;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidIndic;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidSignal;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                },
            SPANE_LAYOUT_TREE_NODE
                {
                id = EEikStatusPaneUidBattery;
                size = 1;      // Dummy size, real size comes from AknLayout
                sub_panes = {};
                }
            };
        };
    }

// ---------------------------------------------------------------------------
// r_avkon_horizontal_popup_slider
// horizontal touch vollume popup.
// ---------------------------------------------------------------------------
//
RESOURCE SLIDER_WITH_FEEDBACK_STYLE r_avkon_horizontal_popup_slider
    {
    feedbackstyle = EAknSliderFbDynamic;
    layout = EAknSliderLayoutHorizontal;
    minvalue = 0;
    maxvalue = 100;
    step = 1;
    minlabel = "-";
    maxlabel = "+";
    }

// ---------------------------------------------------------------------------
// r_avkon_indicator_popup_defaults
// Array of the universal indicator popup default texts.
// ---------------------------------------------------------------------------
//
RESOURCE ARRAY r_avkon_indicator_popup_defaults
    {
    items =
        {
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorIrActive;
            text          = qtn_uni_ind_infrared_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorEnvelope;
            text          = qtn_uni_ind_messages_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorEmailMessage;
            text          = qtn_uni_ind_emails_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorDataMessage;
            text          = qtn_uni_ind_messages_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorFaxMessage;
            text          = qtn_uni_ind_messages_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorOtherMessage;
            text          = qtn_uni_ind_messages_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorSecuredConnection;
            text          = qtn_uni_ind_secconn_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorVoiceMailWaiting;
            text          = qtn_uni_ind_voice_message_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorVoiceMailWaitingOnLine1;
            text          = qtn_uni_ind_voice_message_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorVoiceMailWaitingOnLine2;
            text          = qtn_uni_ind_voice_message_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorVoiceMailWaitingOnBothLines;
            text          = qtn_uni_ind_voice_message_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorHomeZone;
            text          = qtn_uni_ind_homezone_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorBluetooth;
            text          = qtn_uni_ind_bluetooth_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorBluetoothModuleOn;
            text          = qtn_uni_ind_bluetooth_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorOutbox;
            text          = qtn_uni_ind_outbox_stat;
            },
        /*AVKON_INDICATOR_POPUP_ITEM  // Keyguard indicator is not shown in the popup.
            {
            indicator_uid = EAknIndicatorKeyguard;
            text          =
            },*/
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorAllCallsForwarded;
            text          = qtn_uni_ind_calldiv_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorCallsForwardedOnLine1;
            text          = qtn_uni_ind_calldiv_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorCallsForwardedOnLine2;
            text          = qtn_uni_ind_calldiv_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorCallsForwardedOnBothLines;
            text          = qtn_uni_ind_calldiv_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorCallsForwardedToVoiceMailbox;
            text          = qtn_uni_ind_calldiv_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorSelectedLine;
            text          = qtn_uni_ind_selected_line_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorAlarmClock;
            text          = qtn_uni_ind_alarm_set_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorStopWatch;
            text          = qtn_uni_ind_stopwatch_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorHeadset;
            text          = qtn_uni_ind_headset_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorLoopset;
            text          = qtn_uni_ind_loopset_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorIHFActive;
            text          = qtn_uni_ind_handsfree_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorInstantMessage;
            text          = qtn_uni_ind_im_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorTTY;
            text          = qtn_uni_ind_tty_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorUSBConnection;
            text          = qtn_uni_ind_usb_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorMissedCalls;
            text          = qtn_uni_ind_missed_calls_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorRemoteMailboxEmailMessage;
            text          = qtn_uni_ind_emails_stat;
            },
        /*AVKON_INDICATOR_POPUP_ITEM  // Location triggering indicators not used.
            {
            indicator_uid = EAknIndicatorLocation;
            text          =
            },*/
        /*AVKON_INDICATOR_POPUP_ITEM  // Headset unavailable indicator not used.
            {
            indicator_uid = EAknIndicatorHeadsetUnavailable;
            text          =
            },*/
        /*AVKON_INDICATOR_POPUP_ITEM  // Roaming indicator not used.
            {
            indicator_uid = EAknIndicatorRoaming;
            text          =
            },*/
        /*AVKON_INDICATOR_POPUP_ITEM  // Location triggering indicators not used.
            {
            indicator_uid = EAknIndicatorLocationOn;
            text          =
            },
        AVKON_INDICATOR_POPUP_ITEM    // Location triggering indicators not used.
            {
            indicator_uid = EAknIndicatorLocationOff;
            text          =
            },*/
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorPoC;
            text          = qtn_uni_ind_ptt_online_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorWlanAvailable;
            text          = qtn_uni_ind_wlannet_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorWlanActive;
            text          = qtn_uni_ind_wlanconn_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorWlanActiveSecure;
            text          = qtn_uni_ind_wlanconn_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorCarkit;
            text          = qtn_uni_ind_carkit_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorPoCDnD;
            text          = qtn_uni_ind_ptt_dnd_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorPoCMissed;
            text          = qtn_uni_ind_missed_ptt_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorTvOut;
            text          = qtn_uni_ind_tvout_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorVoIP;
            text          = qtn_uni_ind_voip_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorTARM;
            text          = qtn_uni_ind_termmanag_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorTARMModuleOn;
            text          = qtn_uni_ind_termsecurity_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorMobileTV;
            text          = qtn_uni_ind_mobiletv_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorMobileTVRec;
            text          = qtn_uni_ind_mobiletv_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorHAC;
            text          = qtn_uni_ind_hearing_aid_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorMemoryCard;
            text          = qtn_uni_ind_memorycard_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorVideoSharing;
            text          = qtn_uni_ind_videoshare_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorSynchronization;
            text          = qtn_uni_ind_synch_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorGPS;
            text          = qtn_uni_ind_gps_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorBluetoothVisible;
            text          = qtn_uni_ind_bluetooth_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorBluetoothModuleOnVisible;
            text          = qtn_uni_ind_bluetooth_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorFMTxSending;
            text          = qtn_uni_ind_fmtx_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorFMTxEnabled;
            text          = qtn_uni_ind_fmtx_stat;
            },

        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorUSBMemConnected;
            text          = qtn_uni_ind_usbmem_conn_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorUSBMemActive;
            text          = qtn_uni_ind_usbmem_active_stat;
            },
        AVKON_INDICATOR_POPUP_ITEM
            {
            indicator_uid = EAknIndicatorMissedCalendarAlarm;
            text          = qtn_uni_ind_caled_alarm_stat;
            }
        };
    }

RESOURCE MENU_PANE r_avkon_touchinput_preview
    {
    items=
        {
        MENU_ITEM {command=EPenInputCmdPreviewOn; txt=qtn_tin_option_submenu_radio_button_on;flags = EEikMenuItemRadioStart;},
        MENU_ITEM {command=EPenInputCmdPreviewOff; txt=qtn_tin_option_submenu_radio_button_off;flags = EEikMenuItemRadioEnd;}
        };
    }

RESOURCE MENU_PANE r_avkon_touch_touchinput_menu
    {
    items=
        {
        MENU_ITEM { command=EEikCmdEditCopy;  txt=qtn_editing_shift_menu_copy; },
        MENU_ITEM { command=EEikCmdEditCut;   txt=qtn_editing_shift_menu_cut; },
        MENU_ITEM { command=EEikCmdEditPaste; txt=qtn_editing_shift_menu_paste; },
        MENU_ITEM { command=EAknCmdEditInsertSymbol; flags=EEikMenuItemDimmed; txt=qtn_tin_option_menu_add_symbol; },
        MENU_ITEM { command=EAknCmdEditInsertSmiley; flags=EEikMenuItemDimmed; txt=qtn_tin_option_menu_add_smiley; },
        MENU_ITEM { command=EAknCmdPredictiveTextCascade; cascade=r_avkon_predictive_text_menu_t9; flags=EEikMenuItemDimmed; txt=qtn_options_t9; },
        MENU_ITEM { command=EAknCmdMultitapPredictiveT9On; flags=EEikMenuItemDimmed; txt=qtn_options_t9_on; },
        MENU_ITEM { command=EPenInputPreview; cascade=r_avkon_touchinput_preview; txt=qtn_tin_option_menu_character_preview; },
        MENU_ITEM { command=EAknCmdInputLanguage; txt=qtn_tin_option_menu_writing_language; },
        MENU_ITEM { command=EPenInputCmdRecognitionWithDictionary; flags=EEikMenuItemDimmed; txt=qtn_tin_option_menu_arabic_recognition; },
        MENU_ITEM { command=EJapanFepCmdModeHiragana; flags=EEikMenuItemDimmed;txt=qtn_japin_edit_hiragana; },
        MENU_ITEM { command=EJapanFepCmdModeKatakana; flags=EEikMenuItemDimmed;txt=qtn_japin_edit_katakana; },
        MENU_ITEM { command=EJapanFepCmdEditModeAlpha; flags=EEikMenuItemDimmed; txt=qtn_japin_edit_latin; },
        MENU_ITEM { command=EJapanFepCmdEditModeNumber; flags=EEikMenuItemDimmed; txt=qtn_japin_edit_number; },
        MENU_ITEM { command=EJapanFepCmdModeFullWidth; flags=EEikMenuItemDimmed; txt=qtn_japin_edit_full_width; },
        MENU_ITEM { command=EJapanFepCmdModeHalfWidth; flags=EEikMenuItemDimmed; txt=qtn_japin_edit_half_width; },
        MENU_ITEM { command=EChinFepCmdModePinyin; txt=text_chi_input_pinyin; },
        MENU_ITEM { command=EChinFepCmdModeZhuyin; txt=text_chi_input_zhuyin; },
        MENU_ITEM { command=EChinFepCmdModeStroke; txt=text_chi_input_stroke; },
        MENU_ITEM { command=EChinFepCmdModeZhuyinFind; txt=qtn_chi_find_zhuyin; },
        MENU_ITEM { command=EChinFepCmdModeStrokeFind; txt=qtn_chi_find_stroke; },
        MENU_ITEM { command=EAknCmdEditModeAlpha; flags=EEikMenuItemDimmed; txt=qtn_editing_shift_menu_alpha; },
        MENU_ITEM { command=EAknCmdEditModeKorean; flags=EEikMenuItemDimmed; txt=qtn_activate_korean_mode; },
        MENU_ITEM { command=EAknCmdEditModeLatinText; txt=qtn_chi_input_latin_text; },
        MENU_ITEM { command=EChinFepCmdModeLatinUpper; txt=qtn_chi_input_latin_upper; },
        MENU_ITEM { command=EChinFepCmdModeLatinLower; txt=qtn_chi_input_latin_lower; },
        MENU_ITEM { command=EAknCmdEditModeNumber; flags=EEikMenuItemDimmed; txt=qtn_editing_shift_menu_numbers; },
        MENU_ITEM { command=EChinFepCmdModeNumber; flags=EEikMenuItemDimmed; txt=text_chi_input_number_entry; },
        MENU_ITEM { command=EAknCmdEditModeArabicIndicNumber; flags=EEikMenuItemDimmed; txt=qtn_ah_edit_menu_arabic_nbrs; },
        MENU_ITEM { command=EAknCmdEditModeEasternArabicIndicNumber; flags=EEikMenuItemDimmed; txt=qtn_ah_edit_menu_arabic_nbrs; },
        MENU_ITEM { command=EAknCmdEditModeIndicNumber; flags=EEikMenuItemDimmed; txt=qtn_hi_edit_menu_devanagari_nbrs; },
        MENU_ITEM { command=EAknCmdEditInsertNumber; flags=EEikMenuItemDimmed; txt=qtn_options_edit_insert_number; },
        MENU_ITEM { command=EJapanFepCmdModeKutenCodeInput; flags=EEikMenuItemDimmed; txt=qtn_japin_edit_kuten_code; },
        MENU_ITEM { command=EPenInputCmdSetting; txt=qtn_tin_option_menu_settings; },
        MENU_ITEM { command=EPenInputCmdHwrTraining; txt=qtn_tin_option_menu_training;},
		MENU_ITEM { command=EPenInputCmdVITUT; flags=EEikMenuItemDimmed; txt=qtn_input_switcher_itu_t; },
		MENU_ITEM { command=EPeninputCmdFSQ; flags=EEikMenuItemDimmed; txt=qtn_input_switcher_fs_qwerty; },
        MENU_ITEM { command=EFepInputCmdHelp; txt=qtn_tin_option_menu_help; },
        MENU_ITEM { command=EAknCmdEditModeEnglish; flags=EEikMenuItemDimmed; txt=qtn_activate_english_mode; }
        };
    }
//
// EDIT MODE MENU
//
RESOURCE MENU_PANE r_avkon_touch_indicator_edit_mode_menu
    {
    items=
        {
        MENU_ITEM { command=EAknCmdEditInsertSymbol; flags=EEikMenuItemDimmed; txt=text_edit_menu_more_symbols; },
        MENU_ITEM { command=EAknCmdEditInsertSmiley; flags=EEikMenuItemDimmed; txt=qtn_edit_menu_more_smileys; },
        MENU_ITEM { command=EJapanFepCmdModeHiragana; flags=EEikMenuItemDimmed;txt=qtn_japin_edit_hiragana; },
        MENU_ITEM { command=EJapanFepCmdModeKatakana; flags=EEikMenuItemDimmed;txt=qtn_japin_edit_katakana; },
        MENU_ITEM { command=EJapanFepCmdEditModeAlpha; flags=EEikMenuItemDimmed; txt=qtn_japin_edit_latin; },
        MENU_ITEM { command=EJapanFepCmdEditModeNumber; flags=EEikMenuItemDimmed; txt=qtn_japin_edit_number; },
        MENU_ITEM { command=EJapanFepCmdModeFullWidth; flags=EEikMenuItemDimmed; txt=qtn_japin_edit_full_width; },
        MENU_ITEM { command=EJapanFepCmdModeHalfWidth; flags=EEikMenuItemDimmed; txt=qtn_japin_edit_half_width; },
        MENU_ITEM { command=EChinFepCmdModePinyin; txt=text_chi_input_pinyin; },
        MENU_ITEM { command=EChinFepCmdModeZhuyin; txt=text_chi_input_zhuyin; },
        MENU_ITEM { command=EChinFepCmdModeStroke; txt=text_chi_input_stroke; },
        MENU_ITEM { cascade=r_avkon_fep_cmd_mode_japin_edit_predict_on_submenu; command=EJapanFepCmdModePredictiveOn; flags=EEikMenuItemDimmed; txt=qtn_japin_edit_predict; },
        MENU_ITEM { cascade=r_avkon_fep_cmd_mode_japin_edit_predict_off_submenu; command=EJapanFepCmdModePredictiveOff; flags=EEikMenuItemDimmed; txt=qtn_japin_edit_predict; },
        MENU_ITEM { command=EAknCmdT9PredictiveT9Off; flags=EEikMenuItemDimmed; txt=qtn_editing_state_indicator_list_prediction_off; },
        MENU_ITEM { command=EAknCmdPredictiveTextCascade; cascade=r_avkon_predictive_text_menu_t9; flags=EEikMenuItemDimmed; txt=qtn_options_t9; },
#ifndef RD_INTELLIGENT_TEXT_INPUT
        MENU_ITEM { command=EAknCmdPredictiveModeCascade; cascade=r_avkon_predictive_mode_menu; flags=EEikMenuItemDimmed; txt=qtn_options_t9_autocompletion; },
#endif //RD_INTELLIGENT_TEXT_INPUT
        MENU_ITEM { command=EJapanFepCmdPredictiveTextCascade; cascade=r_avkon_predictive_text_menu_t9; flags=EEikMenuItemDimmed; txt=qtn_japin_edit_eng_predictive; },
        MENU_ITEM { command=EAknCmdMultitapPredictiveT9On; flags=EEikMenuItemDimmed; txt=qtn_editing_state_indicator_list_prediction_on; },
        MENU_ITEM { command=EJapanFepCmdMultitapPredictiveT9On; flags=EEikMenuItemDimmed; txt=qtn_japin_edit_eng_predict_on; },
        MENU_ITEM { command=EChinFepCmdModeZhuyinFind; txt=qtn_chi_find_zhuyin; },
        MENU_ITEM { command=EChinFepCmdModeStrokeFind; txt=qtn_chi_find_stroke; },
        MENU_ITEM { command=EAknCmdEditModeAlpha; flags=EEikMenuItemDimmed; txt=qtn_editing_state_indicator_list_alpha; },
        MENU_ITEM { command=EAknCmdEditModeLatinText; txt=qtn_chi_input_latin_text; },
        MENU_ITEM { command=EChinFepCmdModeLatinUpper; txt=qtn_editing_state_indicator_list_upper_case; },
        MENU_ITEM { command=EChinFepCmdModeLatinLower; txt=qtn_editing_state_indicator_list_lower_case; },
        MENU_ITEM { command=EAknCmdEditModeNumber; flags=EEikMenuItemDimmed; txt=qtn_editing_state_indicator_list_numbers; },
        MENU_ITEM { command=EChinFepCmdModeNumber; flags=EEikMenuItemDimmed; txt=text_chi_input_number_entry; },
        MENU_ITEM { command=EAknCmdEditModeArabicIndicNumber; flags=EEikMenuItemDimmed; txt=qtn_ah_edit_menu_arabic_nbrs; },
        MENU_ITEM { command=EAknCmdEditModeEasternArabicIndicNumber; flags=EEikMenuItemDimmed; txt=qtn_ah_edit_menu_arabic_nbrs; },
        MENU_ITEM { command=EAknCmdEditModeIndicNumber; flags=EEikMenuItemDimmed; txt=qtn_hi_edit_menu_devanagari_nbrs; },
        MENU_ITEM { command=EEikCmdEditCopy; flags=EEikMenuItemDimmed; txt=qtn_editing_shift_menu_copy; },
        MENU_ITEM { command=EEikCmdEditCut; flags=EEikMenuItemDimmed; txt=qtn_editing_shift_menu_cut; },
        MENU_ITEM { command=EEikCmdEditPaste; flags=EEikMenuItemDimmed; txt=qtn_editing_shift_menu_paste; },
        MENU_ITEM { command=EAknCmdEditInsertNumber; flags=EEikMenuItemDimmed; txt=qtn_options_edit_insert_number; },
        MENU_ITEM { command=EJapanFepCmdModeUserDic; txt=qtn_japin_edit_register_word; },
        MENU_ITEM { command=EAknCmdEditClearDirectionRight; flags=EEikMenuItemDimmed; txt=qtn_japin_edit_delete_right; },
        MENU_ITEM { command=EAknCmdEditClearDirectionLeft; flags=EEikMenuItemDimmed; txt=qtn_japin_edit_delete_left; },
        MENU_ITEM { command=EJapanFepCmdModeKutenCodeInput; flags=EEikMenuItemDimmed; txt=qtn_japin_edit_kuten_code; },
        MENU_ITEM { command=EChinFepCmdInstructions; flags=EEikMenuItemDimmed; txt=qtn_chi_input_instructions; },
        MENU_ITEM { command=EAknCmdEditInsertSymbolJp; flags=EEikMenuItemDimmed; txt=qtn_options_edit_insert_symbol; },
        MENU_ITEM { command=EAknCmdEditInsertPictograph; flags=EEikMenuItemDimmed; txt=qtn_japin_edit_pictographs; },
        MENU_ITEM { command=EAknCmdInputLanguage; flags=EEikMenuItemDimmed; txt=text_pup_option_input_language; },
        MENU_ITEM { command=EAknCmdInputMethod; flags=EEikMenuItemDimmed; txt=text_pup_option_input_language; cascade=r_avkon_input_mode_sub_menu; },
        MENU_ITEM { command=EChinFepCmdModeCangJieOption; flags=EEikMenuItemDimmed; txt=qtn_chi_pup_option_cangjie_mode; },
        MENU_ITEM { command=EFepInputCmdHelp; txt=qtn_tin_option_menu_help; },
        MENU_ITEM { command=EAknCmdEditModeKorean; flags=EEikMenuItemDimmed; txt=qtn_activate_korean_mode; },
        MENU_ITEM { command=EAknCmdEditModeEnglish; flags=EEikMenuItemDimmed; txt=qtn_activate_english_mode; }
        };
    }
//d: Percentage value displayed in slider
//d:
//l: popup_slider_window_t2(or popup_slider_window_t1)
//r: 5.0
RESOURCE TBUF r_qtn_select_slider_value
    {
    buf = qtn_select_slider_value;
    }

RESOURCE TBUF r_avkon_softkey_call_text
    {
    buf = text_softkey_call;
    }

RESOURCE CBA r_avkon_softkeys_ok_endcall
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyOk; txt=text_softkey_ok;},
        CBA_BUTTON {id=EAknSoftkeyCancel; txt=qtn_incal_softk_end_this;}
        };
    }


// ---------------------------------------------------------------------------
// r_avkon_sct_table_navi_table_exit_button
// This is the exit button definition
// ---------------------------------------------------------------------------
//

RESOURCE AVKON_BUTTON r_avkon_sct_navi_table_exit_button
    {
    states =
        {
        AVKON_BUTTON_STATE
            {
            bmpfile = AVKON_BITMAP_FILE;
            bmpid = EMbmAvkonQgn_indi_sct_close;
            bmpmask = EMbmAvkonQgn_indi_sct_close_mask;
            extension = r_avkon_sct_navi_table_exit_button_state_extension;
            }
        };
    }


// ---------------------------------------------------------------------------
// r_avkon_sct_table_navi_control
// This is the table navi buttons definition
// ---------------------------------------------------------------------------
//
RESOURCE AVKON_SCT_NAVI_BUTTONS r_avkon_sct_table_navi_control
    {
    navi_buttons =
        {
        AVKON_SCT_NAVI_BUTTON
            {
            id = EAknSctTableNaviExit;
            button = r_avkon_sct_navi_table_exit_button;
            },
        AVKON_SCT_NAVI_BUTTON
            {
            id = EAknSctTableNaviSpecialChar;
            button = r_avkon_sct_navi_table_special_char_button;
            },
        AVKON_SCT_NAVI_BUTTON
            {
            id = EAknSctTableNaviEmotion;
            button = r_avkon_sct_navi_table_emotion_button;
            }
        };
    }

// ---------------------------------------------------------------------------
// r_avkon_sct_navi_prev_page_button

// This is the prev page button definition
// ---------------------------------------------------------------------------
//

RESOURCE AVKON_BUTTON r_avkon_sct_navi_prev_page_button
    {
    states =
        {
        AVKON_BUTTON_STATE
            {
            bmpfile = AVKON_BITMAP_FILE;
            bmpid = EMbmAvkonQgn_indi_sct_page_prev;
            bmpmask = EMbmAvkonQgn_indi_sct_page_prev_mask;
            extension = r_avkon_sct_navi_prev_page_button_state_extension;
            }
        };
    }

// ---------------------------------------------------------------------------
// r_avkon_sct_navi_next_page_button
// This is the next page button definition
// ---------------------------------------------------------------------------
//

RESOURCE AVKON_BUTTON r_avkon_sct_navi_next_page_button
    {
    states =
        {
        AVKON_BUTTON_STATE
            {
            bmpfile = AVKON_BITMAP_FILE;
            bmpid = EMbmAvkonQgn_indi_sct_page_next;
            bmpmask = EMbmAvkonQgn_indi_sct_page_next_mask;
            extension = r_avkon_sct_navi_next_page_button_state_extension;
            }
        };
    }

// ---------------------------------------------------------------------------
// r_avkon_sct_page_navi_control
// This is the page navi buttons definition
// ---------------------------------------------------------------------------
//
RESOURCE AVKON_SCT_NAVI_BUTTONS r_avkon_sct_page_navi_control
    {
    navi_buttons =
        {
        AVKON_SCT_NAVI_BUTTON
            {
            id = EAknSctPageNaviPrevPage;
            button = r_avkon_sct_navi_prev_page_button;
            },
        AVKON_SCT_NAVI_BUTTON
            {
            id = EAknSctPageNaviNextPage;
            button = r_avkon_sct_navi_next_page_button;
            }
        };
    }

RESOURCE TBUF r_qtn_ads_digraph
    {
    buf = qtn_ads_digraph;
    }


// ---------------------------------------------------------------------------
// r_avkon_sct_navi_table_special_char_button
// This is the special char button definition
// ---------------------------------------------------------------------------
//

RESOURCE AVKON_BUTTON r_avkon_sct_navi_table_special_char_button
    {
    states =
        {
        AVKON_BUTTON_STATE
            {
            bmpfile = SMILEY_ICONS_MIF_FILE;
            bmpid = EMbmSmileyQgn_indi_switch_sct2;
            extension = r_avkon_sct_navi_table_special_char_button_state_extension;
            }
        };
    }


// ---------------------------------------------------------------------------
// r_avkon_sct_navi_table_emotion_button
// This is the emotion button definition
// ---------------------------------------------------------------------------
//

RESOURCE AVKON_BUTTON r_avkon_sct_navi_table_emotion_button
    {
    states =
        {
        AVKON_BUTTON_STATE
            {
            bmpfile = SMILEY_ICONS_MIF_FILE;
            bmpid = EMbmSmileyQgn_indi_switch_smiley2;
            extension = r_avkon_sct_navi_table_emotion_button_state_extension;
            }
        };
    }


// ---------------------------------------------------------------------------
// r_avkon_item_action_sub_menu_query
// Item action sub menu query.
// ---------------------------------------------------------------------------
//
RESOURCE DIALOG r_avkon_item_action_sub_menu_query
    {
    flags = EGeneralQueryFlags;
    buttons = r_avkon_softkeys_select_cancel__select;
    items =
        {
        DLG_LINE
            {
            type = EAknCtListQueryControl;
            id = EListQueryControl;
            control = AVKON_LIST_QUERY_CONTROL
                {
                heading  = " ";
                listtype = EAknCtSinglePopupMenuListBox;
                listbox = LISTBOX
                    {
                    flags = EAknListBoxMenuList
                        | EAknListBoxItemSpecificMenuDisabled;
                    height = 3;
                    width = 3;
                    };
                };
            }
        };
    }


// ---------------------------------------------------------------------------
// BUTTON_STATE_EXTENSION
// button state extension for sct
// ---------------------------------------------------------------------------
//
RESOURCE AVKON_BUTTON_STATE_EXTENSION r_avkon_sct_navi_table_exit_button_state_extension 
    {
    bmbSkinIdMajor= EAknsMajorGeneric;
    bmbSkinIdMinor= EAknsMinorGenericQgnIndiSctClose;
    }

RESOURCE AVKON_BUTTON_STATE_EXTENSION r_avkon_sct_navi_table_special_char_button_state_extension 
    {
    bmbSkinIdMajor= EAknsMajorGeneric;
    bmbSkinIdMinor= EAknsMinorGenericQgnIndiSwitchSct2;
    }

RESOURCE AVKON_BUTTON_STATE_EXTENSION r_avkon_sct_navi_table_emotion_button_state_extension 
    {
    bmbSkinIdMajor= EAknsMajorGeneric;
    bmbSkinIdMinor= EAknsMinorGenericQgnIndiSwitchSmiley2;
    }

RESOURCE AVKON_BUTTON_STATE_EXTENSION r_avkon_sct_navi_prev_page_button_state_extension 
    {
    bmbSkinIdMajor= EAknsMajorGeneric;
    bmbSkinIdMinor= EAknsMinorGenericQgnIndiSctPagePrev;
    }

RESOURCE AVKON_BUTTON_STATE_EXTENSION r_avkon_sct_navi_next_page_button_state_extension 
    {
    bmbSkinIdMajor= EAknsMajorGeneric;
    bmbSkinIdMinor= EAknsMinorGenericQgnIndiSctPageNext;
    }

RESOURCE DIALOG r_avkon_insert_word_fs_query
    {
    flags=EGeneralQueryFlags | EEikDialogFlagVirtualInput;
    buttons=r_avkon_softkeys_ok_cancel;
    items=
        {
        DLG_LINE
            {
            type=EAknCtQuery;
            id=EGeneralQuery;
            control= AVKON_DATA_QUERY
                {
                layout = EDataLayout;
                label = text_t9_spell_query;
                control=EDWIN
                    {
                    flags= EEikEdwinNoHorizScrolling | EEikEdwinResizable;
                    maxlength=168;
                    width=16;
                    lines=1;
                    default_input_mode=EAknEditorTextInputMode;
                    max_view_height_in_lines=5; // (5 or less lines are permitted)
                    base_line_delta=21;
                    };
                };
            }
        };
    }

// End of File
